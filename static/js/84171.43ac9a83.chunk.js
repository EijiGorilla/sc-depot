"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[27208,46481,84171],{27208:(e,t,i)=>{i.r(t),i.d(t,{getAgeExpressions:()=>d,supportedAgeUnits:()=>l,verifyDates:()=>o});var a=i(50076),s=i(42633),n=i(11563);const r=new Set(["date","number"]),l=["years","months","days","hours","minutes","seconds"];function o(e,t,i,n){const l=[];let o=null;return[t,i].every((t=>{const i=(0,s.Lk)(e,t);return i&&l.push(i),!!i}))?l[0]===l[1]?"field"===l[0]?t===i&&(o=new a.default(n,"'startTime' and 'endTime' parameters cannot be identical")):o=new a.default(n,"Invalid combination of 'startTime' and 'endTime' parameters"):r.has(l[0])&&r.has(l[1])&&(o=new a.default(n,"Invalid combination of 'startTime' and 'endTime' parameters")):o=new a.default(n,"'startTime' and 'endTime' parameters must be one of these values: a date object, unix epoch time, name of a valid date field or <now>"),o}function u(e,t,i){let a;return a="number"===t?e:"date"===t?e.getTime():'$feature["'+e+'"]',"var "+i+" = "+a+";"}function m(e,t,i,a){const n=(0,s.Lk)(e,t),r=(0,s.Lk)(e,i),l=[u(t,n,"startTime"),u(i,r,"endTime"),'var retVal = null;\n\n    if (startTime != null && endTime != null) {\n      startTime = Date(startTime);\n      endTime = Date(endTime);\n      retVal = DateDiff(endTime, startTime, "'.concat(a,'");\n    }\n\n    return retVal;')],o=[];return"field"===n&&o.push(t),"field"===r&&o.push(i),function(e){const t=e.map((e=>'$feature["'.concat(e,'"];')));return t.length?t.join("\n")+"\n":""}(o)+l.join("\n")}function d(e){const{layer:t,startTime:i,endTime:a}=e,r=(0,n.Jg)(t),l=e.unit||"days",o=(0,s.aM)(r,i,a,l);return{valueExpression:m(r,i,a,l),statisticsQuery:o,histogramQuery:o}}},46481:(e,t,i)=>{i.r(t),i.d(t,{default:()=>c});var a=i(89379),s=i(53986),n=i(50076),r=i(53430),l=i(28383),o=i(90494),u=i(42633),m=i(11563);const d=["layer"],f=["layerAdapter"],p=[...r.numericTypes,...u.i3,"time-only","string"];async function c(e){const t=await async function(e){if(null===e||void 0===e||!e.layer||!(e.field||e.valueExpression||e.sqlExpression))throw new n.default("summary-statistics:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new n.default("summary-statistics:missing-parameters","View is required when 'valueExpression' is specified");e.forBinning&&(0,o.p)(e,"summary-statistics");const{layer:t}=e,i=(0,s.A)(e,d),f=e.forBinning?m.Mi:m.G3,c=(0,m.Jg)(t,f,e.forBinning);if(!c)throw new n.default("summary-statistics:invalid-parameters","'layer' must be one of these types: "+(0,m.Ho)(f).join(", "));const y=(0,a.A)({layerAdapter:c},i);y.normalizationType=(0,u.Wy)(y);const w=null!=y.signal?{signal:y.signal}:null;await c.load(w);const v=y.field,g=y.normalizationType,T=y.valueExpression||y.sqlExpression,h=v?c.getField(v):null,x=await(0,u.EG)({field:y.field,normalizationField:y.normalizationField,valueExpression:y.valueExpression}),E=(0,l.MH)(c,x,"summary-statistics:invalid-parameters");if(E)throw E;if(h){const e=(0,l.a)(c,h,"summary-statistics:invalid-parameters",p);if(e)throw e;if(((0,u.fs)(h)||(0,r.isTimeOnlyField)(h))&&g)throw new n.default("summary-statistics:invalid-parameters","Normalization is not allowed for date fields")}else if(T&&g)throw new n.default("summary-statistics:invalid-parameters","Normalization is not allowed when 'valueExpression' or 'sqlExpression' is specified");y.filter&&!y.filter.spatialRelationship&&(y.filter.spatialRelationship="intersects");const A=(0,l.Wk)(y.filter,"summary-statistics:invalid-parameters");if(A)throw A;return y}(e),{layerAdapter:i}=t,c=(0,s.A)(t,f);return i.summaryStatistics(c)}},84171:(e,t,i)=>{i.r(t),i.d(t,{default:()=>d});var a=i(89379),s=i(53986),n=i(50076),r=i(46481),l=i(27208),o=i(11563);const u=["layer"],m=["layerAdapter"];async function d(e){const t=await async function(e){if(!(e&&e.layer&&e.startTime&&e.endTime&&e.unit))throw new n.default("summary-statistics-for-age:missing-parameters","'layer', 'startTime', 'endTime' and 'unit' parameters are required");const{layer:t}=e,i=(0,s.A)(e,u),r=(0,o.Jg)(t,o.J4);if(!r)throw new n.default("summary-statistics-for-age:invalid-parameters","'layer' must be one of these types: "+(0,o.Ho)(o.J4).join(", "));const m=(0,a.A)({layerAdapter:r},i),d=m.view,f=null!=m.signal?{signal:m.signal}:null;await Promise.all([null===d||void 0===d?void 0:d.when(),r.load(f)]);const p=(0,l.verifyDates)(r,m.startTime,m.endTime,"summary-statistics-for-age:invalid-parameters");if(p)throw p;if(!m.unit||!l.supportedAgeUnits.includes(m.unit))throw new n.default("summary-statistics-for-age:invalid-parameters","Supported units are: ".concat(l.supportedAgeUnits.join(", ")));return m}(e),{layerAdapter:i}=t,d=(0,s.A)(t,m),{view:f,startTime:p,endTime:c,unit:y,minValue:w,maxValue:v,signal:g,filter:T,outStatisticTypes:h}=d,{valueExpression:x,statisticsQuery:E}=(0,l.getAgeExpressions)({layer:i,startTime:p,endTime:c,unit:y}),A=(0,a.A)((0,a.A)({layer:i,valueExpression:x},E),{},{minValue:w,maxValue:v,outStatisticTypes:h,view:f,filter:T,signal:g});return(0,r.default)(A)}},90494:(e,t,i)=>{i.d(t,{p:()=>n,z:()=>s});var a=i(50076);const s="aggregateCount";function n(e,t){if(!e.view)throw new a.default("".concat(t,":missing-parameters"),"'view' parameter is required for binning");if(e.sqlExpression)throw new a.default("".concat(t,":invalid-parameters"),"'sqlExpression' parameter is not supported for binning");if("3d"===e.view.type)throw new a.default("".concat(t,":invalid-parameters"),"3d view is not supported for binning")}}}]);
//# sourceMappingURL=84171.43ac9a83.chunk.js.map