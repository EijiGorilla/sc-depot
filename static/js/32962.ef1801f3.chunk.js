"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[32962],{5294:(t,e,n)=>{n.r(e),n.d(e,{default:()=>N});var i,r=n(89379),o=n(76797),s=n(19247),l=n(9839),a=n(66486),u=n(59648),f=n(52494),c=n(76562),m=n(59844),d=n(86866),p=n(99846),h=n(26855),v=n(35143),x=(n(76460),n(81806),n(47249),n(50076),n(6409)),y=n(85842),g=n(75116);let w=i=class extends g.A{constructor(){super(...arguments),this.type="identity"}clone(){return new i}};(0,v._)([(0,x.e)({IdentityXform:"identity"})],w.prototype,"type",void 0),w=i=(0,v._)([(0,y.$)("esri.layers.support.rasterTransforms.IdentityTransform")],w);const C=w;var O=n(29754);const S={GCSShiftXform:h.A,IdentityXform:C,PolynomialXform:O.A};function M(t){if(!(null===t||void 0===t?void 0:t.type))return null;const e=S[null===t||void 0===t?void 0:t.type];if(e){const n=new e;return n.read(t),n}return null}var b=n(20118),z=n(46533);class N{convertVectorFieldData(t){const e=a.default.fromJSON(t.pixelBlock),n=(0,p.FI)(e,t.type);return Promise.resolve(null!=n?n.toJSON():null)}computeStatisticsHistograms(t){const e=a.default.fromJSON(t.pixelBlock),n=(0,d.eH)(e);return Promise.resolve(n)}async decode(t){const e=await(0,u.D)(t.data,t.options);return e&&e.toJSON()}symbolize(t){t.pixelBlock=a.default.fromJSON(t.pixelBlock),t.extent=t.extent?o.default.fromJSON(t.extent):null;const e=this.symbolizer.symbolize(t);return Promise.resolve(null!=e?e.toJSON():null)}async updateSymbolizer(t){var e;this.symbolizer=b.A.fromJSON(t.symbolizerJSON),t.histograms&&"rasterStretch"===(null===(e=this.symbolizer)||void 0===e?void 0:e.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=t.histograms)}async updateRasterFunction(t){this.rasterFunction=(0,c.vt)(t.rasterFunctionJSON)}async process(t){var e;const n=this.rasterFunction.process({extent:o.default.fromJSON(t.extent),primaryPixelBlocks:t.primaryPixelBlocks.map((t=>null!=t?a.default.fromJSON(t):null)),primaryPixelSizes:null===(e=t.primaryPixelSizes)||void 0===e?void 0:e.map((t=>null!=t?s.default.fromJSON(t):null)),primaryRasterIds:t.primaryRasterIds});return null!=n?n.toJSON():null}stretch(t){const e=this.symbolizer.simpleStretch(a.default.fromJSON(t.srcPixelBlock),t.stretchParams);return Promise.resolve(null===e||void 0===e?void 0:e.toJSON())}estimateStatisticsHistograms(t){const e=(0,d.f4)(a.default.fromJSON(t.srcPixelBlock));return Promise.resolve(e)}split(t){var e;const n=(0,f.lD)(a.default.fromJSON(t.srcPixelBlock),t.tileSize,null!==(e=t.maximumPyramidLevel)&&void 0!==e?e:0,!1===t.useBilinear);return n&&n.forEach(((t,e)=>{n.set(e,null===t||void 0===t?void 0:t.toJSON())})),Promise.resolve(n)}clipTile(t){const e=a.default.fromJSON(t.pixelBlock),n=(0,f.J$)((0,r.A)((0,r.A)({},t),{},{pixelBlock:e}));return Promise.resolve(null===n||void 0===n?void 0:n.toJSON())}async mosaicAndTransform(t){var e;const n=t.srcPixelBlocks.map((t=>t?new a.default(t):null)),i=(0,f.z7)(n,t.srcMosaicSize,{blockWidths:t.blockWidths,alignmentInfo:t.alignmentInfo,clipOffset:t.clipOffset,clipSize:t.clipSize});let r,o=i;return t.coefs&&(o=(0,f.$i)(i,t.destDimension,t.coefs,t.sampleSpacing,t.interpolation)),t.projectDirections&&t.gcsGrid&&(r=(0,f.QF)(t.destDimension,t.gcsGrid),o=(0,p.Y2)(o,t.isUV?"vector-uv":"vector-magdir",r)),{pixelBlock:null===(e=o)||void 0===e?void 0:e.toJSON(),localNorthDirections:r}}async createFlowMesh(t,e){const n={data:new Float32Array(t.flowData.buffer),mask:new Uint8Array(t.flowData.maskBuffer),width:t.flowData.width,height:t.flowData.height},{vertexData:i,indexData:r}=await(0,z.CW)(t.meshType,t.simulationSettings,n,e.signal);return{result:{vertexBuffer:i.buffer,indexBuffer:r.buffer},transferList:[i.buffer,r.buffer]}}async getProjectionOffsetGrid(t){const e=o.default.fromJSON(t.projectedExtent),n=o.default.fromJSON(t.srcBufferExtent);let i=null;t.datumTransformationSteps&&(i=new l.default({steps:t.datumTransformationSteps})),(t.includeGCSGrid||(0,m.xh)(e.spatialReference,n.spatialReference,i))&&await(0,m.Hh)();const s=t.rasterTransform?M(t.rasterTransform):null;return(0,m.l0)((0,r.A)((0,r.A)({},t),{},{projectedExtent:e,srcBufferExtent:n,datumTransformation:i,rasterTransform:s}))}}},26855:(t,e,n)=>{n.d(e,{A:()=>f});var i,r=n(35143),o=n(46053),s=(n(81806),n(76460),n(47249),n(6409)),l=n(85842),a=n(75116);let u=i=class extends a.A{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(t){return"point"===(t=t.clone()).type?(t.x>180+this.tolerance&&(t.x-=360),t):(t.xmin>=180-this.tolerance?(t.xmax-=360,t.xmin-=360):t.xmax>180+this.tolerance&&(t.xmin=-180,t.xmax=180),t)}inverseTransform(t){return"point"===(t=t.clone()).type?(t.x<-this.tolerance&&(t.x+=360),t):(t.xmin<-this.tolerance&&(t.xmin+=360,t.xmax+=360),t)}clone(){return new i({tolerance:this.tolerance})}};(0,r._)([(0,s.e)({GCSShiftXform:"gcs-shift"})],u.prototype,"type",void 0),(0,r._)([(0,o.MZ)()],u.prototype,"tolerance",void 0),u=i=(0,r._)([(0,l.$)("esri.layers.support.rasterTransforms.GCSShiftTransform")],u);const f=u},29754:(t,e,n)=>{n.d(e,{A:()=>v});var i,r=n(35143),o=n(46053),s=(n(81806),n(76460),n(47249),n(6409)),l=n(28379),a=n(85842),u=n(17707),f=n(76797),c=n(19247),m=n(75116);function d(t,e,n){const{x:i,y:r}=e;if(n<2)return{x:t[0]+i*t[2]+r*t[4],y:t[1]+i*t[3]+r*t[5]};if(2===n){const e=i*i,n=r*r,o=i*r;return{x:t[0]+i*t[2]+r*t[4]+e*t[6]+o*t[8]+n*t[10],y:t[1]+i*t[3]+r*t[5]+e*t[7]+o*t[9]+n*t[11]}}const o=i*i,s=r*r,l=i*r,a=o*i,u=o*r,f=i*s,c=r*s;return{x:t[0]+i*t[2]+r*t[4]+o*t[6]+l*t[8]+s*t[10]+a*t[12]+u*t[14]+f*t[16]+c*t[18],y:t[1]+i*t[3]+r*t[5]+o*t[7]+l*t[9]+s*t[11]+a*t[13]+u*t[15]+f*t[17]+c*t[19]}}function p(t,e,n){const{xmin:i,ymin:r,xmax:o,ymax:s,spatialReference:l}=e;let a=[];if(n<2)a.push({x:i,y:s}),a.push({x:o,y:s}),a.push({x:i,y:r}),a.push({x:o,y:r});else{let t=10;for(let e=0;e<t;e++)a.push({x:i,y:r+(s-r)*e/(t-1)}),a.push({x:o,y:r+(s-r)*e/(t-1)});t=8;for(let e=1;e<=t;e++)a.push({x:i+(o-i)*e/t,y:r}),a.push({x:i+(o-i)*e/t,y:s})}a=a.map((e=>d(t,e,n)));const u=a.map((t=>t.x)),c=a.map((t=>t.y));return new f.default({xmin:Math.min.apply(null,u),xmax:Math.max.apply(null,u),ymin:Math.min.apply(null,c),ymax:Math.max.apply(null,c),spatialReference:l})}let h=i=class extends m.A{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(t,e){const{coeffX:n,coeffY:i}=e;if(null===n||void 0===n||!n.length||null===i||void 0===i||!i.length||n.length!==i.length)return null;const r=[];for(let o=0;o<n.length;o++)r.push(n[o]),r.push(i[o]);return r}writeForwardCoefficients(t,e,n){const i=[],r=[];for(let o=0;o<(null===t||void 0===t?void 0:t.length);o++)o%2==0?i.push(t[o]):r.push(t[o]);e.coeffX=i,e.coeffY=r}get inverseCoefficients(){let t=this._get("inverseCoefficients");const e=this._get("forwardCoefficients");return!t&&e&&this.polynomialOrder<2&&(t=function(t){const[e,n,i,r,o,s]=t,l=i*s-o*r,a=o*r-i*s;return[(o*n-e*s)/l,(i*n-e*r)/a,s/l,r/a,-o/l,-i/a]}(e)),t}set inverseCoefficients(t){this._set("inverseCoefficients",t)}readInverseCoefficients(t,e){const{inverseCoeffX:n,inverseCoeffY:i}=e;if(null===n||void 0===n||!n.length||null===i||void 0===i||!i.length||n.length!==i.length)return null;const r=[];for(let o=0;o<n.length;o++)r.push(n[o]),r.push(i[o]);return r}writeInverseCoefficients(t,e,n){const i=[],r=[];for(let o=0;o<(null===t||void 0===t?void 0:t.length);o++)o%2==0?i.push(t[o]):r.push(t[o]);e.inverseCoeffX=i,e.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(t){if("point"===t.type){const e=d(this.forwardCoefficients,t,this.polynomialOrder);return new c.default({x:e.x,y:e.y,spatialReference:t.spatialReference})}return p(this.forwardCoefficients,t,this.polynomialOrder)}inverseTransform(t){if("point"===t.type){const e=d(this.inverseCoefficients,t,this.polynomialOrder);return new c.default({x:e.x,y:e.y,spatialReference:t.spatialReference})}return p(this.inverseCoefficients,t,this.polynomialOrder)}clone(){return new i({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,r._)([(0,o.MZ)({json:{write:!0}})],h.prototype,"polynomialOrder",void 0),(0,r._)([(0,o.MZ)()],h.prototype,"forwardCoefficients",void 0),(0,r._)([(0,l.w)("forwardCoefficients",["coeffX","coeffY"])],h.prototype,"readForwardCoefficients",null),(0,r._)([(0,u.K)("forwardCoefficients")],h.prototype,"writeForwardCoefficients",null),(0,r._)([(0,o.MZ)({json:{write:!0}})],h.prototype,"inverseCoefficients",null),(0,r._)([(0,l.w)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],h.prototype,"readInverseCoefficients",null),(0,r._)([(0,u.K)("inverseCoefficients")],h.prototype,"writeInverseCoefficients",null),(0,r._)([(0,o.MZ)()],h.prototype,"affectsPixelSize",null),(0,r._)([(0,s.e)({PolynomialXform:"polynomial"})],h.prototype,"type",void 0),h=i=(0,r._)([(0,a.$)("esri.layers.support.rasterTransforms.PolynomialTransform")],h);const v=h},58646:(t,e,n)=>{n.d(e,{SZ:()=>r,e8:()=>s,hm:()=>o});var i=n(45802);const r=(0,i.O)()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),o=(0,i.O)()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),s=(0,i.O)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"})},70816:(t,e,n)=>{function i(t){var e,n;return["u8","s8"].includes(t.pixelType)&&null!=(null===(e=t.statistics)||void 0===e||null===(e=e[0])||void 0===e?void 0:e.min)&&null!=(null===(n=t.statistics[0])||void 0===n?void 0:n.max)&&1===t.bandCount}function r(t,e){const{attributeTable:n,bandCount:r}=t;return!(null!=n||!i(t))||!(null==n||r>1)&&(!e||null!=n.fields.find((t=>t.name.toLowerCase()===e.toLowerCase())))}function o(t){const{bandCount:e,dataType:n,pixelType:i}=t;return"elevation"===n||"generic"===n&&1===e&&("s16"===i||"s32"===i||"f32"===i||"f64"===i)}function s(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const{bandCount:n,colormap:i,pixelType:r}=t;return 1===n&&(!(null===i||void 0===i||!i.length)||!e&&"u8"===r)}function l(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const{attributeTable:n,bandCount:i}=t;return 1===i&&(!e||null!=n||null!=t.histograms)}function a(t){const{dataType:e}=t;return"vector-uv"===e||"vector-magdir"===e}function u(t){const{dataType:e}=t;return"vector-uv"===e||"vector-magdir"===e}function f(t){return!(null===t||void 0===t||!t.length)&&t.length<=16384}n.d(e,{FA:()=>s,QJ:()=>u,WN:()=>f,bo:()=>i,hu:()=>r,iL:()=>o,rd:()=>a,xX:()=>l})},74916:(t,e,n)=>{n.d(e,{u:()=>i,x:()=>r});const i=new(n(45802).J)({none:"none",standardDeviation:"standard-deviation",histogramEqualization:"histogram-equalization",minMax:"min-max",percentClip:"percent-clip",sigmoid:"sigmoid"}),r={0:"none",3:"standardDeviation",4:"histogramEqualization",5:"minMax",6:"percentClip",9:"sigmoid"}},75116:(t,e,n)=>{n.d(e,{A:()=>a});var i=n(35143),r=n(42553),o=n(46053),s=(n(81806),n(76460),n(47249),n(85842));let l=class extends r.A{get affectsPixelSize(){return!1}forwardTransform(t){return t}inverseTransform(t){return t}};(0,i._)([(0,o.MZ)()],l.prototype,"affectsPixelSize",null),(0,i._)([(0,o.MZ)({json:{write:!0}})],l.prototype,"spatialReference",void 0),l=(0,i._)([(0,s.$)("esri.layers.support.rasterTransforms.BaseRasterTransform")],l);const a=l},86866:(t,e,n)=>{n.d(e,{DP:()=>x,Nh:()=>y,Pg:()=>v,RP:()=>f,WF:()=>u,_N:()=>g,eH:()=>p,f4:()=>h,fP:()=>m,zj:()=>c});var i=n(30726),r=n(66486),o=n(52297),s=n(74916);const l=1,a=[.299,.587,.114];function u(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:256;e=Math.min(e,256);const{size:n,counts:i}=t,r=new Uint8Array(n),o=i.reduce(((t,n)=>t+n/e),0);let s=0,l=0,a=0,u=o;for(let f=0;f<n;f++)if(a+=i[f],!(f<n-1&&a+i[f+1]<u)){for(;s<e-1&&u<a;)s++,u+=o;for(let t=l;t<=f;t++)r[t]=s;l=f+1}for(let f=l;f<n;f++)r[f]=e-1;return r}function f(t){const{minCutOff:e,maxCutOff:n,gamma:i,pixelType:r,rounding:o}=t;if(!["u8","u16","s8","s16"].includes(r))return null;const s=e.length,l="s8"===r?-127:"s16"===r?-32767:0,a=["u16","s16"].includes(r)?65536:256,u=[],f=[],{minOutput:m=0,maxOutput:d=255}=t,p=d-m;for(let c=0;c<s;c++)f[c]=n[c]-e[c],u[c]=0===f[c]?0:p/f[c];const h=[];if(i&&i.length>=s){const t=y(s,i);for(let r=0;r<s;r++){const s=[];for(let u=0;u<a;u++){if(0===f[r]){s[u]=m;continue}const a=u+l,c=(a-e[r])/f[r];let h=1;if(i[r]>1&&(h-=(1/p)**(c*t[r])),a<n[r]&&a>e[r]){const t=h*p*c**(1/i[r])+m;s[u]="floor"===o?Math.floor(t):"round"===o?Math.round(t):t}else a>=n[r]?s[u]=d:s[u]=m}h[r]=s}}else for(let c=0;c<s;c++){const t=[];for(let i=0;i<a;i++){const r=i+l;if(r<=e[c])t[i]=m;else if(r>=n[c])t[i]=d;else{const n=(r-e[c])*u[c]+m;t[i]="floor"===o?Math.floor(n):"round"===o?Math.round(n):n}}h[c]=t}if(null!=t.contrastOffset){const e=c(t.contrastOffset,t.brightnessOffset);for(let t=0;t<s;t++){const n=h[t];for(let t=0;t<a;t++)n[t]=e[n[t]]}}return{lut:h,offset:l}}function c(t,e){const n=Math.min(Math.max(t,-100),100),i=Math.min(Math.max(null!==e&&void 0!==e?e:0,-100),100),r=255,o=new Uint8Array(256);for(let s=0;s<256;s++){let t=0;n>0&&n<100?t=(200*s-25500+510*i)/(2*(100-n))+128:n<=0&&n>-100?t=(200*s-25500+510*i)*(100+n)/2e4+128:100===n?(t=200*s-25500+256*(100-n)+510*i,t=t>0?r:0):-100===n&&(t=128),o[s]=t>r?r:t<0?0:t}return o}function m(t,e,n){const i=[];for(let r=0;r<e.length;r++){let o=0,s=0,l=0;"min"in e[r]?({min:o,max:s,avg:l}=e[r]):[o,s,l]=e[r];let u=null!==l&&void 0!==l?l:0;"u8"!==t&&(u=255*(u-o)/(s-o)),n&&(u*=a[r]),i.push(d(u))}return i}function d(t){if(t<=0||t>=255)return l;const e=t+(150===t?0:t<150?45*Math.cos(.01047*t):17*Math.sin(.021*t)),n=Math.log(t/255),i=Math.log(e/255);if(0===i)return l;const r=n/i;return isNaN(r)?l:Math.min(9.9,Math.max(.01,r))}function p(t){const{pixels:e,mask:n,pixelType:i,bandMasks:r}=t,o=e.map(((t,e)=>{var o;return function(t,e,n){let i=1/0,r=-1/0,o=0,s=0,l=0,a=0;const u=t.length,f=new Map,c=[];for(let S=0;S<u;S++){const n=t[S];if(!e||e[S]){var m;c.push(n);const t=(null!==(m=f.get(n))&&void 0!==m?m:0)+1;f.set(n,t),t>a&&(a=t,l=n),i=n<i?n:i,r=n>r?n:r,o+=n,s++}}if(0===s)return{statistics:{min:0,max:0,avg:0,stddev:0,mode:0,median:0},histogram:null};const d=o/s;let p=0;for(let S=0;S<u;S++)e&&!e[S]||(p+=(t[S]-d)**2);const h=e?e.filter((t=>t)).length:u,v=h<=1?0:Math.sqrt(p/(h-1));c.sort(((t,e)=>t-e));const x=s>>>1,y={min:i,max:r,avg:d,stddev:v,mode:l,median:s%2?c[Math.floor(x)]:(c[x-1]+c[x])/2};if(["u8","s8","u4","u2","u1"].includes(n)){const n=r-i+1,o=new Uint32Array(n);for(let r=0;r<u;r++)e&&!e[r]||o[t[r]-i]++;return{statistics:y,histogram:{min:i-.5,max:r+.5,size:n,counts:o}}}const g=256,w=new Uint32Array(g),C=(r-i)/g;if(0===C)return{statistics:y,histogram:{min:i,max:r,size:1,counts:new Uint32Array(1).fill(s)}};const O=new Uint32Array(257);for(let S=0;S<u;S++)e&&!e[S]||O[Math.floor((t[S]-i)/C)]++;for(let S=0;S<255;S++)w[S]=O[S];return w[255]=O[255]+O[g],{statistics:y,histogram:{min:i,max:r,size:g,counts:w}}}(t,null!==(o=null===r||void 0===r?void 0:r[e])&&void 0!==o?o:n,i)}));return{statistics:o.map((t=>{let{statistics:e}=t;return e})),histograms:o.map((t=>{let{histogram:e}=t;return e}))}}function h(t){var e;if(null===t||void 0===t||null===(e=t.pixels)||void 0===e||!e.length)return null;const{pixels:n,mask:i,bandMasks:r,pixelType:o}=t,s=t.width*t.height,l=n.length,a=[],u=[],f=256;let c,m;for(let p=0;p<l;p++){var d;let e=new Uint32Array(f);const l=n[p],h=null!==(d=null===r||void 0===r?void 0:r[p])&&void 0!==d?d:i;if("u8"===o){if(c=255,m=0,h){for(let t=0;t<s;t++)if(h[t]){const n=l[t];c=n<c?n:c,m=n>m?n:m,e[n]++}}else for(let t=0;t<s;t++){const n=l[t];c=n<c?n:c,m=n>m?n:m,e[n]++}e=e.slice(c,m+1)}else{let n=!1;t.statistics||(t.updateStatistics(),n=!0);const i=t.statistics;c=i[p].minValue,m=i[p].maxValue;const r=(m-c)/f;if(0===r){!i||t.validPixelCount||n||t.updateStatistics();const r=(t.validPixelCount||t.width*t.height)/f;for(let t=0;t<f;t++)e[t]=Math.round(r*(t+1))-Math.round(r*t)}else{const t=new Uint32Array(257);for(let e=0;e<s;e++)h&&!h[e]||t[Math.floor((l[e]-c)/r)]++;for(let n=0;n<255;n++)e[n]=t[n];e[255]=t[255]+t[f]}}const v="u8"===o?c-.5:c,x="u8"===o?m+.5:m;a.push({min:v,max:x,size:e.length,counts:e});let y=0,g=0,w=0;for(let t=0;t<e.length;t++)y+=e[t],g+=t*e[t];const C=g/y;for(let t=0;t<e.length;t++)w+=e[t]*(t-C)**2;const O=Math.sqrt(w/(y-1)),S=(x-v)/e.length,M=(C+("u8"===o?0:.5))*S+c,b=O*S;u.push({min:c,max:m,avg:M,stddev:b})}return{statistics:u,histograms:a}}function v(t){const e=[];for(let n=0;n<t.length;n++){const{min:i,max:r,size:o,counts:s}=t[n];let l=0,a=0;for(let t=0;t<o;t++)l+=s[t],a+=t*s[t];const u=a/l;let f=0;for(let t=0;t<o;t++)f+=s[t]*(t-u)**2;const c=(r-i)/o,m=(u+.5)*c+i,d=Math.sqrt(f/(l-1))*c;e.push({min:i,max:r,avg:m,stddev:d})}return e}function x(t,e){var n,r,l,a,f;const{pixelBlock:c,bandIds:m,returnHistogramLut:d,rasterInfo:p}=e;let v=null,x=null,y=t.stretchType;if("number"==typeof y&&(y=s.x[y]),t.dra)if("minMax"===y&&null!==c&&void 0!==c&&c.statistics)v=c.statistics.map((t=>[t.minValue,t.maxValue,0,0]));else{const t=h(c);v=null!=t?t.statistics:null,x=null!=t?t.histograms:null}else v=null!==(n=t.statistics)&&void 0!==n&&n.length?t.statistics:p.statistics,x="histograms"in t?t.histograms:void 0,x||(x=p.histograms);"percentClip"!==y&&"histogramEqualization"!==y||(null===(r=x)||void 0===r?void 0:r.length)||(y="minMax");const g=(null===(l=v)||void 0===l?void 0:l.length)||(null===(a=x)||void 0===a?void 0:a.length)||p.bandCount,w=[],C=[];v&&!Array.isArray(v[0])&&(v=v.map((t=>[t.min,t.max,t.avg,t.stddev])));const[O,S]=(0,o.hP)(p.pixelType);if(null===(f=v)||void 0===f||!f.length){v=[];for(let t=0;t<g;t++)v.push([O,S,1,1]);"standardDeviation"===y&&(y="minMax")}switch(y){case"none":for(let t=0;t<g;t++)w[t]=O,C[t]=S;break;case"minMax":for(let t=0;t<g;t++){const e=v[t];w[t]=e[0],C[t]=e[1]}break;case"standardDeviation":{const{numberOfStandardDeviations:e=2}=t;for(let t=0;t<g;t++){const n=v[t];w[t]=n[2]-e*n[3],C[t]=n[2]+e*n[3],w[t]<n[0]&&(w[t]=n[0]),C[t]>n[1]&&(C[t]=n[1])}}break;case"histogramEqualization":(0,i.Lw)(x);for(let t=0;t<g;t++)w[t]=x[t].min,C[t]=x[t].max;break;case"percentClip":(0,i.Lw)(x);for(let e=0;e<x.length;e++){const n=x[e],i=new Uint32Array(n.size),r=[...n.counts];r.length>=20&&(r[0]=r[1]=r[2]=r[r.length-1]=r[r.length-2]=0);let o=0;const s=(n.max-n.min)/n.size,l=-.5===n.min&&1===s?.5:0;for(let t=0;t<n.size;t++)o+=r[t],i[t]=o;let a=(t.minPercent||0)*o/100;w[e]=n.min+l;for(let t=0;t<n.size;t++)if(i[t]>a){w[e]=n.min+s*(t+l);break}a=(1-(t.maxPercent||0)/100)*o,C[e]=n.max+l;for(let t=n.size-2;t>=0;t--)if(i[t]<a){C[e]=n.min+s*(t+2-l);break}if(C[e]<w[e]){const t=w[e];w[e]=C[e],C[e]=t}}break;default:for(let t=0;t<g;t++){const e=v[t];w[t]=e[0],C[t]=e[1]}}let M,b,z;return"histogramEqualization"===y?((0,i.Lw)(x),b=x[0].size||256,M=0,d&&(z=x.map((t=>u(t))))):(b=t.max||255,M=t.min||0),function(t,e){if(null==e||0===e.length)return t;const n=Math.max.apply(null,e),{minCutOff:i,maxCutOff:r,minOutput:o,maxOutput:s,histogramLut:l}=t;return i.length===e.length||i.length<=n?t:{minCutOff:e.map((t=>i[t])),maxCutOff:e.map((t=>r[t])),histogramLut:l?e.map((t=>l[t])):null,minOutput:o,maxOutput:s}}({minCutOff:w,maxCutOff:C,maxOutput:b,minOutput:M,histogramLut:z},m)}function y(t,e){const n=new Float32Array(t);for(let i=0;i<t;i++)e[i]>1?e[i]>2?n[i]=6.5+(e[i]-2)**2.5:n[i]=6.5+100*(2-e[i])**4:n[i]=1;return n}function g(t,e){var n;if(null===t||void 0===t||null===(n=t.pixels)||void 0===n||!n.length)return t;const{mask:i,bandMasks:o,width:s,height:l,pixels:a}=t,{minCutOff:u,maxCutOff:f,minOutput:c,maxOutput:m,gamma:d}=e,p=s*l,h=e.outputPixelType||"u8",v=t.pixels.map((()=>r.default.createEmptyBand(h,p))),x=v.length,g=m-c,w=[],C=[];for(let r=0;r<x;r++)C[r]=f[r]-u[r],w[r]=0===C[r]?0:g/C[r];const O=h.startsWith("u")||h.startsWith("s"),S=d&&d.length>=x,M=!!e.isRenderer;if(S){const t=y(x,d);for(let e=0;e<x;e++){var b;const n=null!==(b=null===o||void 0===o?void 0:o[e])&&void 0!==b?b:i;for(let i=0;i<p;i++)if(null==n||n[i]){if(0===C[e]){v[e][i]=c;continue}const n=a[e][i],r=(n-u[e])/C[e];let o=1;if(d[e]>1&&(o-=(1/g)**(r*t[e])),n<f[e]&&n>u[e]){const t=o*g*r**(1/d[e])+c;v[e][i]=M?Math.floor(t):O?Math.round(t):t}else n>=f[e]?v[e][i]=m:v[e][i]=c}}}else for(let r=0;r<x;r++){var z;const t=null!==(z=null===o||void 0===o?void 0:o[r])&&void 0!==z?z:i;for(let e=0;e<p;e++)if(null==t||t[e]){const t=a[r][e];if(t<f[r]&&t>u[r]){const n=(t-u[r])*w[r]+c;v[r][e]=M?Math.floor(n):O?Math.round(n):n}else t>=f[r]?v[r][e]=m:v[r][e]=c}}const N=new r.default({width:s,height:l,mask:i,bandMasks:o,pixels:v,pixelType:h});return N.updateStatistics(),N}}}]);
//# sourceMappingURL=32962.ef1801f3.chunk.js.map