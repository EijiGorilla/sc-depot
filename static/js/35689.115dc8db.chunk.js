"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[35689],{35689:(t,o,e)=>{e.r(o),e.d(o,{default:()=>m});var l=e(35143),i=e(55171),n=e(50076),a=e(42553),s=e(53514),r=e(50346),u=e(46053),d=(e(81806),e(76460),e(47249),e(6409)),p=e(85842),y=e(98662),h=e(92706),v=e(39907),c=e(94639);let f=class extends a.A{constructor(t){super(t),this.description=null,this.format=null,this.state="not-loaded",this.label=null,this.layoutInfoTaskUrl=null,this.layout=null,this.layoutItem=null,this.layoutOptions=null,this.layoutTemplateInfo=null,this.type=null}get id(){var t,o;return null!==(t=null===(o=this.layoutItem)||void 0===o?void 0:o.id)&&void 0!==t?t:"".concat(this.layout,"-").concat((0,s.d)(JSON.stringify(this.toJSON())))}get mapSurroundInfoOptions(){var t,o;const e=null===(t=this.layoutTemplateInfo)||void 0===t||null===(t=t.layoutOptions)||void 0===t?void 0:t.mapSurroundInfos;if(!e)return null;const l={northArrow:[],scaleBar:[],legend:[]};for(const i of e)switch(i.type){case"CIMMarkerNorthArrow":l.northArrow.push(i);break;case"CIMScaleLine":l.scaleBar.push(i);break;case"CIMGroupElement":(null===(o=i.elements)||void 0===o?void 0:o.some((t=>"CIMScaleLine"===t.type)))&&l.scaleBar.push(i);break;case"CIMLegend":l.legend.push(i)}return l}_updateLayoutOptions(t){var o,e,l,i,n,a,s,r,u,d,p;const y=null!==(o=null===(e=this.layoutOptions)||void 0===e?void 0:e.legend)&&void 0!==o?o:null===(l=t.layoutOptions)||void 0===l?void 0:l.hasLegend,h=null!==(i=null===(n=this.layoutOptions)||void 0===n?void 0:n.northArrow)&&void 0!==i?i:null!==(a=this.mapSurroundInfoOptions)&&void 0!==a&&a.northArrow.length?null===(s=this.mapSurroundInfoOptions)||void 0===s?void 0:s.northArrow.some((t=>{let{visible:o}=t;return o})):void 0,v=null!==(r=null===(u=this.layoutOptions)||void 0===u?void 0:u.scaleBar)&&void 0!==r?r:null!==(d=this.mapSurroundInfoOptions)&&void 0!==d&&d.scaleBar.length?null===(p=this.mapSurroundInfoOptions)||void 0===p?void 0:p.scaleBar.some((t=>{let{visible:o}=t;return o})):void 0;this._set("layoutOptions",{legend:y,northArrow:h,scaleBar:v})}async fetchLayoutItemTemplateInfo(t){const{layoutItem:o}=this;if(null!==o&&void 0!==o&&o.id&&!this.layoutTemplateInfo&&"loaded"!==this.state)try{this._set("state","loading");const e=this.layoutInfoTaskUrl;if(!e)throw new n.default("print:invalid-layout-info-task-url","Can't fetch layout template info",{url:e});"public"!==o.access&&i.id&&await i.id.getCredential(e);const l={Layout_Item_ID:JSON.stringify({id:o.id})},a=(await(0,c.u)(e,l,t))[0];this.setLayoutTemplateInfo(a)}catch(e){this._set("state",(0,r.isAbortError)(e)?"not-loaded":"error")}}setLayoutTemplateInfo(t){this._set("layoutTemplateInfo",t),this._updateLayoutOptions(t),this._set("state","loaded")}};(0,l._)([(0,u.MZ)({json:{write:!0}})],f.prototype,"description",void 0),(0,l._)([(0,d.e)(h.U)],f.prototype,"format",void 0),(0,l._)([(0,u.MZ)({readOnly:!0})],f.prototype,"id",null),(0,l._)([(0,u.MZ)({readOnly:!0})],f.prototype,"state",void 0),(0,l._)([(0,u.MZ)({json:{write:!0}})],f.prototype,"label",void 0),(0,l._)([(0,u.MZ)()],f.prototype,"layoutInfoTaskUrl",void 0),(0,l._)([(0,u.MZ)({json:{read:v.r,write:!0}})],f.prototype,"layout",void 0),(0,l._)([(0,u.MZ)({type:y.default,json:{write:!0}})],f.prototype,"layoutItem",void 0),(0,l._)([(0,u.MZ)({readOnly:!0,json:{write:!0}})],f.prototype,"layoutOptions",void 0),(0,l._)([(0,u.MZ)({readOnly:!0})],f.prototype,"layoutTemplateInfo",void 0),(0,l._)([(0,u.MZ)({readOnly:!0})],f.prototype,"mapSurroundInfoOptions",null),(0,l._)([(0,u.MZ)()],f.prototype,"type",void 0),f=(0,l._)([(0,p.$)("esri.widgets.Print.CustomTemplate")],f);const m=f},94639:(t,o,e)=>{e.d(o,{u:()=>s});var l=e(50076),i=e(27983),n=e(11392),a=e(6196);async function s(t,o,e){if(!t)throw new l.default("print:invalid-layout-info-task-url","Can't fetch layout template info",{url:t});if("async"===await(0,i.getMode)(t)){const l=await(0,a.O)(t,o,void 0,e||void 0);return await l.waitForJobCompletion(),(await l.fetchResultData("Output_JSON")).value}return(await(0,n.g)(t,o,null,e)).results[0].value}}}]);
//# sourceMappingURL=35689.115dc8db.chunk.js.map