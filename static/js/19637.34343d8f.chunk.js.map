{"version":3,"file":"static/js/19637.34343d8f.chunk.js","mappings":"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","sources":["../node_modules/lodash-es/_arrayMap.js","../node_modules/lodash-es/_baseToString.js","../node_modules/lodash-es/toString.js","../node_modules/lodash-es/escapeRegExp.js","../node_modules/@esri/calcite-components/dist/components/calcite-autocomplete/customElement.js","../node_modules/lit-html/src/directives/repeat.ts","../node_modules/lodash-es/isArray.js"],"sourcesContent":["/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import toString from './toString.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nexport default escapeRegExp;\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { c as customElement } from \"../../chunks/runtime.js\";\nimport { ref } from \"lit-html/directives/ref.js\";\nimport { repeat } from \"lit-html/directives/repeat.js\";\nimport { nothing, html } from \"lit\";\nimport { LitElement, createEvent, stringOrBoolean, safeClassMap } from \"@arcgis/lumina\";\nimport { useWatchAttributes } from \"@arcgis/lumina/controllers\";\nimport { debounce, escapeRegExp } from \"lodash-es\";\nimport { b as defaultMenuPlacement, r as reposition, c as connectFloatingUI, a as disconnectFloatingUI, F as FloatingCSS } from \"../../chunks/floating-ui.js\";\nimport { u as updateHostInteraction, I as InteractiveContainer } from \"../../chunks/interactive.js\";\nimport { o as onToggleOpenCloseComponent } from \"../../chunks/openCloseComponent.js\";\nimport { c as connectLabel, d as disconnectLabel } from \"../../chunks/label.js\";\nimport { c as connectForm, a as afterConnectDefaultValueSet, d as disconnectForm, s as submitForm, H as HiddenFormInputSlot } from \"../../chunks/form.js\";\nimport { a as slotChangeHasAssignedElement } from \"../../chunks/dom.js\";\nimport { g as guid } from \"../../chunks/guid.js\";\nimport { u as useT9n } from \"../../chunks/useT9n.js\";\nimport { V as Validation } from \"../../chunks/Validation.js\";\nimport { c as createObserver } from \"../../chunks/observers.js\";\nimport { c as componentFocusable } from \"../../chunks/component.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nconst styles = css`:host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{position:relative;display:block}.input-container{position:relative;display:flex;flex:1 1 auto;flex-wrap:nowrap}.input{width:100%;--calcite-input-prefix-size: var(--calcite-autocomplete-input-prefix-size);--calcite-input-suffix-size: var(--calcite-autocomplete-input-suffix-size);--calcite-input-background-color: var(--calcite-autocomplete-input-background-color);--calcite-input-border-color: var(--calcite-autocomplete-input-border-color);--calcite-input-corner-radius: var(--calcite-autocomplete-input-corner-radius);--calcite-input-shadow: var(--calcite-autocomplete-input-shadow);--calcite-input-icon-color: var(--calcite-autocomplete-input-icon-color);--calcite-input-text-color: var(--calcite-autocomplete-input-text-color);--calcite-input-placeholder-text-color: var(--calcite-autocomplete-input-placeholder-text-color);--calcite-input-actions-background-color: var(--calcite-autocomplete-input-actions-background-color);--calcite-input-actions-background-color-hover: var(--calcite-autocomplete-input-actions-background-color-hover);--calcite-input-actions-background-color-press: var(--calcite-autocomplete-input-actions-background-color-press);--calcite-input-actions-icon-color: var(--calcite-autocomplete-input-actions-icon-color);--calcite-input-actions-icon-color-hover: var(--calcite-autocomplete-input-actions-icon-color-hover);--calcite-input-actions-icon-color-press: var(--calcite-autocomplete-input-actions-icon-color-press);--calcite-input-loading-background-color: var(--calcite-autocomplete-input-loading-background-color);--calcite-input-loading-fill-color: var(--calcite-autocomplete-input-loading-fill-color);--calcite-input-prefix-background-color: var(--calcite-autocomplete-input-prefix-background-color);--calcite-input-prefix-text-color: var(--calcite-autocomplete-input-prefix-text-color);--calcite-input-suffix-background-color: var(--calcite-autocomplete-input-suffix-background-color);--calcite-input-suffix-text-color: var(--calcite-autocomplete-input-suffix-text-color)}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}.content-container{box-sizing:border-box;width:100%}.floating-ui-container{--calcite-floating-ui-z-index: var(--calcite-z-index-dropdown);inline-size:max-content;display:none;max-inline-size:100vw;max-block-size:100vh;inset-block-start:0;left:0;z-index:var(--calcite-floating-ui-z-index)}.floating-ui-container .calcite-floating-ui-anim{position:relative;transition:var(--calcite-floating-ui-transition);transition-property:inset,left,opacity;opacity:0;box-shadow:0 0 16px #00000029;z-index:var(--calcite-z-index);border-radius:.25rem}.floating-ui-container[data-placement^=bottom] .calcite-floating-ui-anim{inset-block-start:-5px}.floating-ui-container[data-placement^=top] .calcite-floating-ui-anim{inset-block-start:5px}.floating-ui-container[data-placement^=left] .calcite-floating-ui-anim{left:5px}.floating-ui-container[data-placement^=right] .calcite-floating-ui-anim{left:-5px}.floating-ui-container[data-placement] .calcite-floating-ui-anim--active{opacity:1;inset-block-start:0;left:0}.content-container .calcite-floating-ui-anim{max-height:45vh;width:100%;overflow-y:auto;color:var(--calcite-autocomplete-text-color, var(--calcite-color-text-1));background-color:var(--calcite-autocomplete-background-color, var(--calcite-color-foreground-1));border-radius:var(--calcite-autocomplete-corner-radius, var(--calcite-corner-radius-round))}.content--hidden{display:none}@media (forced-colors: active){.floating-ui-container--active{border:1px solid canvasText}}.screen-readers-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}.validation-container{display:flex;flex-direction:column;align-items:flex-start;align-self:stretch}:host([scale=m]) .validation-container,:host([scale=l]) .validation-container{padding-block-start:.5rem}:host([scale=s]) .validation-container{padding-block-start:.25rem}::slotted(input[slot=hidden-form-input]){margin:0!important;opacity:0!important;outline:none!important;padding:0!important;position:absolute!important;inset:0!important;transform:none!important;-webkit-appearance:none!important;z-index:-1!important}:host([hidden]){display:none}[hidden]{display:none}`;\nconst SLOTS = {\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\"\n};\nconst CSS = {\n  inputContainer: \"input-container\",\n  input: \"input\",\n  contentContainer: \"content-container\",\n  contentAnimation: \"content-animation\",\n  content: \"content\",\n  contentHidden: \"content--hidden\",\n  floatingUIContainer: \"floating-ui-container\",\n  floatingUIContainerActive: \"floating-ui-container--active\",\n  screenReadersOnly: \"screen-readers-only\"\n};\nconst IDS = {\n  validationMessage: \"autocompleteValidationMessage\"\n};\nconst groupItemSelector = \"calcite-autocomplete-item-group\";\nconst itemSelector = \"calcite-autocomplete-item\";\nclass Autocomplete extends LitElement {\n  constructor() {\n    super();\n    this.guid = guid();\n    this.attributeWatch = useWatchAttributes([\"autofocus\", \"enterkeyhint\", \"inputmode\"], this.handleGlobalAttributesChanged);\n    this.inputId = `autocomplete-input-${this.guid}`;\n    this.listId = `autocomplete-list-${this.guid}`;\n    this.messages = useT9n();\n    this.transitionProp = \"opacity\";\n    this.mutationObserver = createObserver(\"mutation\", () => this.getAllItemsDebounced());\n    this.resizeObserver = createObserver(\"resize\", () => {\n      this.setFloatingElSize();\n    });\n    this.getAllItemsDebounced = debounce(this.getAllItems, 0);\n    this.activeDescendant = \"\";\n    this.activeIndex = -1;\n    this.hasContentBottom = false;\n    this.hasContentTop = false;\n    this.items = [];\n    this.groups = [];\n    this.alignment = \"start\";\n    this.disabled = false;\n    this.iconFlipRtl = false;\n    this.loading = false;\n    this.open = false;\n    this.overlayPositioning = \"absolute\";\n    this.placement = defaultMenuPlacement;\n    this.readOnly = false;\n    this.required = false;\n    this.scale = \"m\";\n    this.status = \"idle\";\n    this.validity = {\n      valid: false,\n      badInput: false,\n      customError: false,\n      patternMismatch: false,\n      rangeOverflow: false,\n      rangeUnderflow: false,\n      stepMismatch: false,\n      tooLong: false,\n      tooShort: false,\n      typeMismatch: false,\n      valueMissing: false\n    };\n    this.value = \"\";\n    this.calciteAutocompleteBeforeClose = createEvent({ cancelable: false });\n    this.calciteAutocompleteBeforeOpen = createEvent({ cancelable: false });\n    this.calciteAutocompleteChange = createEvent({ cancelable: false });\n    this.calciteAutocompleteClose = createEvent({ cancelable: false });\n    this.calciteAutocompleteOpen = createEvent({ cancelable: false });\n    this.calciteAutocompleteTextChange = createEvent({ cancelable: false });\n    this.calciteAutocompleteTextInput = createEvent({ cancelable: false });\n    this.listenOn(document, \"click\", this.documentClickHandler);\n    this.listen(\"calciteInternalAutocompleteItemSelect\", this.handleInternalAutocompleteItemSelect);\n  }\n  static {\n    this.properties = { activeDescendant: [16, {}, { state: true }], activeIndex: [16, {}, { state: true }], hasContentBottom: [16, {}, { state: true }], hasContentTop: [16, {}, { state: true }], items: [16, {}, { state: true }], groups: [16, {}, { state: true }], isOpen: [16, {}, { state: true }], enabledItems: [16, {}, { state: true }], alignment: [3, {}, { reflect: true }], autocomplete: [0, {}, { attribute: false }], disabled: [7, {}, { reflect: true, type: Boolean }], flipPlacements: [0, {}, { attribute: false }], form: [3, {}, { reflect: true }], icon: [3, { converter: stringOrBoolean }, { reflect: true }], iconFlipRtl: [7, {}, { reflect: true, type: Boolean }], inputValue: 1, label: 1, loading: [7, {}, { reflect: true, type: Boolean }], maxLength: [11, {}, { reflect: true, type: Number }], messageOverrides: [0, {}, { attribute: false }], minLength: [11, {}, { reflect: true, type: Number }], name: [3, {}, { reflect: true }], open: [7, {}, { reflect: true, type: Boolean }], overlayPositioning: [3, {}, { reflect: true }], pattern: 1, placeholder: 1, placement: [3, {}, { reflect: true }], prefixText: 1, readOnly: [7, {}, { reflect: true, type: Boolean }], required: [7, {}, { reflect: true, type: Boolean }], scale: [3, {}, { reflect: true }], status: [3, {}, { reflect: true }], suffixText: 1, validationIcon: [3, { converter: stringOrBoolean }, { reflect: true }], validationMessage: 1, validity: [0, {}, { attribute: false }], value: 1 };\n  }\n  static {\n    this.styles = styles;\n  }\n  get isOpen() {\n    return this.open && (this.hasContentTop || this.hasContentBottom || this.items.length > 0);\n  }\n  get enabledItems() {\n    return this.items.filter((item) => !item.disabled);\n  }\n  async reposition(delayed = false) {\n    const { floatingEl, referenceEl, placement, overlayPositioning, flipPlacements } = this;\n    return reposition(this, {\n      floatingEl,\n      referenceEl,\n      overlayPositioning,\n      placement,\n      flipPlacements,\n      type: \"menu\"\n    }, delayed);\n  }\n  async scrollContentTo(options) {\n    this.transitionEl?.scrollTo(options);\n  }\n  async selectText() {\n    return this.referenceEl.selectText();\n  }\n  async setFocus() {\n    await componentFocusable(this);\n    return this.referenceEl.setFocus();\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n    connectLabel(this);\n    connectForm(this);\n    this.defaultInputValue = this.inputValue || \"\";\n    this.getAllItemsDebounced();\n    connectFloatingUI(this);\n  }\n  async load() {\n    this.getAllItemsDebounced();\n  }\n  willUpdate(changes) {\n    if (changes.has(\"disabled\") && (this.hasUpdated || this.disabled !== false)) {\n      this.handleDisabledChange(this.disabled);\n    }\n    if (changes.has(\"flipPlacements\")) {\n      this.reposition(true);\n    }\n    if (changes.has(\"open\") && (this.hasUpdated || this.open !== false)) {\n      this.openHandler();\n    }\n    if (changes.has(\"overlayPositioning\") && (this.hasUpdated || this.overlayPositioning !== \"absolute\")) {\n      this.reposition(true);\n    }\n    if (changes.has(\"placement\") && (this.hasUpdated || this.placement !== defaultMenuPlacement)) {\n      this.reposition(true);\n    }\n    let itemsAndGroupsUpdated = false;\n    if (changes.has(\"inputValue\") && (this.hasUpdated || this.inputValue)) {\n      this.inputValueMatchPattern = this.inputValue && new RegExp(`(${escapeRegExp(this.inputValue)})`, \"i\");\n      this.updateItems();\n      this.updateGroups();\n      itemsAndGroupsUpdated = true;\n    }\n    if (!itemsAndGroupsUpdated && changes.has(\"scale\") && (this.hasUpdated || this.scale !== \"m\")) {\n      this.updateItems();\n      this.updateGroups();\n      itemsAndGroupsUpdated = true;\n    }\n    if (!itemsAndGroupsUpdated && changes.has(\"activeIndex\") && (this.hasUpdated || this.activeIndex !== -1)) {\n      this.updateItems();\n    }\n  }\n  updated() {\n    updateHostInteraction(this);\n  }\n  loaded() {\n    afterConnectDefaultValueSet(this, this.value || \"\");\n    this.defaultInputValue = this.inputValue || \"\";\n    connectFloatingUI(this);\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.mutationObserver?.disconnect();\n    this.resizeObserver?.disconnect();\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectFloatingUI(this);\n  }\n  setFloatingElSize() {\n    const { referenceEl, floatingEl } = this;\n    if (!referenceEl || !floatingEl) {\n      return;\n    }\n    floatingEl.style.inlineSize = `${referenceEl.clientWidth}px`;\n  }\n  handleGlobalAttributesChanged() {\n    this.requestUpdate();\n  }\n  handleDisabledChange(value) {\n    if (!value) {\n      this.open = false;\n    }\n  }\n  openHandler() {\n    onToggleOpenCloseComponent(this);\n    if (!this.open) {\n      this.activeIndex = -1;\n    }\n    if (this.disabled) {\n      this.open = false;\n      return;\n    }\n    this.setFloatingElSize();\n    this.reposition(true);\n  }\n  async documentClickHandler(event) {\n    if (this.disabled || event.composedPath().includes(this.el)) {\n      return;\n    }\n    this.open = false;\n  }\n  async handleInternalAutocompleteItemSelect(event) {\n    this.value = event.target.value;\n    event.stopPropagation();\n    this.emitChange();\n    await this.setFocus();\n    this.open = false;\n  }\n  onLabelClick() {\n    this.setFocus();\n  }\n  onFormReset() {\n    this.inputValue = this.defaultInputValue;\n  }\n  onBeforeOpen() {\n    this.calciteAutocompleteBeforeOpen.emit();\n  }\n  onOpen() {\n    this.calciteAutocompleteOpen.emit();\n  }\n  onBeforeClose() {\n    this.calciteAutocompleteBeforeClose.emit();\n  }\n  onClose() {\n    this.calciteAutocompleteClose.emit();\n  }\n  emitChange() {\n    this.calciteAutocompleteChange.emit();\n  }\n  updateGroups() {\n    this.groups.forEach((group, index, items) => {\n      group.scale = this.scale;\n      if (index === 0) {\n        group.disableSpacing = true;\n      }\n      const nextGroupItem = items[index + 1];\n      if (nextGroupItem) {\n        nextGroupItem.disableSpacing = group.children.length === 0;\n      }\n    });\n  }\n  updateItems() {\n    let activeDescendant = null;\n    this.items.forEach((item) => {\n      item.scale = this.scale;\n      item.inputValueMatchPattern = this.inputValueMatchPattern;\n    });\n    this.enabledItems.forEach((item, index) => {\n      const isActive = index === this.activeIndex;\n      if (isActive) {\n        activeDescendant = item.guid;\n      }\n      item.active = isActive;\n    });\n    this.activeDescendant = activeDescendant;\n  }\n  handleInputFocus() {\n    this.open = true;\n  }\n  handleContentTopSlotChange(event) {\n    this.hasContentTop = slotChangeHasAssignedElement(event);\n  }\n  handleContentBottomSlotChange(event) {\n    this.hasContentBottom = slotChangeHasAssignedElement(event);\n  }\n  getAllItems() {\n    const { el } = this;\n    this.groups = Array.from(el.querySelectorAll(groupItemSelector));\n    this.items = Array.from(el.querySelectorAll(itemSelector));\n    this.updateItems();\n    this.updateGroups();\n  }\n  setReferenceEl(el) {\n    this.referenceEl = el;\n    if (!el) {\n      return;\n    }\n    this.resizeObserver?.observe(el);\n    connectFloatingUI(this);\n  }\n  keyDownHandler(event) {\n    const { defaultPrevented, key } = event;\n    if (defaultPrevented) {\n      return;\n    }\n    const { open, activeIndex, enabledItems } = this;\n    const activeItem = enabledItems.length && activeIndex > -1 ? enabledItems[activeIndex] : null;\n    switch (key) {\n      case \"Escape\":\n        if (open) {\n          this.open = false;\n          event.preventDefault();\n        }\n        break;\n      case \"Tab\":\n        this.open = false;\n        break;\n      case \"Enter\":\n        if (open && activeItem) {\n          this.value = activeItem.value;\n          this.emitChange();\n          this.open = false;\n          event.preventDefault();\n        } else if (!event.defaultPrevented) {\n          if (submitForm(this)) {\n            event.preventDefault();\n          }\n        }\n        break;\n      case \"ArrowDown\":\n        if (enabledItems.length) {\n          this.open = true;\n          this.activeIndex = activeIndex !== -1 ? Math.min(activeIndex + 1, enabledItems.length - 1) : 0;\n          this.scrollToActiveItem();\n          event.preventDefault();\n        }\n        break;\n      case \"ArrowUp\":\n        if (enabledItems.length) {\n          this.open = true;\n          this.activeIndex = activeIndex !== -1 ? Math.max(activeIndex - 1, 0) : enabledItems.length - 1;\n          this.scrollToActiveItem();\n          event.preventDefault();\n        }\n        break;\n      case \"Home\":\n        if (enabledItems.length) {\n          this.open = true;\n          this.activeIndex = 0;\n          this.scrollToActiveItem();\n          event.preventDefault();\n        }\n        break;\n      case \"End\":\n        if (enabledItems.length) {\n          this.open = true;\n          this.activeIndex = enabledItems.length - 1;\n          this.scrollToActiveItem();\n          event.preventDefault();\n        }\n        break;\n    }\n  }\n  scrollToActiveItem() {\n    this.enabledItems[this.activeIndex]?.scrollIntoView({ block: \"nearest\" });\n  }\n  changeHandler(event) {\n    event.stopPropagation();\n    this.inputValue = event.target.value;\n    this.calciteAutocompleteTextChange.emit();\n  }\n  inputClickHandler(event) {\n    if (event.defaultPrevented) {\n      return;\n    }\n    this.open = true;\n  }\n  inputHandler(event) {\n    event.stopPropagation();\n    this.inputValue = event.target.value;\n    this.open = this.inputValue?.length > 0;\n    this.calciteAutocompleteTextInput.emit();\n  }\n  setFloatingEl(el) {\n    this.floatingEl = el;\n    connectFloatingUI(this);\n  }\n  setTransitionEl(el) {\n    if (!el) {\n      return;\n    }\n    this.transitionEl = el;\n  }\n  render() {\n    const { disabled, listId, inputId, isOpen } = this;\n    const autofocus = this.el.autofocus;\n    const enterKeyHint = this.el.enterKeyHint;\n    const inputMode = this.el.inputMode;\n    return InteractiveContainer({ disabled, children: html`<div class=${safeClassMap(CSS.inputContainer)}><calcite-input .alignment=${this.alignment} aria-activedescendant=${this.activeDescendant ?? nothing} aria-controls=${listId ?? nothing} aria-owns=${listId ?? nothing} aria-autocomplete=list .ariaExpanded=${isOpen} aria-haspopup=listbox .autocomplete=${this.autocomplete} .autofocus=${autofocus} class=${safeClassMap(CSS.input)} clearable .disabled=${disabled} enterkeyhint=${enterKeyHint ?? nothing} .form=${this.form} .icon=${this.icon ?? true} .iconFlipRtl=${this.iconFlipRtl} id=${inputId ?? nothing} inputmode=${inputMode ?? nothing} .label=${this.label} .loading=${this.loading} .maxLength=${this.maxLength} .messageOverrides=${this.messages} .minLength=${this.minLength} .name=${this.name} @click=${this.inputClickHandler} @keydown=${this.keyDownHandler} @calciteInputChange=${this.changeHandler} @calciteInputInput=${this.inputHandler} @calciteInternalInputFocus=${this.handleInputFocus} .pattern=${this.pattern} .placeholder=${this.placeholder} .prefixText=${this.prefixText} .readOnly=${this.readOnly} role=combobox .scale=${this.scale} .status=${this.status} .suffixText=${this.suffixText} type=search .value=${this.inputValue} ${ref(this.setReferenceEl)}></calcite-input>${this.renderListBox()}<div class=${safeClassMap({\n      [CSS.contentContainer]: true,\n      [CSS.floatingUIContainer]: true,\n      [CSS.floatingUIContainerActive]: isOpen\n    })} ${ref(this.setFloatingEl)}><div class=${safeClassMap({\n      [CSS.contentAnimation]: true,\n      [FloatingCSS.animation]: true,\n      [FloatingCSS.animationActive]: isOpen\n    })} ${ref(this.setTransitionEl)}><div class=${safeClassMap({ [CSS.content]: true, [CSS.contentHidden]: !isOpen })}><slot name=${SLOTS.contentTop} @slotchange=${this.handleContentTopSlotChange}></slot><slot aria-hidden=true></slot><slot name=${SLOTS.contentBottom} @slotchange=${this.handleContentBottomSlotChange}></slot></div></div></div></div>${HiddenFormInputSlot({ component: this })}${this.validationMessage && this.status === \"invalid\" ? Validation({ icon: this.validationIcon, id: IDS.validationMessage, message: this.validationMessage, scale: this.scale, status: this.status }) : null}` });\n  }\n  renderListBox() {\n    return html`<ul aria-labelledby=${this.inputId ?? nothing} class=${safeClassMap(CSS.screenReadersOnly)} id=${this.listId ?? nothing} role=listbox tabindex=-1>${this.renderListBoxOptions()}</ul>`;\n  }\n  renderListBoxOptions() {\n    return repeat(this.items.filter((item) => !!(item.label || item.heading)), (item) => item.guid, (item) => html`<li .ariaDisabled=${item.disabled} .ariaLabel=${item.label} id=${item.guid ?? nothing} role=option tabindex=-1>${item.heading}${item.description}</li>`);\n  }\n}\ncustomElement(\"calcite-autocomplete\", Autocomplete);\nexport {\n  Autocomplete\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\nimport {\n  insertPart,\n  getCommittedValue,\n  removePart,\n  setCommittedValue,\n  setChildPartValue,\n} from '../directive-helpers.js';\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type ItemTemplate<T> = (item: T, index: number) => unknown;\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map<unknown, number>();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\nclass RepeatDirective extends Directive {\n  private _itemKeys?: unknown[];\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('repeat() can only be used in text expressions');\n    }\n  }\n\n  private _getValuesAndKeys<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    let keyFn: KeyFn<T> | undefined;\n    if (template === undefined) {\n      template = keyFnOrTemplate;\n    } else if (keyFnOrTemplate !== undefined) {\n      keyFn = keyFnOrTemplate as KeyFn<T>;\n    }\n    const keys = [];\n    const values = [];\n    let index = 0;\n    for (const item of items) {\n      keys[index] = keyFn ? keyFn(item, index) : index;\n      values[index] = template!(item, index);\n      index++;\n    }\n    return {\n      values,\n      keys,\n    };\n  }\n\n  render<T>(items: Iterable<T>, template: ItemTemplate<T>): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    return this._getValuesAndKeys(items, keyFnOrTemplate, template).values;\n  }\n\n  override update<T>(\n    containerPart: ChildPart,\n    [items, keyFnOrTemplate, template]: [\n      Iterable<T>,\n      KeyFn<T> | ItemTemplate<T>,\n      ItemTemplate<T>,\n    ]\n  ) {\n    // Old part & key lists are retrieved from the last update (which may\n    // be primed by hydration)\n    const oldParts = getCommittedValue(\n      containerPart\n    ) as Array<ChildPart | null>;\n    const {values: newValues, keys: newKeys} = this._getValuesAndKeys(\n      items,\n      keyFnOrTemplate,\n      template\n    );\n\n    // We check that oldParts, the committed value, is an Array as an\n    // indicator that the previous value came from a repeat() call. If\n    // oldParts is not an Array then this is the first render and we return\n    // an array for lit-html's array handling to render, and remember the\n    // keys.\n    if (!Array.isArray(oldParts)) {\n      this._itemKeys = newKeys;\n      return newValues;\n    }\n\n    // In SSR hydration it's possible for oldParts to be an array but for us\n    // to not have item keys because the update() hasn't run yet. We set the\n    // keys to an empty array. This will cause all oldKey/newKey comparisons\n    // to fail and execution to fall to the last nested brach below which\n    // reuses the oldPart.\n    const oldKeys = (this._itemKeys ??= []);\n\n    // New part list will be built up as we go (either reused from\n    // old parts or created for new keys in this update). This is\n    // saved in the above cache at the end of the update.\n    const newParts: ChildPart[] = [];\n\n    // Maps from key to index for current and previous update; these\n    // are generated lazily only when needed as a performance\n    // optimization, since they are only required for multiple\n    // non-contiguous changes in the list, which are less common.\n    let newKeyToIndexMap!: Map<unknown, number>;\n    let oldKeyToIndexMap!: Map<unknown, number>;\n\n    // Head and tail pointers to old parts and new values\n    let oldHead = 0;\n    let oldTail = oldParts.length - 1;\n    let newHead = 0;\n    let newTail = newValues.length - 1;\n\n    // Overview of O(n) reconciliation algorithm (general approach\n    // based on ideas found in ivi, vue, snabbdom, etc.):\n    //\n    // * We start with the list of old parts and new values (and\n    //   arrays of their respective keys), head/tail pointers into\n    //   each, and we build up the new list of parts by updating\n    //   (and when needed, moving) old parts or creating new ones.\n    //   The initial scenario might look like this (for brevity of\n    //   the diagrams, the numbers in the array reflect keys\n    //   associated with the old parts or new values, although keys\n    //   and parts/values are actually stored in parallel arrays\n    //   indexed using the same head/tail pointers):\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n    //                                      item order\n    //      newHead ^                 ^ newTail\n    //\n    // * Iterate old & new lists from both sides, updating,\n    //   swapping, or removing parts at the head/tail locations\n    //   until neither head nor tail can move.\n    //\n    // * Example below: keys at head pointers match, so update old\n    //   part 0 in-place (no need to move it) and record part 0 in\n    //   the `newParts` list. The last thing we do is advance the\n    //   `oldHead` and `newHead` pointers (will be reflected in the\n    //   next diagram).\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //      newHead ^                 ^ newTail\n    //\n    // * Example below: head pointers don't match, but tail\n    //   pointers do, so update part 6 in place (no need to move\n    //   it), and record part 6 in the `newParts` list. Last,\n    //   advance the `oldTail` and `oldHead` pointers.\n    //\n    //         oldHead v              v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n    //                                      & newTail\n    //         newHead ^              ^ newTail\n    //\n    // * If neither head nor tail match; next check if one of the\n    //   old head/tail items was removed. We first need to generate\n    //   the reverse map of new keys to index (`newKeyToIndexMap`),\n    //   which is done once lazily as a performance optimization,\n    //   since we only hit this case if multiple non-contiguous\n    //   changes were made. Note that for contiguous removal\n    //   anywhere in the list, the head and tails would advance\n    //   from either end and pass each other before we get to this\n    //   case and removals would be handled in the final while loop\n    //   without needing to generate the map.\n    //\n    // * Example below: The key at `oldTail` was removed (no longer\n    //   in the `newKeyToIndexMap`), so remove that part from the\n    //   DOM and advance just the `oldTail` pointer.\n    //\n    //         oldHead v           v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n    //         newHead ^           ^ newTail\n    //\n    // * Once head and tail cannot move, any mismatches are due to\n    //   either new or moved items; if a new key is in the previous\n    //   \"old key to old index\" map, move the old part to the new\n    //   location, otherwise create and insert a new part. Note\n    //   that when moving an old part we null its position in the\n    //   oldParts array if it lies between the head and tail so we\n    //   know to skip it when the pointers get there.\n    //\n    // * Example below: neither head nor tail match, and neither\n    //   were removed; so find the `newHead` key in the\n    //   `oldKeyToIndexMap`, and move that old part's DOM into the\n    //   next head position (before `oldParts[oldHead]`). Last,\n    //   null the part in the `oldPart` array since it was\n    //   somewhere in the remaining oldParts still to be scanned\n    //   (between the head and tail pointers) so that we know to\n    //   skip that old part on future iterations.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n    //                                      newHead\n    //         newHead ^           ^ newTail\n    //\n    // * Note that for moves/insertions like the one above, a part\n    //   inserted at the head pointer is inserted before the\n    //   current `oldParts[oldHead]`, and a part inserted at the\n    //   tail pointer is inserted before `newParts[newTail+1]`. The\n    //   seeming asymmetry lies in the fact that new parts are\n    //   moved into place outside in, so to the right of the head\n    //   pointer are old parts, and to the right of the tail\n    //   pointer are new parts.\n    //\n    // * We always restart back from the top of the algorithm,\n    //   allowing matching and simple updates in place to\n    //   continue...\n    //\n    // * Example below: the head pointers once again match, so\n    //   simply update part 1 and record it in the `newParts`\n    //   array.  Last, advance both head pointers.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //            newHead ^        ^ newTail\n    //\n    // * As mentioned above, items that were moved as a result of\n    //   being stuck (the final else clause in the code below) are\n    //   marked with null, so we always advance old pointers over\n    //   these so we're comparing the next actual old value on\n    //   either end.\n    //\n    // * Example below: `oldHead` is null (already placed in\n    //   newParts), so advance `oldHead`.\n    //\n    //            oldHead v     v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n    //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //               newHead ^     ^ newTail\n    //\n    // * Note it's not critical to mark old parts as null when they\n    //   are moved from head to tail or tail to head, since they\n    //   will be outside the pointer range and never visited again.\n    //\n    // * Example below: Here the old tail key matches the new head\n    //   key, so the part at the `oldTail` position and move its\n    //   DOM to the new head position (before `oldParts[oldHead]`).\n    //   Last, advance `oldTail` and `newHead` pointers.\n    //\n    //               oldHead v  v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n    //                                     advance oldTail & newHead\n    //               newHead ^     ^ newTail\n    //\n    // * Example below: Old and new head keys match, so update the\n    //   old head part in place, and advance the `oldHead` and\n    //   `newHead` pointers.\n    //\n    //               oldHead v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n    //                                      newHead\n    //                  newHead ^  ^ newTail\n    //\n    // * Once the new or old pointers move past each other then all\n    //   we have left is additions (if old list exhausted) or\n    //   removals (if new list exhausted). Those are handled in the\n    //   final while loops at the end.\n    //\n    // * Example below: `oldHead` exceeded `oldTail`, so we're done\n    //   with the main loop.  Create the remaining part and insert\n    //   it at the new head position, and the update is complete.\n    //\n    //                   (oldHead > oldTail)\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //                     newHead ^ newTail\n    //\n    // * Note that the order of the if/else clauses is not\n    //   important to the algorithm, as long as the null checks\n    //   come first (to ensure we're always working on valid old\n    //   parts) and that the final else clause comes last (since\n    //   that's where the expensive moves occur). The order of\n    //   remaining clauses is just a simple guess at which cases\n    //   will be most common.\n    //\n    // * Note, we could calculate the longest\n    //   increasing subsequence (LIS) of old items in new position,\n    //   and only move those not in the LIS set. However that costs\n    //   O(nlogn) time and adds a bit more code, and only helps\n    //   make rare types of mutations require fewer moves. The\n    //   above handles removes, adds, reversal, swaps, and single\n    //   moves of contiguous items in linear time, in the minimum\n    //   number of moves. As the number of multiple moves where LIS\n    //   might help approaches a random shuffle, the LIS\n    //   optimization becomes less helpful, so it seems not worth\n    //   the code at this point. Could reconsider if a compelling\n    //   case arises.\n\n    while (oldHead <= oldTail && newHead <= newTail) {\n      if (oldParts[oldHead] === null) {\n        // `null` means old part at head has already been used\n        // below; skip\n        oldHead++;\n      } else if (oldParts[oldTail] === null) {\n        // `null` means old part at tail has already been used\n        // below; skip\n        oldTail--;\n      } else if (oldKeys[oldHead] === newKeys[newHead]) {\n        // Old head matches new head; update in place\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newHead]\n        );\n        oldHead++;\n        newHead++;\n      } else if (oldKeys[oldTail] === newKeys[newTail]) {\n        // Old tail matches new tail; update in place\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newTail]\n        );\n        oldTail--;\n        newTail--;\n      } else if (oldKeys[oldHead] === newKeys[newTail]) {\n        // Old head matches new tail; update and move to new tail\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newTail]\n        );\n        insertPart(containerPart, newParts[newTail + 1], oldParts[oldHead]!);\n        oldHead++;\n        newTail--;\n      } else if (oldKeys[oldTail] === newKeys[newHead]) {\n        // Old tail matches new head; update and move to new head\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newHead]\n        );\n        insertPart(containerPart, oldParts[oldHead]!, oldParts[oldTail]!);\n        oldTail--;\n        newHead++;\n      } else {\n        if (newKeyToIndexMap === undefined) {\n          // Lazily generate key-to-index maps, used for removals &\n          // moves below\n          newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n          oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n        }\n        if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n          // Old head is no longer in new list; remove\n          removePart(oldParts[oldHead]!);\n          oldHead++;\n        } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n          // Old tail is no longer in new list; remove\n          removePart(oldParts[oldTail]!);\n          oldTail--;\n        } else {\n          // Any mismatches at this point are due to additions or\n          // moves; see if we have an old part we can reuse and move\n          // into place\n          const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n          const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n          if (oldPart === null) {\n            // No old part for this value; create a new one and\n            // insert it\n            const newPart = insertPart(containerPart, oldParts[oldHead]!);\n            setChildPartValue(newPart, newValues[newHead]);\n            newParts[newHead] = newPart;\n          } else {\n            // Reuse old part\n            newParts[newHead] = setChildPartValue(oldPart, newValues[newHead]);\n            insertPart(containerPart, oldParts[oldHead]!, oldPart);\n            // This marks the old part as having been used, so that\n            // it will be skipped in the first two checks above\n            oldParts[oldIndex as number] = null;\n          }\n          newHead++;\n        }\n      }\n    }\n    // Add parts for any remaining new values\n    while (newHead <= newTail) {\n      // For all remaining additions, we insert before last new\n      // tail, since old pointers are no longer valid\n      const newPart = insertPart(containerPart, newParts[newTail + 1]);\n      setChildPartValue(newPart, newValues[newHead]);\n      newParts[newHead++] = newPart;\n    }\n    // Remove any remaining unused old parts\n    while (oldHead <= oldTail) {\n      const oldPart = oldParts[oldHead++];\n      if (oldPart !== null) {\n        removePart(oldPart);\n      }\n    }\n\n    // Save order of new parts for next round\n    this._itemKeys = newKeys;\n    // Directly set part value, bypassing it's dirty-checking\n    setCommittedValue(containerPart, newParts);\n    return noChange;\n  }\n}\n\nexport interface RepeatDirectiveFn {\n  <T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ): unknown;\n  <T>(items: Iterable<T>, template: ItemTemplate<T>): unknown;\n  <T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): unknown;\n}\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * The `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n *\n * ```js\n * html`\n *   <ol>\n *     ${repeat(this.items, (item) => item.id, (item, index) => {\n *       return html`<li>${index}: ${item.name}</li>`;\n *     })}\n *   </ol>\n * `\n * ```\n *\n * **Important**: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive(RepeatDirective) as RepeatDirectiveFn;\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RepeatDirective};\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n"],"names":["array","iteratee","index","length","result","Array","symbolProto","Symbol","prototype","undefined","symbolToString","toString","baseToString","value","isArray","arrayMap","isSymbol","call","reRegExpChar","reHasRegExpChar","RegExp","source","string","test","replace","styles","css","_templateObject","_taggedTemplateLiteral","SLOTS","CSS","IDS","Autocomplete","LitElement","constructor","super","this","guid","attributeWatch","useWatchAttributes","handleGlobalAttributesChanged","inputId","concat","listId","messages","useT9n","transitionProp","mutationObserver","createObserver","getAllItemsDebounced","resizeObserver","setFloatingElSize","debounce","getAllItems","activeDescendant","activeIndex","hasContentBottom","hasContentTop","items","groups","alignment","disabled","iconFlipRtl","loading","open","overlayPositioning","placement","defaultMenuPlacement","readOnly","required","scale","status","validity","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","calciteAutocompleteBeforeClose","createEvent","cancelable","calciteAutocompleteBeforeOpen","calciteAutocompleteChange","calciteAutocompleteClose","calciteAutocompleteOpen","calciteAutocompleteTextChange","calciteAutocompleteTextInput","listenOn","document","documentClickHandler","listen","handleInternalAutocompleteItemSelect","isOpen","enabledItems","filter","item","reposition","delayed","arguments","floatingEl","referenceEl","flipPlacements","type","scrollContentTo","options","_this$transitionEl","transitionEl","scrollTo","selectText","setFocus","componentFocusable","connectedCallback","_this$mutationObserve","observe","el","childList","subtree","connectLabel","connectForm","defaultInputValue","inputValue","connectFloatingUI","load","willUpdate","changes","has","hasUpdated","handleDisabledChange","openHandler","itemsAndGroupsUpdated","inputValueMatchPattern","escapeRegExp","updateItems","updateGroups","updated","updateHostInteraction","loaded","afterConnectDefaultValueSet","disconnectedCallback","_this$mutationObserve2","_this$resizeObserver","disconnect","disconnectLabel","disconnectForm","disconnectFloatingUI","style","inlineSize","clientWidth","requestUpdate","onToggleOpenCloseComponent","event","composedPath","includes","target","stopPropagation","emitChange","onLabelClick","onFormReset","onBeforeOpen","emit","onOpen","onBeforeClose","onClose","forEach","group","disableSpacing","nextGroupItem","children","isActive","active","handleInputFocus","handleContentTopSlotChange","slotChangeHasAssignedElement","handleContentBottomSlotChange","from","querySelectorAll","setReferenceEl","_this$resizeObserver2","keyDownHandler","defaultPrevented","key","activeItem","preventDefault","submitForm","Math","min","scrollToActiveItem","max","_this$enabledItems$th","scrollIntoView","block","changeHandler","inputClickHandler","inputHandler","_this$inputValue","setFloatingEl","setTransitionEl","render","_this$activeDescendan","_this$icon","autofocus","enterKeyHint","inputMode","InteractiveContainer","html","_templateObject2","safeClassMap","nothing","autocomplete","form","icon","label","maxLength","minLength","name","pattern","placeholder","prefixText","suffixText","ref","renderListBox","FloatingCSS","animation","animationActive","HiddenFormInputSlot","component","validationMessage","Validation","validationIcon","id","message","_this$inputId","_this$listId","_templateObject3","renderListBoxOptions","repeat","heading","_item$guid","_templateObject4","description","_Autocomplete","properties","state","reflect","attribute","Boolean","converter","stringOrBoolean","Number","messageOverrides","customElement","u","generateMap","e","s","t","r","Map","l","set","c","CHILD","Error","dt","o","i","values","keys","update","_ref","_this$ut","d","p","a","ut","h","v","m","y","x","j","k","w","get","n","f"],"sourceRoot":""}