"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[76106],{76106:(n,a,e)=>{e.r(a),e.d(a,{fieldNamesFromFieldInfos:()=>p,getArcadeForOrderedFields:()=>A,getArcadeForPredominanceMargin:()=>d,getArcadeForPredominantCategory:()=>f,getArcadeForPredominantCategoryAlias:()=>v,getArcadeForPredominantCategoryValue:()=>m,getArcadeForStrengthOfPredominance:()=>g,getArcadeForSumOfFields:()=>V,getPredominanceExpressions:()=>i,getSQLForPredominantCategoryName:()=>o,noDominantCategoryField:()=>r});var t=e(42633);const r="no_dominant_category";function l(n){return"(".concat(n.map((n=>"".concat(n," >= 0"))).join(" OR "),")")}function o(n){return{expression:u(n,{returnFieldName:!0,defaultValue:"'".concat(r,"'")})}}function u(n,a){const{returnFieldName:e,defaultValue:r,layer:l}=a,o=[];if(e&&r){const a=n.map((n=>"".concat(n," <= 0"))).join(" AND ");o.push("WHEN ".concat(a," THEN ").concat(r))}for(const u of n){const a=n.reduce(((n,a)=>(u!==a&&n.push("".concat(u," > ").concat(a)),n)),[]).join(" AND "),r=l&&(0,t.R3)(l,u),i=e&&"'".concat(u,"'")?"'".concat(u,"'"):r?(0,t.Ll)(u):u;o.push("WHEN ".concat(a," THEN ").concat(i))}return"CASE ".concat(o.join(" ")," ELSE ").concat(r||"0"," END")}function i(n,a){const e=a.join(" + "),t={sqlExpression:"(".concat(e,")"),sqlWhere:l(a)},r={sqlExpression:"(( (".concat(u(a,{layer:n}),") / (").concat(e,") ) * 100)"),sqlWhere:"".concat(l(a)," AND ((").concat(e,") > 0)")};return{predominantCategory:{valueExpression:f(a)},size:{valueExpression:V(a),statisticsQuery:t,histogramQuery:t},opacity:{valueExpression:g(a),statisticsQuery:r,histogramQuery:r}}}function c(n){return n&&n.map((n=>'$feature["'.concat(n,'"];'))).join("\n")+"\n"||""}function s(n){let a=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const e=n.map((n=>'"'.concat(n,'"')));return"\n  var fieldNames = [ ".concat(e.join(", ")," ];\n  var numFields = ").concat(e.length,";\n  var maxValueField = null;\n  var maxValue = -Infinity;\n  var value, i, totalValue = null;\n\n  for(i = 0; i < numFields; i++) {\n    value = $feature[fieldNames[i]];\n\n    if(value > 0) {\n      if(value > maxValue) {\n        maxValue = value;\n        maxValueField = fieldNames[i];\n      }\n      else if (value == maxValue) {\n        maxValueField = null;\n      }\n    }\n    ").concat(a?"\n  if(value != null && value >= 0) {\n    if (totalValue == null) { totalValue = 0; }\n    totalValue = totalValue + value;\n  }\n  ":"","\n  }\n  ")}function f(n){const a=s(n);return"\n  ".concat(c(n),"\n  ").concat(a,"\n  return maxValueField;\n  ")}function m(n){const a=s(n);return"\n  ".concat(c(n),"\n  ").concat(a,"\n  return maxValue;\n  ")}function v(n,a){const e=p(n),t=c(e),r=n.map((n=>n.label?'"'.concat(n.label,'"'):'"'.concat(n.fieldName,'"'))),l=e.map((n=>'Number($feature["'.concat(n,'"])'))),o=[];return a&&a.forEach(((n,a)=>{o.push("function getValueForExpr".concat(a,"() {\n  ").concat(n.expression," \n}")),l.push("Number(getValueForExpr".concat(a,"())")),r.push('"'.concat(n.title||n.name,'"'))})),"\n  ".concat(t,"\n\n  ").concat(o.length?o.join("\n"):"","\n\n  var values = [ ").concat(l.join(", ")," ];\n  var aliases = [ ").concat(r.join(", ")," ];\n  var numValues = ").concat(l.length,';\n  var maxValueAlias = null;\n  var maxValue = -Infinity;\n  var value, i, totalValue = null;\n\n  for(i = 0; i < numValues; i++) {\n    value = values[i];\n\n    if(value > 0) {\n      if(value > maxValue) {\n        maxValue = value;\n        maxValueAlias = aliases[i];\n      }\n      else if (value == maxValue) {\n        maxValueAlias = "Tie";\n      }\n    }\n  }\n  return maxValueAlias;\n  ')}function p(n){return n.filter((n=>{let{fieldName:a}=n;return!!a})).map((n=>n.fieldName))}function d(n){return"\n  ".concat(c(n),"\n  var fieldValues = [ ").concat(n.map((n=>'$feature["'.concat(n,'"]'))).join(", ")," ];\n  var totalValue = Sum(fieldValues);\n  var order = Reverse(Sort(fieldValues));\n  return IIF(totalValue > 0, Round(((order[0] - order[1]) / totalValue) * 100, 2), null);\n  ")}function V(n){const a=c(n),e=n.map((n=>'"'.concat(n,'"')));return"\n  ".concat(a,"\n  var fieldNames = [ ").concat(e.join(", ")," ];\n  var numFields = ").concat(e.length,";\n  var value, i, totalValue = null;\n\n  for(i = 0; i < numFields; i++) {\n    value = $feature[fieldNames[i]];\n\n    if(value != null && value >= 0) {\n      if (totalValue == null) { totalValue = 0; }\n      totalValue = totalValue + value;\n    }\n  }\n\n  return totalValue;\n  ")}function g(n){const a=s(n,!0);return"\n  ".concat(c(n),"\n  ").concat(a,"\n\n  var strength = null;\n\n  if (maxValueField != null && totalValue > 0) {\n    strength = (maxValue / totalValue) * 100;\n  }\n\n  return strength;\n  ")}function A(n,a){const e=c(p(n)),t=n.map((n=>'{\n    value: Number($feature["'.concat(n.fieldName,'"]),\n    alias: "').concat(n.label||n.fieldName,'"\n    }'))),r=[];return a&&a.forEach(((n,a)=>{r.push("function getValueForExpr".concat(a,"() {\n  ").concat(n.expression," \n}")),t.push("{\n          value: Number(getValueForExpr".concat(a,'()),\n          alias: "').concat(n.title||n.name,'"\n          }'))})),"\n  ".concat(e,"\n\n  ").concat(r.length?r.join("\n"):"","\n\n  var groups = [ ").concat(t.join(", "),' ];\n  var numTopValues = Count(groups);\n\n  function getValuesArray(arr){\n    var valuesArray = []\n    for(var i in arr){\n      valuesArray[i] = arr[i].value;\n    }\n    return valuesArray;\n  }\n\n  function findAliases(top5Array, fullArray){\n    var aliases = [];\n    var found = "";\n    for(var i in top5Array){\n      for(var k in fullArray){\n        if(top5Array[i] == fullArray[k].value && Find(fullArray[k].alias, found) == -1){\n          found += fullArray[k].alias;\n          aliases[Count(aliases)] = {\n            alias: fullArray[k].alias,\n            value: top5Array[i]\n          };\n        }\n      }\n    }\n    return aliases;\n  }\n\n  function getTopGroups(groupsArray){\n    var values = getValuesArray(groupsArray);\n    var top5Values = IIF(Max(values) > 0, Top(Reverse(Sort(values)),numTopValues), "no data");\n    var top5Aliases = findAliases(top5Values,groupsArray);\n\n    if(TypeOf(top5Values) == "String"){\n      return top5Values;\n    } else {\n      var content = "";\n      for(var i in top5Aliases){\n        if(top5Aliases[i].value > 0){\n          content += (i+1) + ". " + top5Aliases[i].alias + " (" + Text(top5Aliases[i].value, "#,###") + ")";\n          content += IIF(i < numTopValues-1, TextFormatting.NewLine, "");\n        }\n      }\n    }\n\n    return content;\n  }\n\n  getTopGroups(groups);\n  ')}}}]);
//# sourceMappingURL=76106.fad978f4.chunk.js.map