"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[8380,85598],{14009:(e,t,i)=>{i.d(t,{e:()=>u,s:()=>l});var n=i(89379),a=i(54994),r=i(36643),s=i(77725),o=i(68295);async function l(e,t,i){const n=await u(e,t,i);return s.default.fromJSON(n)}async function u(e,t,i){const s=(0,a.Dl)(e),l=(0,n.A)({},i),u=o.default.from(t),{data:p}=await(0,r.eW)(s,u,u.sourceSpatialReference,l);return p}},16852:(e,t,i)=>{i.d(t,{C:()=>s,m:()=>r});var n=i(50076),a=i(50346);async function r(e,t,i){let r;try{r=await createImageBitmap(e)}catch(s){throw new n.default("request:server","Unable to load ".concat(t),{url:t,error:s})}return(0,a.throwIfAborted)(i),r}async function s(e,t,i,r,s){let o;try{o=await createImageBitmap(e)}catch(l){throw new n.default("request:server","Unable to load tile ".concat(t,"/").concat(i,"/").concat(r),{error:l,level:t,row:i,col:r})}return(0,a.throwIfAborted)(s),o}},25213:(e,t,i)=>{i.d(t,{E9:()=>f,Tw:()=>m,X6:()=>h});var n=i(89379),a=i(3825),r=i(76797),s=i(19247),o=i(13312),l=i(41882),u=i(49653),p=i(54994),c=i(77725);async function d(e,t,i){var d,m,h,f,y,g,v,R,b,w;const S=(0,p.Dl)(e),{rasterFunction:_,sourceJSON:x}=t||{},F=_?JSON.stringify(_.rasterFunctionDefinition||_):null,I=(0,p.lF)((0,n.A)((0,n.A)({},S.query),{},{renderingRule:F,f:"json"})),T=(0,p.jV)(I,i);e=S.path;const D=x||await(0,a.default)(e,T).then((e=>e.data)),P=D.hasRasterAttributeTable?(0,a.default)("".concat(e,"/rasterAttributeTable"),T):null,M=D.hasColormap?(0,a.default)("".concat(e,"/colormap"),T):null,C=D.hasHistograms?(0,a.default)("".concat(e,"/histograms"),T):null,A=D.currentVersion>=10.3?(0,a.default)("".concat(e,"/keyProperties"),T):null,O=D.hasMultidimensions?(0,a.default)("".concat(e,"/multidimensionalInfo"),T):null,N=await Promise.allSettled([P,M,C,A,O]);let V=null;if(D.minValues&&D.minValues.length===D.bandCount){V=[];for(let e=0;e<D.minValues.length;e++)V.push({min:D.minValues[e],max:D.maxValues[e],avg:D.meanValues[e],stddev:D.stdvValues[e]})}const E=r.default.fromJSON(D.extent),q=Math.ceil(E.width/D.pixelSizeX-.1),j=Math.ceil(E.height/D.pixelSizeY-.1),J=o.default.fromJSON(D.spatialReference||D.extent.spatialReference),Z="fulfilled"===N[0].status?null===(d=N[0].value)||void 0===d?void 0:d.data:null,L=null!==Z&&void 0!==Z&&null!==(m=Z.features)&&void 0!==m&&m.length?c.default.fromJSON(Z):null,z="fulfilled"===N[1].status?null===(h=N[1].value)||void 0===h?void 0:h.data.colormap:null,H=null!==z&&void 0!==z&&z.length?z:null,B="fulfilled"===N[2].status?null===(f=N[2].value)||void 0===f?void 0:f.data.histograms:null,U=null!==B&&void 0!==B&&null!==(y=B[0])&&void 0!==y&&null!==(y=y.counts)&&void 0!==y&&y.length?B:null,Q="fulfilled"===N[3].status&&null!==(g=null===(v=N[3].value)||void 0===v?void 0:v.data)&&void 0!==g?g:{},G="fulfilled"===N[4].status?null===(R=N[4].value)||void 0===R?void 0:R.data.multidimensionalInfo:null,k=null!==G&&void 0!==G&&null!==(b=G.variables)&&void 0!==b&&b.length?G:null;k&&k.variables.forEach((e=>{var t,i;null!==(t=e.statistics)&&void 0!==t&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),null===(i=e.dimensions)||void 0===i||i.forEach((e=>{"StdTime"!==e.name||e.recurring||e.unit||(e.unit="ISO8601")}))}));const{defaultVariable:W,serviceDataType:K}=D;W&&W!==Q.DefaultVariable&&(Q.DefaultVariable=W),(null===K||void 0===K?void 0:K.includes("esriImageServiceDataTypeVector"))&&!K.includes(Q.DataType)&&(Q.DataType=K.replace("esriImageServiceDataType",""));let X=D.noDataValue;(null===(w=D.noDataValues)||void 0===w?void 0:w.length)&&D.noDataValues.some((e=>e!==X))&&(X=D.noDataValues);const Y=D.transposeInfo?new u.A({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new s.default({x:D.extent.xmin,y:D.extent.ymax,spatialReference:J}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(q,j))/Math.LN2-8)),transposeInfo:D.transposeInfo}):void 0;return new l.default({width:q,height:j,bandCount:D.bandCount,extent:r.default.fromJSON(D.extent),spatialReference:J,pixelSize:new s.default({x:D.pixelSizeX,y:D.pixelSizeY,spatialReference:J}),pixelType:D.pixelType.toLowerCase(),statistics:V,attributeTable:L,colormap:H,histograms:U,keyProperties:Q,noDataValue:X,multidimensionalInfo:k,storageInfo:Y})}function m(e,t,i){return d(e,{sourceJSON:t},i)}function h(e,t,i){return d(e,{rasterFunction:t},i)}function f(e,t){e.attributeTable||(t.hasRasterAttributeTable=!1),e.histograms||(t.hasHistograms=!1),e.colormap||(t.hasColormap=!1),e.multidimensionalInfo||(t.hasMultidimensions=!1)}},26324:(e,t,i)=>{i.d(t,{H:()=>o});var n=i(35143),a=i(46053),r=(i(81806),i(76460),i(47249),i(85842)),s=i(45378);const o=e=>{let t=class extends e{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return(0,n._)([(0,a.MZ)({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],t.prototype,"activePresetRendererName",void 0),(0,n._)([(0,a.MZ)({type:[s.default],json:{name:"layerDefinition.presetRenderers",write:!0}})],t.prototype,"presetRenderers",void 0),t=(0,n._)([(0,r.$)("esri.layers.mixins.RasterPresetRendererMixin")],t),t}},36643:(e,t,i)=>{i.d(t,{GB:()=>b,IJ:()=>f,Jf:()=>R,Pk:()=>g,eW:()=>h,gW:()=>v,kS:()=>y});var n=i(89379),a=i(3825),r=i(90534),s=i(19902),o=i(73953),l=i(80963),u=i(78238),p=i(89122),c=i(57831);const d="Layer does not support extent calculation.";function m(e,t){var i;const n=e.geometry,a=e.toJSON();delete a.compactGeometryEnabled,delete a.defaultSpatialReferenceEnabled;const r=a;let o,u,p;if(null!=n&&(u=n.spatialReference,p=(0,l.YX)(u),r.geometryType=(0,s.getJsonType)(n),r.geometry=function(e,t){if(t&&"extent"===e.type)return"".concat(e.xmin,",").concat(e.ymin,",").concat(e.xmax,",").concat(e.ymax);if(t&&"point"===e.type)return"".concat(e.x,",").concat(e.y);const i=e.toJSON();return delete i.spatialReference,JSON.stringify(i)}(n,e.compactGeometryEnabled),r.inSR=p),a.groupByFieldsForStatistics&&(r.groupByFieldsForStatistics=a.groupByFieldsForStatistics.join(",")),a.objectIds&&(r.objectIds=a.objectIds.join(",")),a.orderByFields&&(r.orderByFields=a.orderByFields.join(",")),!a.outFields||!a.returnDistinctValues&&(null!==t&&void 0!==t&&t.returnCountOnly||null!==t&&void 0!==t&&t.returnExtentOnly||null!==t&&void 0!==t&&t.returnIdsOnly)?delete r.outFields:a.outFields.includes("*")?r.outFields="*":r.outFields=a.outFields.join(","),a.outSR?(r.outSR=(0,l.YX)(a.outSR),o=e.outSpatialReference):n&&(a.returnGeometry||a.returnCentroid)&&(r.outSR=r.inSR,o=u),a.returnGeometry&&delete a.returnGeometry,a.outStatistics&&(r.outStatistics=JSON.stringify(a.outStatistics)),a.fullText&&(r.fullText=JSON.stringify(a.fullText)),a.pixelSize&&(r.pixelSize=JSON.stringify(a.pixelSize)),a.quantizationParameters&&(e.defaultSpatialReferenceEnabled&&null!=u&&null!=(null===(i=e.quantizationParameters)||void 0===i?void 0:i.extent)&&u.equals(e.quantizationParameters.extent.spatialReference)&&delete a.quantizationParameters.extent.spatialReference,r.quantizationParameters=JSON.stringify(a.quantizationParameters)),a.parameterValues&&(r.parameterValues=JSON.stringify(a.parameterValues)),a.rangeValues&&(r.rangeValues=JSON.stringify(a.rangeValues)),a.dynamicDataSource&&(r.layer=JSON.stringify({source:a.dynamicDataSource}),delete a.dynamicDataSource),a.timeExtent){const e=a.timeExtent,{start:t,end:i}=e;null==t&&null==i||(r.time=t===i?t:"".concat(null!==t&&void 0!==t?t:"null",",").concat(null!==i&&void 0!==i?i:"null")),delete a.timeExtent}return e.defaultSpatialReferenceEnabled&&null!=u&&null!=o&&u.equals(o)&&(r.defaultSR=r.inSR,delete r.inSR,delete r.outSR),r}async function h(e,t,i,n){const a=null!=t.timeExtent&&t.timeExtent.isEmpty?{data:{features:[]}}:await b(e,t,"json",n);return(0,c.q)(t,i,a.data),a}async function f(e,t,i,n){if(null!=t.timeExtent&&t.timeExtent.isEmpty)return{data:i.createFeatureResult()};const a=await y(e,t,n),r=a;return r.data=(0,p.m)(a.data,i),r}function y(e,t,i){return b(e,t,"pbf",i)}function g(e,t,i){return null!=t.timeExtent&&t.timeExtent.isEmpty?Promise.resolve({data:{objectIds:[]}}):b(e,t,"json",i,{returnIdsOnly:!0})}function v(e,t,i){return null!=t.timeExtent&&t.timeExtent.isEmpty?Promise.resolve({data:{count:0}}):b(e,t,"json",i,{returnIdsOnly:!0,returnCountOnly:!0})}async function R(e,t,i){if(null!=t.timeExtent&&t.timeExtent.isEmpty)return{data:{count:0,extent:null}};const n=await b(e,t,"json",i,{returnExtentOnly:!0,returnCountOnly:!0}),a=n.data;if(a.hasOwnProperty("extent"))return n;if(a.features)throw new Error(d);if(a.hasOwnProperty("count"))throw new Error(d);return n}async function b(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const p="string"==typeof e?(0,r.urlToObject)(e):e,c=t.geometry?[t.geometry]:[],d=await(0,o.normalizeCentralMeridian)(c,null,{signal:s.signal}),h=null===d||void 0===d?void 0:d[0];null!=h&&((t=t.clone()).geometry=h);const f=(0,u.z)((0,n.A)((0,n.A)((0,n.A)({},p.query),{},{f:i},l),m(t,l)));return(0,a.default)((0,r.join)(p.path,(y=l,null==t.formatOf3DObjects||y.returnCountOnly||y.returnExtentOnly||y.returnIdsOnly?"query":"query3d")),(0,n.A)((0,n.A)({},s),{},{responseType:"pbf"===i?"array-buffer":"json",query:(0,n.A)((0,n.A)({},f),s.query)}));var y}},37713:(e,t,i)=>{i.d(t,{I:()=>s});var n=i(54994),a=i(36643),r=i(68295);async function s(e,t,i){const s=(0,n.Dl)(e),{data:o}=await(0,a.gW)(s,r.default.from(t),i);return o.count}},45378:(e,t,i)=>{i.r(t),i.d(t,{default:()=>d});var n=i(35143),a=i(69098),r=i(42553),s=i(46053),o=i(40565),l=(i(81806),i(47249),i(6409)),u=i(85842),p=i(88205);let c=class extends(a.A.ClonableMixin(r.A)){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};(0,n._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],c.prototype,"name",void 0),(0,n._)([(0,s.MZ)({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),(0,l.e)({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],c.prototype,"method",void 0),(0,n._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],c.prototype,"value",void 0),(0,n._)([(0,s.MZ)({type:[o.jz],json:{write:{isRequired:!0}}})],c.prototype,"bandIds",void 0),(0,n._)([(0,s.MZ)({types:p.uy,json:{write:!0,origins:{"web-scene":{types:p.Gj,write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],c.prototype,"renderer",void 0),c=(0,n._)([(0,u.$)("esri.renderers.support.RasterPresetRenderer")],c);const d=c},53104:(e,t,i)=>{i.d(t,{V:()=>s});var n=i(54994),a=i(36643),r=i(68295);async function s(e,t,i){var s;const o=(0,n.Dl)(e),{data:l}=await(0,a.Pk)(o,r.default.from(t),i);return null!==(s=l.objectIds)&&void 0!==s?s:[]}},78238:(e,t,i)=>{function n(e){const t={};for(const i in e){if("declaredClass"===i)continue;const a=e[i];if(null!=a&&"function"!=typeof a)if(Array.isArray(a)){t[i]=[];for(let e=0;e<a.length;e++)t[i][e]=n(a[e])}else"object"==typeof a?a.toJSON&&(t[i]=JSON.stringify(a)):t[i]=a}return t}i.d(t,{z:()=>n})},85598:(e,t,i)=>{i.r(t),i.d(t,{default:()=>Ze});var n=i(89379),a=i(35143),r=i(73204),s=i(69098),o=i(50076),l=i(77717),u=i(50346),p=i(46053),c=(i(81806),i(76460)),d=(i(47249),i(85842)),m=i(17707),h=i(25515),f=i(39356),y=i(3825),g=i(53084),v=i(68134),R=i(90534),b=i(40565),w=i(28379),S=i(76797),_=i(65215),x=i(13312),F=i(80963),I=i(95363),T=i(15359),D=i(42553),P=i(44038),M=i(52297);const C={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var A=i(93187),O=i(74916),N=i(43996);const V=new Set(["u1","u2","u4","u8","s8","u16","s16"]),E={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},q=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function j(e){return q.has(e.type)}function J(e,t){var i;if(!e||!t)return(0,g.clone)(e||t);const n=(0,g.clone)(e);if(n.functionDefinition&&t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),Z(n.functionDefinition.arguments,t),n.rasterFunctionDefinition=n.functionDefinition.toJSON()}else"none"!==(null===(i=t.functionName)||void 0===i?void 0:i.toLowerCase())&&(H(n.functionArguments).Raster=t);return n}function Z(e,t){for(const i in e)"raster"===i.toLowerCase()&&("RasterFunctionVariable"===e[i].type?(e[i]=t.rasterFunctionDefinition,e[i].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[i].type&&Z(e[i].arguments,t))}function L(e){const t=(0,g.clone)(C[e.functionName+"Function"]),i=e.functionArguments;for(const n in i)"raster"===n.toLowerCase()?(t.arguments[n]=L(i[n]),t.arguments[n].type="RasterFunctionTemplate"):"colormap"===n.toLowerCase()?(t.arguments[n].value=k(i[n]),t.arguments.ColorSchemeType.value=0):t.arguments[n].value=i[n];return t}function z(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){var i;const n=t.convertToRFT,a=new P.default;a.functionName="Stretch";const r=B[O.u.toJSON(e.stretchType)],s="u8",o=null===(i=e.customStatistics)||void 0===i?void 0:i.map((e=>{var t,i;return[e.min,e.max,null!==(t=e.avg)&&void 0!==t?t:0,null!==(i=e.stddev)&&void 0!==i?i:1]})),l={StretchType:r,Statistics:o,DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(l.Min=e.outputMin),null!=e.outputMax&&(l.Max=e.outputMax),r===B.standardDeviation?(l.NumberOfStandardDeviations=e.numberOfStandardDeviations,a.outputPixelType=s):r===B.percentClip?(l.MinPercent=e.minPercent,l.MaxPercent=e.maxPercent,a.outputPixelType=s):r===B.minMax?a.outputPixelType=s:r===B.sigmoid&&(l.SigmoidStrengthLevel=e.sigmoidStrengthLevel),a.functionArguments=l,a.variableName="Raster",e.colorRamp){const i=e.colorRamp,r=new P.default;if(n)r.functionArguments={ColorRamp:(0,A.hf)(i)};else{const n=(0,A.hs)(i,!0);if(n)r.functionArguments={colorRampName:n};else if(!t.convertColorRampToColormap||"algorithmic"!==i.type&&"multipart"!==i.type){var u;const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&(null===(u=t.colorRamps)||void 0===u?void 0:u.length)&&t.colorRamps.forEach((e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm")),r.functionArguments={colorRamp:t}}else r.functionArguments={Colormap:(0,A.R8)(i)}}return r.variableName="Raster",r.functionName="Colormap",r.functionArguments.Raster=a,n?new P.default({rasterFunctionDefinition:L(r)}):r}return n?new P.default({rasterFunctionDefinition:L(a)}):a}(e,t);case"class-breaks":return function(e,t){const i=[],n=[],a=[],r=[],s=1e-4,{pixelType:o,rasterAttributeTable:l}=t,u=null==l?null:l.features,p=Q(l);if(p&&u&&Array.isArray(u)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,i)=>{var n;const a=null===(n=t.symbol)||void 0===n?void 0:n.color;let s;(null===a||void 0===a?void 0:a.a)&&null!=t.minValue&&null!=t.maxValue&&u.forEach((n=>{null!=t.minValue&&null!=t.maxValue&&(s=n.attributes[e.field],(s>=t.minValue&&s<t.maxValue||i===e.classBreakInfos.length-1&&s>=t.minValue)&&r.push([n.attributes[p],a.r,a.g,a.b]))}))}));const i=o?U(r,o):r,n=new P.default;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=i,n.variableName="Raster",t.convertToRFT?new P.default({rasterFunctionDefinition:L(n)}):n}e.classBreakInfos.forEach(((e,t)=>{if(null==e.minValue||null==e.maxValue)return;const o=e.symbol&&e.symbol.color;null!==o&&void 0!==o&&o.a?(0===t?i.push(e.minValue,e.maxValue+s):i.push(e.minValue+s,e.maxValue+s),n.push(t),r.push([t,o.r,o.g,o.b])):a.push(e.minValue,e.maxValue)}));const c=o?U(r,o):r,d=new P.default;d.functionName="Remap",d.functionArguments={InputRanges:i,OutputValues:n,NoDataRanges:a},d.variableName="Raster";const m=new P.default;return m.functionName="Colormap",m.functionArguments={Colormap:c,Raster:d},t.convertToRFT?new P.default({rasterFunctionDefinition:L(m)}):m}(e,t);case"unique-value":return function(e,t){var i;const n=[],{pixelType:a,rasterAttributeTable:r}=t,s=null==r?null:r.features,o=Q(r),l=null===(i=e.defaultSymbol)||void 0===i||null===(i=i.color)||void 0===i?void 0:i.toRgb(),u=e.uniqueValueInfos;if(u)if(s){if(o){const t=new Map;u.forEach((e=>{const i=e.value,n=G(e);null!=i&&(null===n||void 0===n?void 0:n.a)&&t.set(String(i),n.toRgb())}));const i=e.field;i&&s.forEach((e=>{let{attributes:a}=e;const r=String(a[i]),s=a[o],u=t.get(r);u?n.push([s,...u]):l&&n.push([s,...l])}))}}else for(let d=0;d<u.length;d++){const e=u[d],t=G(e),i=+e.value;if(null!==t&&void 0!==t&&t.a){if(isNaN(i))return null;n.push([i,t.r,t.g,t.b])}}const p=a?U(n,a):n,c=new P.default;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=p,c.variableName="Raster",t.convertToRFT?new P.default({rasterFunctionDefinition:L(c)}):c}(e,t);case"raster-colormap":return function(e,t){const i=e.extractColormap();if(!i||0===i.length)return null;const{pixelType:n}=t,a=n?U(i,n):i,r=new P.default;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=a,t.convertToRFT?new P.default({rasterFunctionDefinition:L(r)}):r}(e,t);case"vector-field":return function(e,t){const i=new P.default;i.functionName="VectorFieldRenderer";const{dataType:n,bandNames:a}=t,r="vector-uv"===n;let s,o;if(a&&2===a.length){const e=a.map((e=>e.toLowerCase()));s=e.indexOf("magnitude"),o=e.indexOf("direction")}-1!==s&&null!==s||(s=0,o=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new N.default,c={magnitudeBandID:s,directionBandID:o,isUVComponents:r,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:E[e.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};i.functionArguments=c;const d=L(i);return t.convertToRFT?P.default.fromJSON({rasterFunctionDefinition:d}):i}(e,t);case"raster-shaded-relief":return function(e,t){const i=t.convertToRFT;if("elevation"!==t.dataType&&("generic"!==t.dataType||1!==t.bandCount||"s16"!==t.pixelType&&"s32"!==t.pixelType&&"f32"!==t.pixelType&&"f64"!==t.pixelType))return new P.default;const n=new P.default;n.functionName="Hillshade";const a="traditional"===e.hillshadeType?0:1,r="none"===e.scalingType?1:3,s={HillshadeType:a,SlopeType:r,ZFactor:e.zFactor};return 0===a&&(s.Azimuth=e.azimuth,s.Altitude=e.altitude),3===r&&(s.PSPower=e.pixelSizePower,s.PSZFactor=e.pixelSizeFactor),n.functionArguments=s,n.variableName="Raster",e.colorRamp&&(n.functionName="ShadedRelief",i?s.ColorRamp=(0,A.hf)(e.colorRamp):s.Colormap=(0,A.R8)(e.colorRamp)),i?new P.default({rasterFunctionDefinition:L(n)}):n}(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function H(e){var t;const i=null!==(t=null===e||void 0===e?void 0:e.Raster)&&void 0!==t?t:null===e||void 0===e?void 0:e.raster;return i&&"esri.layers.support.RasterFunction"===i.declaredClass?H(i.functionArguments):e}const B={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function U(e,t){const i=V.has(t)?(0,M.hP)(t):null;return i&&e.push([Math.floor(i[0]-1),0,0,0],[Math.ceil(i[1]+1),0,0,0]),e}function Q(e){if(null==e)return;const{fields:t}=e,i=null===t||void 0===t?void 0:t.find((e=>(null===e||void 0===e?void 0:e.name)&&"value"===e.name.toLowerCase()));return null===i||void 0===i?void 0:i.name}function G(e){var t,i,n;return"polygon-3d"===(null===(t=e.symbol)||void 0===t?void 0:t.type)?null===(i=e.symbol.symbolLayers)||void 0===i||null===(i=i.find((e=>"fill"===e.type)))||void 0===i||null===(i=i.material)||void 0===i?void 0:i.color:null===(n=e.symbol)||void 0===n?void 0:n.color}function k(e){const t=[],i=[];return e.forEach((e=>{t.push(e[0]),i.push((0,A.vL)([...e.slice(1),255]))})),{type:"RasterColormap",values:t,colors:i}}var W=i(29365),K=i(58646);let X=class extends D.A{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,t,i){this.layer.version<10.3||(t[i]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,t,i){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[i]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}get format(){var e;return"vector-field"===(null===(e=this.layer.renderer)||void 0===e?void 0:e.type)?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}get pixelType(){const{layer:e}=this;return e.pixelType!==e.serviceRasterInfo.pixelType?e.pixelType:void 0}writeLercVersion(e,t,i){"lerc"===this.format&&this.layer.version>=10.5&&(t[i]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("rasterFunction"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("pixelType"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const i=e.definitionExpression;return t?i&&i!==t.where&&(t=t.clone(),t.where=i):i&&(t=new W.default({where:i})),t}get rasterFunction(){var e,t;const i=this.layer;let{rasterFunction:n}=i;const a=i.pixelFilter,r=!i.format||i.format.includes("jpg")||i.format.includes("png");n=this._addResampleRasterFunction(n);const s=null===(e=i.multidimensionalSubset)||void 0===e?void 0:e.areaOfInterest;return s&&(n=function(e,t){const i=new P.default({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}});return J(i,e)}(n,s)),r&&!a&&"vector-field"!==(null===(t=i.renderer)||void 0===t?void 0:t.type)&&(n=this.combineRendererWithRenderingRule(n)),n}combineRendererWithRenderingRule(e){var t;const i=this.layer,{rasterInfo:n,renderer:a}=i;return e=e||i.rasterFunction,a&&j(a)?J(z(a,{rasterAttributeTable:n.attributeTable,pixelType:n.pixelType,dataType:n.dataType,bandNames:n.bandInfos.map((e=>{let{name:t}=e;return t})),convertColorRampToColormap:i.version<10.6,convertToRFT:!(null===(t=e)||void 0===t||!t.rasterFunctionDefinition),bandCount:n.bandCount}),e):e}_addResampleRasterFunction(e){var t;if("vector-field"!==(null===(t=this.layer.renderer)||void 0===t?void 0:t.type)||"Resample"===(null===e||void 0===e?void 0:e.functionName))return e;const i="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,n=this.layer.serviceRasterInfo.pixelSize;let a=new P.default({functionName:"Resample",functionArguments:{ResamplingType:i,InputCellSize:n}});return a=null!==e&&void 0!==e&&e.rasterFunctionDefinition?new P.default({rasterFunctionDefinition:L(a)}):a,J(a,e)}};(0,a._)([(0,p.MZ)()],X.prototype,"layer",void 0),(0,a._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"adjustAspectRatio",null),(0,a._)([(0,m.K)("adjustAspectRatio")],X.prototype,"writeAdjustAspectRatio",null),(0,a._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"bandIds",null),(0,a._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"compression",void 0),(0,a._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"compressionQuality",null),(0,a._)([(0,m.K)("compressionQuality")],X.prototype,"writeCompressionQuality",null),(0,a._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"compressionTolerance",null),(0,a._)([(0,m.K)("compressionTolerance")],X.prototype,"writeCompressionTolerance",null),(0,a._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"format",null),(0,a._)([(0,p.MZ)({type:String,json:{read:{reader:K.SZ.read},write:{writer:K.SZ.write}}})],X.prototype,"interpolation",null),(0,a._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"noData",null),(0,a._)([(0,p.MZ)({type:String,json:{read:{reader:K.hm.read},write:{writer:K.hm.write}}})],X.prototype,"noDataInterpretation",null),(0,a._)([(0,p.MZ)({type:K.e8.apiValues,json:{read:K.e8.read,write:K.e8.write}})],X.prototype,"pixelType",null),(0,a._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"lercVersion",void 0),(0,a._)([(0,m.K)("lercVersion")],X.prototype,"writeLercVersion",null),(0,a._)([(0,p.MZ)({type:Number})],X.prototype,"version",null),(0,a._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"mosaicRule",null),(0,a._)([(0,p.MZ)({json:{write:!0,name:"renderingRule"}})],X.prototype,"rasterFunction",null),X=(0,a._)([(0,d.$)("esri.layers.support.ExportImageServiceParameters")],X);var Y=i(44135),$=i(1900),ee=i(16852),te=i(13023),ie=i(66486),ne=i(51939),ae=i(41882),re=i(42915),se=i(68347),oe=i(59648),le=i(99846),ue=i(78937),pe=i(20118),ce=i(88205),de=i(90391),me=i(25213),he=i(19247),fe=i(49653),ye=i(54994);var ge=i(37713),ve=i(53104),Re=i(14009),be=i(77725),we=i(81950),Se=i(68295),_e=i(46533);const xe=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Fe=(0,b.Qp)(b.GB,{min:0,max:255});const Ie=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new X({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.length<1||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){null!=e&&"lerc"!==this.format&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?W.default.fromJSON(t):null}get fieldsIndex(){return this.fields?new $.default(this.fields):null}set format(e){e&&xe.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){var t;let i=e;null!==(t=i)&&void 0!==t&&t.mosaicMethod&&(i=W.default.fromJSON((0,n.A)((0,n.A)({},i.toJSON()),{},{mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation}))),this._set("mosaicRule",i)}readMosaicRule(e,t){const i=e||t.mosaicRule;return i?W.default.fromJSON(i):this._isMosaicRuleSupported(t)?W.default.fromJSON(t):null}writeMosaicRule(e,t,i){const{mosaicRule:n}=this;this._isValidCustomizedMosaicRule(n)&&(t[i]=n.toJSON())}writeNoData(e,t,i){null!=e&&"number"==typeof e&&(t[i]=Fe(e))}readObjectIdField(e,t){if(!e){const i=t.fields.find((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=null===i||void 0===i?void 0:i.name}return e}get parsedUrl(){return(0,R.urlToObject)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}get renderer(){const{activePresetRendererName:e,presetRenderers:t}=this;if(e){const i=null===t||void 0===t?void 0:t.find((t=>{let{name:i}=t;return i===e}));return null===i||void 0===i?void 0:i.renderer.clone()}return this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,t,i){var n;const a=null===t||void 0===t||null===(n=t.layerDefinition)||void 0===n||null===(n=n.drawingInfo)||void 0===n?void 0:n.renderer,r=(0,ce.LF)(a,i);return null==r?null:("vector-field"===r.type&&t.symbolTileSize&&!a.symbolTileSize&&(r.symbolTileSize=t.symbolTileSize),j(r)||c.A.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),r)}writeRenderer(e,t,i){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){var e,t,i;const n=null!==(e=null===(t=this.fields)||void 0===t?void 0:t.map((e=>e.clone())))&&void 0!==e?e:[];n.push((0,ne.rZ)()),"mosaic-dataset"===this.sourceType&&null!==(i=this.fields)&&void 0!==i&&i.length&&n.push((0,ne.Nd)()),this.version>=10.4&&null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.some((e=>{let{name:t}=e;return"none"===t.toLowerCase()}))&&n.push((0,ne.dy)()),null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((e=>{let{name:t}=e;return"none"!==t.toLowerCase()})).forEach((e=>{let{name:t}=e;return n.push((0,ne.nq)(t))}));const{rasterInfo:a}=this;if(this._isVectorDataSet()){var r;const e=null===a||void 0===a||null===(r=a.multidimensionalInfo)||void 0===r||null===(r=r.variables[0].unit)||void 0===r?void 0:r.trim(),t=(0,ne.DV)(e),i=(0,ne.y6)();n.push(t,i)}if(null!==a&&void 0!==a&&a.multidimensionalInfo&&"raster-dataset"===this.sourceType){const e=(0,ne.AL)(a.multidimensionalInfo);n.push(...e)}const s=null===a||void 0===a?void 0:a.attributeTable;if(null!=s){const e=(0,ne.jC)(s);n.push(...e)}return n}set rasterFunction(e){var t;let i=e;null!==(t=i)&&void 0!==t&&t.rasterFunction&&(i=P.default.fromJSON((0,n.A)((0,n.A)({},i.toJSON()),{},{rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments}))),this._set("rasterFunction",i)}readRasterFunction(e,t){const i=t.rasterFunctionInfos;return t.renderingRule||null!==i&&void 0!==i&&i.length&&"None"!==i[0].name?this._isRFTJson(t.renderingRule)?P.default.fromJSON({rasterFunctionDefinition:t.renderingRule}):P.default.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const i=e||t.extent.spatialReference;return i?x.default.fromJSON(i):null}writePixelType(e,t,i){null!=this.serviceRasterInfo&&this.pixelType===this.serviceRasterInfo.pixelType||(t[i]=K.e8.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let i=e;const{renderer:a,symbolizer:r,pixelFilter:s,bandIds:o}=this;if(!this._isPicture()&&a&&r&&!s){const s=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(a.toJSON()),l=this._rasterJobHandler.instance;if(l){s&&(r.bind(),await l.updateSymbolizer(r,t),this._cachedRendererJson=a.toJSON());const u=await l.symbolize((0,n.A)({bandIds:o},e),t);i={extent:e.extent,pixelBlock:u}}else i={extent:e.extent,pixelBlock:r.symbolize((0,n.A)({bandIds:o},e))}}return i}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async calculateVolume(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsCalculateVolume)throw new o.default("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,g.clone)(e),this.mosaicRule&&null==e.mosaicRule&&(e.mosaicRule=this.mosaicRule),(0,de.calculateVolume)(this.url,e,this._getRequestOptions(t))}async computeAngles(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsComputeAngles)throw new o.default("imagery-layer:compute-angles","this operation is not supported on the input image service");return(0,de.computeAngles)(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsComputePixelLocation)throw new o.default("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return(0,de.computePixelSpaceLocations)(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsComputeHistograms)throw new o.default("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=(0,g.clone)(e),this._applyMosaicAndRenderingRules(e),(0,de.computeHistograms)(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsComputeStatisticsHistograms)throw new o.default("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=(0,g.clone)(e),this._applyMosaicAndRenderingRules(e),(0,de.computeStatisticsHistograms)(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const i=await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal);if(!("base-and-top"===e.operationType?i.mensuration.supportsHeightFromBaseAndTop:"base-and-top-shadow"===e.operationType?i.mensuration.supportsHeightFromBaseAndTopShadow:i.mensuration.supportsHeightFromTopAndTopShadow))throw new o.default("imagery-layer:measure-height","this operation is not supported on the input image service");return e=(0,g.clone)(e),this._applyMosaicRule(e),(0,de.measureHeight)(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const i=await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal);if(!i.mensuration.supportsAreaAndPerimeter||e.is3D&&!i.mensuration.supports3D)throw new o.default("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=(0,g.clone)(e),this._applyMosaicRule(e),(0,de.measureAreaAndPerimeter)(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const i=await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal);if(!i.mensuration.supportsDistanceAndAngle||e.is3D&&!i.mensuration.supports3D)throw new o.default("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=(0,g.clone)(e),this._applyMosaicRule(e),(0,de.measureDistanceAndAngle)(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const i=await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal);if(!i.mensuration.supportsPointOrCentroid||e.is3D&&!i.mensuration.supports3D)throw new o.default("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=(0,g.clone)(e),this._applyMosaicRule(e),(0,de.measurePointOrCentroid)(this.url,e,this._getRequestOptions(t))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsMeasureFromImage)throw new o.default("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if("polyline"!==e.geometry.type)throw new o.default("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return(0,de.measureLengthFromImage)(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsMeasureFromImage)throw new o.default("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if("polygon"!==e.geometry.type)throw new o.default("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return(0,de.measureAreaFromImage)(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return null!=t?t.get(e):void 0}getFieldDomain(e,t){const i=this.getField(e);return i?i.domain:null}async fetchImage(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(null==e||null==t||null==n)throw new o.default("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const e=await this._generateRasterInfo(this.rasterFunction,{signal:a.signal});e&&(this.rasterInfo=e)}const r=this.getExportImageServiceParameters(e,t,n,a.timeExtent);if(null==r){var s;if(a.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement("canvas");return e.width=t,e.height=n,a.returnImageBitmap?{imageBitmap:await(0,ee.m)(e,"".concat(i(this.parsedUrl),"/exportImage"),a.signal)}:{imageOrCanvasElement:e}}const{bandIds:r,rasterInfo:o}=this,l=null!==(s=(null===r||void 0===r?void 0:r.length)||o.bandCount)&&void 0!==s?s:0,u=t*n,p=o.pixelType,c=[];for(let e=0;e<l;e++)c.push(ie.default.createEmptyBand(p,u));return{pixelData:{pixelBlock:new ie.default({width:t,height:n,pixels:c,mask:new Uint8Array(u),pixelType:p}),extent:e}}}const l=!!a.requestAsImageElement&&!this.pixelFilter,u=l&&!!a.returnImageBitmap,p={imageServiceParameters:r,imageProps:{extent:e,width:t,height:n,format:this.format},requestAsImageElement:l,returnImageBitmap:u,signal:a.signal};return this._requestArrayBuffer(p)}fetchKeyProperties(e){return(0,y.default)(i(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?null===e||void 0===e?void 0:e.rasterFunction:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new o.default("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,y.default)(i(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?null===e||void 0===e?void 0:e.rasterFunction:null})}).then((e=>be.default.fromJSON(e.data)))}getCatalogItemRasterInfo(e,t){const a=(0,n.A)((0,n.A)({},t),{},{query:this._getQueryParams()});return async function(e,t,i){var a,r;const s=(0,ye.Dl)(e),o=(0,ye.lF)((0,n.A)((0,n.A)({},null===s||void 0===s?void 0:s.query),{},{f:"json"})),l=(0,ye.jV)(o,i),u="".concat(null===s||void 0===s?void 0:s.path,"/").concat(t,"/info"),p=(0,y.default)("".concat(u),l),c=(0,y.default)("".concat(u,"/keyProperties"),l),d=await Promise.allSettled([p,c]),m="fulfilled"===d[0].status?d[0].value.data:null,h="fulfilled"===d[1].status?d[1].value.data:null;let f=null;(null===(a=m.statistics)||void 0===a?void 0:a.length)&&(f=m.statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))));const g=S.default.fromJSON(m.extent),v=Math.ceil(g.width/m.pixelSizeX-.1),R=Math.ceil(g.height/m.pixelSizeY-.1),b=g.spatialReference,w=new he.default({x:m.pixelSizeX,y:m.pixelSizeY,spatialReference:b}),_=null!==(r=m.histograms)&&void 0!==r&&r.length?m.histograms:null,x=new fe.A({origin:m.origin,blockWidth:m.blockWidth,blockHeight:m.blockHeight,firstPyramidLevel:m.firstPyramidLevel,maximumPyramidLevel:m.maxPyramidLevel});return new ae.default({width:v,height:R,bandCount:m.bandCount,extent:g,spatialReference:b,pixelSize:w,pixelType:m.pixelType.toLowerCase(),statistics:f,histograms:_,keyProperties:h,storageInfo:x})}(i(this.parsedUrl),e,a)}async getCatalogItemICSInfo(e,t){var a,r;const{data:s}=await(0,y.default)(i(this.parsedUrl)+"/"+e+"/info/ics",(0,n.A)({query:this._getQueryParams()},t)),o=null===s||void 0===s?void 0:s.ics;if(!o)return;let l=null;try{l=(await(0,y.default)(i(this.parsedUrl)+"/"+e+"/info",(0,n.A)({query:this._getQueryParams()},t))).data.extent}catch(J){}if(null===(a=l)||void 0===a||!a.spatialReference)return{ics:o,icsToPixelTransform:null,icsExtent:null,northDirection:null};const u=this.version>=10.7?(0,y.default)(i(this.parsedUrl)+"/"+e+"/info/icstopixel",(0,n.A)({query:this._getQueryParams()},t)).then((e=>e.data)).catch((()=>({}))):{},p=l.spatialReference,c={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[l]}),inSR:(0,F.YX)(p),outSR:"0:"+e},d=(0,y.default)(i(this.parsedUrl)+"/project",(0,n.A)({query:this._getQueryParams(c)},t)).then((e=>e.data)).catch((()=>({}))),m=(l.xmin+l.xmax)/2,h=(l.ymax-l.ymin)/6,f=l.ymin+h,g=[];for(let i=0;i<5;i++)g.push({x:m,y:f+h*i});const v={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:g}),inSR:(0,F.YX)(p),outSR:"0:"+e},R=(0,y.default)(i(this.parsedUrl)+"/project",(0,n.A)({query:this._getQueryParams(v)},t)).then((e=>e.data)).catch((()=>({}))),b=await Promise.all([u,d,R]);let w=b[0].ipxf;if(null==w){var _,I,T;const e=null===(_=o.geodataXform)||void 0===_?void 0:_.xf_0;"topup"===(null===e||void 0===e||null===(I=e.name)||void 0===I?void 0:I.toLowerCase())&&6===(null===e||void 0===e||null===(T=e.coefficients)||void 0===T?void 0:T.length)&&(w={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const D=S.default.fromJSON(null===(r=b[1])||void 0===r||null===(r=r.geometries)||void 0===r?void 0:r[0]);D&&(D.spatialReference=new x.default({wkid:0,imageCoordinateSystem:o}));const P=b[2].geometries?b[2].geometries.filter((e=>null!=(null===e||void 0===e?void 0:e.x)&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],M=P.length;if(M<3)return{ics:o,icsToPixelTransform:w,icsExtent:D,northDirection:null};let C=0,A=0,O=0,N=0;for(let i=0;i<M;i++)C+=P[i].x,A+=P[i].y,O+=P[i].x*P[i].x,N+=P[i].x*P[i].y;const V=(M*N-C*A)/(M*O-C*C);let E=0;const q=P[4].x>P[0].x,j=P[4].y>P[0].y;return V===1/0?E=j?90:270:0===V?E=q?0:180:V>0?E=q?180*Math.atan(V)/Math.PI:180*Math.atan(V)/Math.PI+180:V<0&&(E=j?180+180*Math.atan(V)/Math.PI:360+180*Math.atan(V)/Math.PI),{ics:o,icsToPixelTransform:w,icsExtent:D,northDirection:E}}async generateRasterInfo(e,t){var a,r;e=(0,b.PZ)(P.default,e);const s=(0,n.A)((0,n.A)({},t),{},{query:this._getQueryParams()});if(!e||"none"===(null===(a=e.functionName)||void 0===a?void 0:a.toLowerCase())||this._isVectorFieldResampleFunction(e))return null!==(r=this.serviceRasterInfo)&&void 0!==r?r:(0,me.Tw)(i(this.parsedUrl),this.sourceJSON,s);const l=function(e){const t=JSON.stringify(e),i=t.includes('"rasterFunctionDefinition":{'),n=i?t.match(/"type":"(.*?FunctionArguments")/gi):t.match(/"rasterFunction":"(.*?")/gi),a=null===n||void 0===n?void 0:n.map((e=>i?e.slice(8,-18):e.slice(18,-1)));return a?a.join("/"):null}(e);if(!l)throw new o.default("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[l])return this._functionRasterInfos[l];const u=(0,me.X6)(i(this.parsedUrl),e,s);this._functionRasterInfos[l]=u;try{return await u}catch(p){throw this._functionRasterInfos[l]=null,p}}getExportImageServiceParameters(e,t,a,r){var s,o;e=e.clone().shiftCentralMeridian();const l=(0,de.getImageSpatialReferenceQueryParameter)(e.spatialReference,i(this.parsedUrl)),u=this.exportImageServiceParameters.toJSON(),{bandIds:p,noData:c}=u;let{renderingRule:d}=u;const m=null===(s=this.rasterFunction)||void 0===s?void 0:s.rasterFunctionDefinition,h=null===(o=this.renderer)||void 0===o?void 0:o.type,f=!h||"raster-stretch"===h||"raster-colormap"===h||"unique-value"===h||"class-breaks"===h||"raster-shaded-relief"===h;if(null!==p&&void 0!==p&&p.length&&this._hasRasterFunction(this.rasterFunction)&&!m&&f){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:p}};if("Stretch"===d.rasterFunction)e.rasterFunctionArguments.Raster=d.rasterFunctionArguments.Raster,d.rasterFunctionArguments.Raster=e;else if("Colormap"===d.rasterFunction){const t=d.rasterFunctionArguments.Raster;"Stretch"===(null===t||void 0===t?void 0:t.rasterFunction)?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,d.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=d,d=e;u.bandIds=void 0}else u.bandIds=null===p||void 0===p?void 0:p.join(",");Array.isArray(c)&&c.length>0&&(u.noData=c.join(","));const y=this._processMultidimensionalIntersection(null,r,this.exportImageServiceParameters.mosaicRule);if(y.isOutSide)return null;u.mosaicRule=null!=y.mosaicRule?JSON.stringify(y.mosaicRule):null,r=y.timeExtent,u.renderingRule=this._getRenderingRuleString(P.default.fromJSON(d));const g={};if(null!=r){const{start:e,end:t}=r.toJSON();e&&t&&e===t?g.time=""+e:null==e&&null==t||(g.time="".concat(null!==e&&void 0!==e?e:"null",",").concat(null!==t&&void 0!==t?t:"null"))}return(0,n.A)((0,n.A)({bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:l,imageSR:l,size:t+","+a},u),g)}async getSamples(e,t){const i=await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal);if(null===i||void 0===i||!i.operations.supportsGetSamples)throw new o.default("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,g.clone)(e);const{raster:n}=this;return n&&null==e.raster&&(e.raster=n),(0,de.getSamples)(this.url,e,this._getRequestOptions(t))}async identify(e,t){var i;if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsIdentify)throw new o.default("imagery-layer:identify","identify operation is not supported on the input image service");e=(0,g.clone)(e),this.version<10.91&&"extent"===(null===(i=e.geometry)||void 0===i?void 0:i.type)&&(e.geometry=_.default.fromExtent(e.geometry));const n=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(n.isOutSide)throw new o.default("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=n.timeExtent,e.mosaicRule=n.mosaicRule;const{raster:a,rasterFunction:r}=this;return r&&null==e.rasterFunction&&(e.rasterFunction=r),a&&null==e.raster&&(e.raster=a),(0,de.identify)(this.url,e,this._getRequestOptions(t))}async imageToMap(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsImageToMap)throw new o.default("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return(0,de.imageToMap)(i(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsImageToMapMultiray)throw new o.default("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return(0,de.imageToMapMultiray)(i(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsMapToImage)throw new o.default("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return(0,de.mapToImage)(i(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsFindImages)throw new o.default("imagery-layer:find-images","findImages operation is not supported on the input image service");return(0,de.findImages)(i(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsGetImageUrl)throw new o.default("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return(0,de.getImageUrl)(i(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){return new Se.default({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsQueryBoundary)throw new o.default("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=null!==e&&void 0!==e?e:{outSpatialReference:this.spatialReference},(0,de.queryBoundary)(i(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,Re.s)(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,ve.V)(this.url,e,t)}async queryGPSInfo(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsQueryGPSInfo)throw new o.default("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=null!==e&&void 0!==e?e:{where:"1=1"},(0,de.queryGPSInfo)(i(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,ge.I)(this.url,e,t)}async queryVisibleRasters(e,t){var i;if(!e)throw new o.default("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:a,returnDomainValues:r,returnTopmostRaster:s,showNoDataRecords:l}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let u=!1,p=null,c=null;const d=ne.F_.servicePixelValue.toLowerCase(),m=this._rasterFunctionNamesIndex;if(null!=e.outFields&&(u=e.outFields.some((e=>!e.toLowerCase().startsWith(d))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().startsWith(d)&&e.length>d.length)).map((e=>{const t=e.slice(d.length+1);return[this._updateRenderingRulesFunctionName(t,m),t]}));p=t.map((e=>new P.default({functionName:e[0]}))),c=t.map((e=>e[1]));const{rasterFunction:i}=this;0===p.length?null!==i&&void 0!==i&&i.functionName?(p.push(i),c.push(i.functionName)):p=null:(null===i||void 0===i?void 0:i.functionName)&&!p.some((e=>e.functionName===i.functionName))&&(p.push(i),c.push(i.functionName))}const h=null==e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:f}=this;let y=e.timeExtent||this.timeExtent;if(f){var g;const{isOutside:t,intersection:i}=(0,se.Rp)(f,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:null===(g=this.exportImageServiceParameters.mosaicRule)||void 0===g?void 0:g.multidimensionalDefinition});if(t)throw new o.default("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");null!=(null===i||void 0===i?void 0:i.timeExtent)&&(y=i.timeExtent)}const v=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,y);let R=e.geometry;this.version<10.91&&"extent"===(null===(i=R)||void 0===i?void 0:i.type)&&(R=_.default.fromExtent(R));const b=this._getQueryParams({geometry:R,timeExtent:y,mosaicRule:v,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:p,pixelSize:a,returnCatalogItems:u,returnGeometry:h,raster:this.raster,maxItemCount:s?1:null});delete b.f;const w=new we.default(b);try{var S,x,F,I;await this._generateRasterInfo(this.rasterFunction);const i=await(0,de.identify)(this.url,w,{signal:null===t||void 0===t?void 0:t.signal,query:(0,n.A)({},this.customParameters)}),a=e.outFields,s=null!=i.value&&i.value.toLowerCase().includes("nodata"),o=u&&!h&&(null===i||void 0===i||null===(S=i.catalogItems)||void 0===S?void 0:S.features.length)&&(l||!s),p=this.multidimensionalInfo&&"raster-dataset"===this.sourceType?(0,se.XU)({rasterInfo:this.rasterInfo,multidimensionalDefinition:null===v||void 0===v?void 0:v.multidimensionalDefinition,timeExtent:y,multidimensionalSubset:this.multidimensionalSubset}):null;if(!o)return this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:c,showNoDataRecords:l,templateFields:a,effectiveMultidimensionalDefinition:p});const d=this.objectIdField||"ObjectId",m=null!==(x=null===(F=i.catalogItems)||void 0===F?void 0:F.features)&&void 0!==x?x:[],f=m.map((e=>{var t;return null===(t=e.attributes)||void 0===t?void 0:t[d]})),g=new Se.default({objectIds:f,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[d]}),R=await this.queryRasters(g);return null!==R&&void 0!==R&&null!==(I=R.features)&&void 0!==I&&I.length&&R.features.forEach((t=>{m.forEach((i=>{i.attributes[d]===t.attributes[d]&&t.geometry&&(i.geometry=t.geometry.clone(),null!=e.outSpatialReference&&(i.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:c,showNoDataRecords:l,templateFields:a,effectiveMultidimensionalDefinition:p})}catch(T){throw new o.default("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const n=(0,y.default)(i(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.statistics})),a=(0,y.default)(i(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.histograms})),r=await Promise.all([n,a]);return r[0]&&r[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:r[0]||null,histograms:r[1]||null}}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):(0,_e.CW)(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)}getMultidimensionalSubsetVariables(e){const t=null!==e&&void 0!==e?e:this.serviceRasterInfo.multidimensionalInfo;return(0,se.z2)(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,n=null!=this.serviceRasterInfo?Promise.resolve(this.serviceRasterInfo):(0,me.Tw)(i(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set("serviceRasterInfo",e),this._set("multidimensionalInfo",e.multidimensionalInfo),(0,me.E9)(e,t),e))),a=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,r=this._getRasterFunctionInfos();return Promise.all([n,a,r]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),c.A.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([(0,v.watch)((()=>this.rasterFunction),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}))]);const{serviceRasterInfo:t}=this;null!=t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){var i;const n=this.timeInfo,{multidimensionalInfo:a}=this.serviceRasterInfo;if(null==e||null==a||null==t||null==(null===n||void 0===n?void 0:n.startField))return e;const{startField:r}=n,s=a.variables.some((e=>e.dimensions.some((e=>e.name===r))))?r:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=null===(i=e.multidimensionalDefinition)||void 0===i?void 0:i.filter((e=>e.dimensionName!==s)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const o=e.multidimensionalDefinition.filter((e=>e.dimensionName===s)),l=null!=t.start?t.start.getTime():null,u=null!=t.end?t.end.getTime():null,p=null==l||null==u||l===u,c=p?[l||u]:[[l,u]],d=this.version>=10.8;if(o.length)o.forEach((e=>{e.dimensionName===s&&(d?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=p,e.values=c))}));else if(!d){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=s,e.isSlice=p,e.values=c})):e.multidimensionalDefinition.push(new T.default({variableName:"",dimensionName:s,isSlice:p,values:c}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return null==e?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){var i;if(!(await this._fetchCapabilities(null===(i=t)||void 0===i?void 0:i.signal)).operations.supportsQuery)throw new o.default("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=null!=e?(0,b.PZ)(Se.default,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query=(0,n.A)((0,n.A)({},t.query),{},{raster:this.raster})),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new re.A;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>{})),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:i}=this;return"unique-value"===e.type&&this._hasRasterFunction(i)&&1===(null===t||void 0===t?void 0:t.bandCount)&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&(0,ue.fp)(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let n=this.sourceJSON;if(!n){const{data:t,ssl:a}=await(0,y.default)(i(this.parsedUrl),{query:this._getQueryParams(),signal:e});n=t,this.sourceJSON=n,a&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null===(t=n.capabilities)||void 0===t?void 0:t.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly"))>-1)throw new o.default("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(n,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:(null===(t=e.fields)||void 0===t?void 0:t.length)>0}_isMosaicRuleSupported(e){var t;if(!e)return!1;const i=this._isMosaicDataset(e),n=e.currentVersion>=10.71&&e.hasMultidimensions&&!((null===(t=e.fields)||void 0===t?void 0:t.length)>1);return i||n}_isVectorFieldResampleFunction(e){if(null==e)return!1;const{functionName:t,functionArguments:i}=e,n="resample"===(null===t||void 0===t?void 0:t.toLowerCase()),a=(null===i||void 0===i?void 0:i.ResampleType)||(null===i||void 0===i?void 0:i.resampleType);return n&&(7===a||10===a)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){const t=this._isPicture(),{rasterInfo:i}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){var n,a,r;const t=null===(n=this.mosaicRule)||void 0===n||null===(n=n.multidimensionalDefinition)||void 0===n?void 0:n[0].variableName,o=(0,ue.I8)({variableName:t,rasterFunctionName:null===(a=this.rasterFunction)||void 0===a?void 0:a.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&i.bandCount>=3){var s;const e=null!==(s=null===o||void 0===o?void 0:o.bandIds)&&void 0!==s?s:(0,ue.ci)(i);!e||3===i.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=null!==(r=null===o||void 0===o?void 0:o.renderer)&&void 0!==r?r:(0,ue.PD)(i,{bandIds:this.bandIds,variableName:this.rasterFunction?null:t}));const l=(0,ue.$P)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=l,this.symbolizer.rasterInfo=i):this.symbolizer=new pe.A({rendererJSON:l,rasterInfo:i}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:null!=e.pixelBlock?e.pixelBlock.clone():null}}_getQueryParams(e){null!=(null===e||void 0===e?void 0:e.renderingRule)&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:i}=this;return(0,n.A)((0,n.A)({raster:t,viewId:i,f:"json"},e),this.customParameters)}_getRequestOptions(e){return(0,n.A)((0,n.A)({},e),{},{query:(0,n.A)((0,n.A)({},null===e||void 0===e?void 0:e.query),this.customParameters)})}_decodePixelBlock(e,t,i){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,oe.D)(e,t,i)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.loaded)return t;if(t&&this.version>=10.3){var n;if(1===t.length&&"none"===t[0].name.toLowerCase())return t;return null===(n=(await(0,y.default)(i(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)||void 0===n?void 0:n.rasterFunctionInfos}return null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:a,returnImageBitmap:r,signal:s}=e;if(a&&this._canRequestImageElement(t.format)){const a="".concat(i(this.parsedUrl),"/exportImage"),{data:o}=await(0,y.default)(a,{responseType:r?"blob":"image",query:this._getQueryParams((0,n.A)((0,n.A)({f:"image"},this.refreshParameters),e.imageServiceParameters)),signal:s});return o instanceof Blob?{imageBitmap:await(0,ee.m)(o,a,s),params:t}:{imageOrCanvasElement:o,params:t}}const l=this._initJobHandler(),u=(0,y.default)(i(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams((0,n.A)({f:"image"},e.imageServiceParameters)),signal:s}),p=(await Promise.all([u,l]))[0].data,c=t.format||"jpgpng";let d=c;if("bsq"!==d&&"bip"!==d&&(d=(0,oe.g)(p)),!d)throw new o.default("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(p)));const m={signal:s},h="gif"===c||"bmp"===c||c.includes("png")&&("png"===d||"jpg"===d)?(0,oe.D)(p,(0,n.A)({useCanvas:!0},t),m):this._decodePixelBlock(p,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:c},m);return{pixelData:{pixelBlock:await h,extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch((()=>null))}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify(null===(t=this.defaultMosaicRule)||void 0===t?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=(0,se.fy)(e,{multidimensionalSubset:this.multidimensionalSubset});if(null!=t&&t.length>0){var i;this.mosaicRule=this.mosaicRule||new W.default;const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&"none"!==(null===(i=this.rasterFunction.functionName)||void 0===i?void 0:i.toLowerCase())&&t.forEach((e=>e.variableName="")),t=t.filter((e=>{let{variableName:t,dimensionName:i}=e;return t&&"*"!==t||i})),(null===e||void 0===e||!e.length)&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){var i,n;t=t||{};const a=e.value,{templateRRFunctionNames:r,showNoDataRecords:s,returnDomainValues:o,templateFields:l}=t,u=e.processedValues;let p=null===(i=e.catalogItems)||void 0===i?void 0:i.features,c=(null===(n=e.properties)||void 0===n||null===(n=n.Values)||void 0===n?void 0:n.map((e=>e.replaceAll(/ /gi,", "))))||[];const d=this.objectIdField||"ObjectId",m="string"==typeof a&&a.toLowerCase().includes("nodata"),h=[];if(a&&!p&&!m){const e={};e[d]=0,c=[a],p=[new f.default({geometry:this.fullExtent,attributes:e})],this.multidimensionalInfo&&"raster-dataset"===this.sourceType&&(0,ne.eS)(this.rasterFields,e,t.effectiveMultidimensionalDefinition)}if(!p)return[];this._updateResponseFieldNames(p,l),m&&!s&&(p=[]);const{itemPixelValue:y,servicePixelValue:g}=ne.F_,v=this.rasterFields.some((e=>e.name===y));for(let f=0;f<p.length;f++){const e=p[f];if(null!=a){const t=c[f],i=this.rasterFunction&&u&&u.length>0&&r&&r.length>0&&r.includes(this.rasterFunction.functionName)?u[r.indexOf(this.rasterFunction.functionName)]:a;if("nodata"===t.toLowerCase()&&!s)continue;v&&(e.attributes[y]=t),e.attributes[g]=i,this._updateFeatureWithMagDirValues(e,t);const n=this.fields&&this.fields.length>0;let o=this.rasterFunction&&null!=this.serviceRasterInfo.attributeTable?n?t:a:i;this.rasterFunction||(o=n?t:a),this._updateFeatureWithRasterAttributeTableValues(e,o)}if(e.sourceLayer=e.layer=this,o&&this._updateFeatureWithDomainValues(e),r&&u&&r.length===u.length)for(let t=0;t<r.length;t++){const i="".concat(ne.F_.servicePixelValue,".").concat(r[t]);e.attributes[i]=u[t]}h.push(p[f])}return h}_processMultidimensionalIntersection(e,t,i){var n;const{multidimensionalSubset:a}=this;if(!a)return{isOutSide:!1,timeExtent:t,mosaicRule:i=this._combineMosaicRuleWithTimeExtent(i,t)};if(a){const{isOutside:i,intersection:n}=(0,se.Rp)(a,{geometry:e,timeExtent:t});if(i)return{isOutSide:!0,timeExtent:null,mosaicRule:null};null!=(null===n||void 0===n?void 0:n.timeExtent)&&(t=n.timeExtent)}if(null!==(n=i=this._combineMosaicRuleWithTimeExtent(i,t))&&void 0!==n&&n.multidimensionalDefinition){const{isOutside:e}=(0,se.Rp)(a,{multidimensionalDefinition:i.multidimensionalDefinition});if(e)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:i}}_updateFeatureWithRasterAttributeTableValues(e,t){const i=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(null==i)return;const{features:n,fields:a}=i,r=a.map((e=>e.name)).find((e=>"value"===e.toLowerCase()));if(!r)return;const s=n.filter((e=>e.attributes[r]===(null!=t?parseInt(t,10):null)));s&&s[0]&&a.forEach((t=>{const i=ne.ER+t.name;e.attributes[i]=s[0].attributes[t.name]}))}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const i=t.split(/,\s*/).map((e=>parseFloat(e))),n=i.map((e=>[e])),a=i.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),r=new ie.default({height:1,width:1,pixelType:"f32",pixels:n,statistics:a});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:r,extent:new S.default(0,0,0,0,this.spatialReference)});const s="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[r.pixels[0][0],r.pixels[1][0]]:(0,le.Lu)([r.pixels[0][0],r.pixels[1][0]]);e.attributes[ne.F_.magnitude]=s[0],e.attributes[ne.F_.direction]=s[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const i=e.attributes[t.name];if(null!=i){const n=t.domain.codedValues.find((e=>e.code===i));n&&(e.attributes[t.name]=n.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const i=this.fieldsIndex;null!=i&&e.forEach((e=>{if(null!==e&&void 0!==e&&e.attributes)for(const a of t){var n;const t=null===(n=i.get(a))||void 0===n?void 0:n.name;t&&t!==a&&(e.attributes[a]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(e){var t;let i=e.toJSON();return i=null!==(t=i.rasterFunctionDefinition)&&void 0!==t?t:i,(i.thumbnail||i.thumbnailEx)&&(i.thumbnail=i.thumbnailEx=null),JSON.stringify(i)}return null}_hasRasterFunction(e){return null!=(null===e||void 0===e?void 0:e.functionName)&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const i=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(i)?t.get(i):e}_isRFTJson(e){return(null===e||void 0===e?void 0:e.name)&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:i,rasterFunction:n}=this;n&&null==e.rasterFunction&&(e.rasterFunction=n),i&&null==e.mosaicRule&&(e.mosaicRule=i),t&&null==e.raster&&(e.raster=t)}_applyMosaicRule(e){const{raster:t,mosaicRule:i}=this;i&&null==e.mosaicRule&&(e.mosaicRule=i),t&&null==e.raster&&(e.raster=t)}_readCapabilities(e){var t;const i=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:n,advancedQueryCapabilities:a,maxRecordCount:r}=e,s=i.includes("image"),o="esriImageServiceDataTypeElevation"===e.serviceDataType,l=!(!e.spatialReference&&(null===(t=e.extent)||void 0===t||!t.spatialReference)),u=i.includes("edit"),p=i.includes("mensuration")&&l,c=null==e.mensurationCapabilities?[]:e.mensurationCapabilities.toLowerCase().split(",").map((e=>e.trim())),d=p&&c.includes("basic"),m=this._isMosaicDataset(e)&&i.includes("catalog"),h=i.includes("download"),f=n>=10.7&&o||n>=11.4&&(o||p&&c.includes("3d"));return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:s,supportsExportImage:s,supportsIdentify:s,supportsImageToMap:n>=11.2&&m,supportsImageToMapMultiray:n>=11.2&&m,supportsMapToImage:n>=11.2&&m,supportsFindImages:n>=11.2&&m,supportsGetImageUrl:n>=11.3&&h,supportsMeasure:p,supportsMeasureFromImage:n>=11.2,supportsDownload:h,supportsQuery:m&&e.fields&&e.fields.length>0,supportsGetSamples:n>=10.2&&s,supportsProject:n>=10.3&&s,supportsComputeStatisticsHistograms:n>=10.4&&s,supportsQueryBoundary:n>=10.6&&s,supportsCalculateVolume:f,supportsComputePixelLocation:n>=10.7&&m,supportsComputeAngles:n>=10.91,supportsQueryGPSInfo:n>=11.2&&m,supportsAdd:u,supportsDelete:u,supportsEditing:u,supportsUpdate:u,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:r,maxRecordCountFactor:void 0,supportsStatistics:!(null===a||void 0===a||!a.supportsStatistics),supportsOrderBy:!(null===a||void 0===a||!a.supportsOrderBy),supportsDistinct:!(null===a||void 0===a||!a.supportsDistinct),supportsPagination:!(null===a||void 0===a||!a.supportsPagination),supportsStandardizedQueriesOnly:!(null===a||void 0===a||!a.useStandardizedQueries),supportsPercentileStatistics:!(null===a||void 0===a||!a.supportsPercentileStatistics),supportsCentroid:!(null===a||void 0===a||!a.supportsReturningGeometryCentroid),supportsCurrentUser:!1,supportsDistance:!(null===a||void 0===a||!a.supportsQueryWithDistance),supportsExtent:!(null===a||void 0===a||!a.supportsReturningQueryExtent),supportsGeometryProperties:!(null===a||void 0===a||!a.supportsReturningGeometryProperties),supportsHavingClause:!(null===a||void 0===a||!a.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!(null===a||void 0===a||!a.supportsDefaultSR),supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0,supportsTrueCurve:!1},mensuration:{supportsDistanceAndAngle:d,supportsAreaAndPerimeter:d,supportsPointOrCentroid:d,supportsHeightFromBaseAndTop:p&&c.includes("base-top height"),supportsHeightFromBaseAndTopShadow:p&&c.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:p&&c.includes("top-top shadow height"),supports3D:p&&c.includes("3d")}}}};function i(e){var t;return null!==(t=null===e||void 0===e?void 0:e.path)&&void 0!==t?t:""}return(0,a._)([(0,p.MZ)({clonable:!1})],t.prototype,"_functionRasterInfos",void 0),(0,a._)([(0,p.MZ)({clonable:!1})],t.prototype,"_rasterJobHandler",void 0),(0,a._)([(0,p.MZ)({clonable:!1})],t.prototype,"_cachedRendererJson",void 0),(0,a._)([(0,p.MZ)({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),(0,a._)([(0,w.w)("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),(0,a._)([(0,p.MZ)({readOnly:!0})],t.prototype,"_rasterFunctionNamesIndex",null),(0,a._)([(0,p.MZ)()],t.prototype,"adjustAspectRatio",void 0),(0,a._)([(0,p.MZ)({type:[b.jz],json:{write:!0}})],t.prototype,"bandIds",void 0),(0,a._)([(0,w.w)("bandIds")],t.prototype,"readBandIds",null),(0,a._)([(0,p.MZ)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),(0,a._)([(0,w.w)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),(0,a._)([(0,p.MZ)({type:Number})],t.prototype,"compressionQuality",void 0),(0,a._)([(0,m.K)("compressionQuality")],t.prototype,"writeCompressionQuality",null),(0,a._)([(0,p.MZ)({type:Number})],t.prototype,"compressionTolerance",void 0),(0,a._)([(0,m.K)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),(0,a._)([(0,p.MZ)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,a._)([(0,p.MZ)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"defaultMosaicRule",void 0),(0,a._)([(0,w.w)("defaultMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultMosaicRule",null),(0,a._)([(0,p.MZ)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),(0,a._)([(0,p.MZ)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),(0,a._)([(0,p.MZ)()],t.prototype,"rasterInfo",void 0),(0,a._)([(0,p.MZ)({readOnly:!0,type:[Y.default]})],t.prototype,"fields",void 0),(0,a._)([(0,p.MZ)({readOnly:!0})],t.prototype,"fieldsIndex",null),(0,a._)([(0,p.MZ)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],t.prototype,"format",null),(0,a._)([(0,w.w)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),(0,a._)([(0,p.MZ)({type:S.default})],t.prototype,"fullExtent",void 0),(0,a._)([(0,p.MZ)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),(0,a._)([(0,p.MZ)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),(0,a._)([(0,p.MZ)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),(0,a._)([(0,p.MZ)({type:String,json:{type:K.SZ.jsonValues,read:K.SZ.read,write:K.SZ.write}})],t.prototype,"interpolation",void 0),(0,a._)([(0,p.MZ)()],t.prototype,"minScale",void 0),(0,a._)([(0,w.w)("service","minScale")],t.prototype,"readMinScale",null),(0,a._)([(0,p.MZ)()],t.prototype,"maxScale",void 0),(0,a._)([(0,w.w)("service","maxScale")],t.prototype,"readMaxScale",null),(0,a._)([(0,p.MZ)({type:W.default})],t.prototype,"mosaicRule",null),(0,a._)([(0,w.w)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),(0,a._)([(0,m.K)("mosaicRule")],t.prototype,"writeMosaicRule",null),(0,a._)([(0,p.MZ)()],t.prototype,"multidimensionalInfo",void 0),(0,a._)([(0,p.MZ)({type:te.default,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,a._)([(0,p.MZ)({json:{type:b.jz}})],t.prototype,"noData",void 0),(0,a._)([(0,m.K)("noData")],t.prototype,"writeNoData",null),(0,a._)([(0,p.MZ)({type:String,json:{type:K.hm.jsonValues,read:K.hm.read,write:K.hm.write}})],t.prototype,"noDataInterpretation",void 0),(0,a._)([(0,p.MZ)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),(0,a._)([(0,w.w)("objectIdField")],t.prototype,"readObjectIdField",null),(0,a._)([(0,p.MZ)({readOnly:!0})],t.prototype,"geometryType",void 0),(0,a._)([(0,p.MZ)({})],t.prototype,"typeIdField",void 0),(0,a._)([(0,p.MZ)({})],t.prototype,"types",void 0),(0,a._)([(0,p.MZ)({readOnly:!0})],t.prototype,"parsedUrl",null),(0,a._)([(0,p.MZ)({type:Function})],t.prototype,"pixelFilter",void 0),(0,a._)([(0,p.MZ)()],t.prototype,"raster",void 0),(0,a._)([(0,p.MZ)({readOnly:!0})],t.prototype,"sourceType",void 0),(0,a._)([(0,w.w)("sourceType",["serviceSourceType","fields"])],t.prototype,"readSourceType",null),(0,a._)([(0,p.MZ)()],t.prototype,"viewId",void 0),(0,a._)([(0,p.MZ)()],t.prototype,"renderer",null),(0,a._)([(0,p.MZ)({types:ce.uy,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:ce.Gj,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"internalRenderer",null),(0,a._)([(0,w.w)("internalRenderer")],t.prototype,"readRenderer",null),(0,a._)([(0,m.K)("internalRenderer")],t.prototype,"writeRenderer",null),(0,a._)([(0,p.MZ)({clonable:!1})],t.prototype,"symbolizer",void 0),(0,a._)([(0,p.MZ)(I.ke)],t.prototype,"opacity",void 0),(0,a._)([(0,p.MZ)({readOnly:!0})],t.prototype,"rasterFields",null),(0,a._)([(0,p.MZ)({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),(0,a._)([(0,p.MZ)({type:P.default,json:{name:"renderingRule"}})],t.prototype,"rasterFunction",null),(0,a._)([(0,w.w)("rasterFunction",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRasterFunction",null),(0,a._)([(0,p.MZ)({readOnly:!0})],t.prototype,"serviceDataType",void 0),(0,a._)([(0,p.MZ)({readOnly:!0,type:x.default})],t.prototype,"spatialReference",void 0),(0,a._)([(0,w.w)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),(0,a._)([(0,p.MZ)({type:K.e8.apiValues,json:{read:K.e8.read,type:K.e8.jsonValues}})],t.prototype,"pixelType",void 0),(0,a._)([(0,m.K)("pixelType")],t.prototype,"writePixelType",null),(0,a._)([(0,p.MZ)({constructOnly:!0,type:ae.default})],t.prototype,"serviceRasterInfo",void 0),(0,a._)([(0,p.MZ)()],t.prototype,"sourceJSON",void 0),(0,a._)([(0,p.MZ)(I.OZ)],t.prototype,"url",void 0),(0,a._)([(0,p.MZ)({readOnly:!0})],t.prototype,"version",void 0),(0,a._)([(0,w.w)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=(0,a._)([(0,d.$)("esri.layers.mixins.ArcGISImageService")],t),t};var Te=i(19502),De=i(65624),Pe=i(31362),Me=i(11270),Ce=i(94729),Ae=i(26324),Oe=i(21617),Ne=i(5682),Ve=i(78817),Ee=i(38278),qe=i(30973),je=i(61701);let Je=class extends((0,De.dM)((0,Ve.e)((0,Ne.j)((0,Me.q)((0,Ce.A)((0,Ae.H)(Ie((0,Oe.J)((0,Pe.d)((0,Te.b)((0,l.P)(s.A.ClonableMixin(h.default))))))))))))){constructor(){super(...arguments),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=(0,u.debounce)((async(e,t,n)=>{const{save:a,saveAs:r}=await i.e(20964).then(i.bind(i,20964));switch(e){case je.X.SAVE:return a(this,t);case je.X.SAVE_AS:return r(this,n,t)}}))}normalizeCtorArgs(e,t){return"string"==typeof e?(0,n.A)({url:e},t):e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(u.throwIfAbortError).then((()=>this._fetchService(t)))),Promise.resolve(this)}get legendEnabled(){var e;return!this._isPreviewLayer&&(null===(e=this._get("legendEnabled"))||void 0===e||e)}set legendEnabled(e){this._set("legendEnabled",e)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(e){this._set("listMode",e)}writeOperationalLayerType(e,t,i){var n;const a="vector-field"===(null===(n=this.renderer)||void 0===n?void 0:n.type);t[i]=a?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){var e;return!(!this.raster||null===(e=this.url)||void 0===e||!e.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(e){const{rasterFields:t}=this,i=new Set,a=ne.F_.itemPixelValue.toLowerCase(),r="raster-dataset"===this.sourceType,s=ne.Oo.toLowerCase(),o="".concat(ne.F_.servicePixelValue.toLowerCase(),".");for(const n of t){const e=n.name.toLowerCase();e===a||e.startsWith(o)||r&&e.startsWith(s)||i.add(n.name)}const l=(0,qe.createPopupTemplate)({fields:t,title:this.title},(0,n.A)((0,n.A)({},e),{},{visibleFieldNames:i})),{rasterInfo:u}=this;return null!==l&&void 0!==l&&l.fieldInfos&&u&&(0,ne.h4)(l.fieldInfos,u),l}queryFeatures(e,t){return this.queryRasters(e,t).then((e=>{if(null!==e&&void 0!==e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}async save(e){return this._debouncedSaveOperations(je.X.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(je.X.SAVE_AS,t,e)}serviceSupportsSpatialReference(e){return(0,Ee.D)(this,e)}write(e,t){if(!this._isPreviewLayer)return super.write(e,t);if(null!==t&&void 0!==t&&t.messages){const e="".concat(t.origin,"/").concat(t.layerContainerType||"operational-layers");t.messages.push(new o.default("layer:unsupported","Imagery preview layer (".concat(this.title,", ").concat(this.id,") of type '").concat(this.declaredClass,"' are not supported in the context of '").concat(e,"'"),{layer:this}))}return null}};(0,a._)([(0,p.MZ)(I.fV)],Je.prototype,"legendEnabled",null),(0,a._)([(0,p.MZ)({type:["show","hide"]})],Je.prototype,"listMode",null),(0,a._)([(0,p.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Je.prototype,"isReference",void 0),(0,a._)([(0,p.MZ)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Je.prototype,"operationalLayerType",void 0),(0,a._)([(0,m.K)("web-map","operationalLayerType")],Je.prototype,"writeOperationalLayerType",null),(0,a._)([(0,p.MZ)(I.M6)],Je.prototype,"popupEnabled",void 0),(0,a._)([(0,p.MZ)({type:r.default,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Je.prototype,"popupTemplate",void 0),(0,a._)([(0,p.MZ)({readOnly:!0})],Je.prototype,"defaultPopupTemplate",null),(0,a._)([(0,p.MZ)({readOnly:!0,json:{read:!1}})],Je.prototype,"type",void 0),(0,a._)([(0,p.MZ)({readOnly:!0})],Je.prototype,"_isPreviewLayer",null),Je=(0,a._)([(0,d.$)("esri.layers.ImageryLayer")],Je);const Ze=Je}}]);
//# sourceMappingURL=85598.4a9b18a8.chunk.js.map