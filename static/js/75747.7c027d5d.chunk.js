"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[75747],{73103:(e,t,i)=>{i.d(t,{$n:()=>D,$r:()=>S,EM:()=>f,Ec:()=>Z,JJ:()=>b,Mm:()=>C,OC:()=>U,Sr:()=>m,UO:()=>l,Vj:()=>_,WU:()=>W,Y8:()=>n,Z7:()=>u,_6:()=>g,_H:()=>y,aJ:()=>p,ag:()=>h,cQ:()=>c,dd:()=>M,dn:()=>d,et:()=>k,fe:()=>O,gD:()=>w,hE:()=>v,hY:()=>o,iM:()=>N,mt:()=>A,ow:()=>T,vS:()=>J});var r=i(89379),s=i(45802);const a={esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"},o=(0,s.O)()(a),n=(0,s.O)()((0,r.A)((0,r.A)({},a),{},{esriIntFeet:"international-feet",esriIntInches:"international-inches",esriIntMiles:"international-miles",esriIntNauticalMiles:"international-nautical-miles",esriIntYards:"international-yards"})),l=(0,s.O)()({esriAcres:"international-acres",esriAcresUS:"us-acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-international-feet",esriSquareFeetUS:"square-us-feet",esriSquareInches:"square-international-inches",esriSquareInchesUS:"square-us-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-international-miles",esriSquareMilesUS:"square-us-miles",esriSquareMillimeters:"square-millimeters",esriSquareYards:"square-international-yards",esriSquareYardsUS:"square-us-yards",esriUnknownAreaUnits:"unknown"}),u=(0,s.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),d=(0,s.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"}),p=(0,s.O)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),m=(0,s.O)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),c=(0,s.O)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),v=(0,s.O)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"}),y=(0,s.O)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),h=(0,s.O)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),T=(0,s.O)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}),b=(0,s.O)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),f=(0,s.O)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),S=(0,s.O)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),A=(0,s.O)()({1:"right",2:"left"},{useNumericKeys:!0}),N=(0,s.O)()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),O=(0,s.O)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),g=(0,s.O)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation",1007:"lane"},{useNumericKeys:!0}),w=(0,s.O)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),D=(0,s.O)()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),M=(0,s.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),C=(0,s.O)()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),k=(0,s.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),U=(0,s.O)()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),J=(0,s.O)()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),_=(0,s.O)()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),W=(0,s.O)()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),Z=(0,s.O)()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"})},75747:(e,t,i)=>{i.r(t),i.d(t,{default:()=>b});var r,s=i(35143),a=i(39356),o=i(73204),n=i(69098),l=i(42553),u=i(46053),d=(i(81806),i(76460),i(47249),i(28379)),p=i(85842),m=i(17707),c=i(19247),v=i(86236),y=i(73103),h=i(671);let T=r=class extends(n.A.ClonableMixin(l.A)){constructor(e){super(e),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(e,t){return(0,v.Zn)(t.attributes.ArriveTime,t.attributes.ArriveTimeUTC)}readCumulativeCosts(e,t){return(0,v.lh)(t.attributes,"Cumul_")}readDepartTimeOffset(e,t){return(0,v.Zn)(t.attributes.DepartTime,t.attributes.DepartTimeUTC)}readServiceCosts(e,t){return(0,v.lh)(t.attributes,"Attr_")}writeServiceCosts(e,t){(0,v.p3)(e,t,"Attr_")}writeTimeWindowEnd(e,t){null!=e&&(t.attributes||(t.attributes={}),t.attributes.TimeWindowEnd=e.getTime())}writeTimeWindowStart(e,t){null!=e&&(t.attributes||(t.attributes={}),t.attributes.TimeWindowStart=e.getTime())}readViolations(e,t){return(0,v.lh)(t.attributes,"Violation_")}readWait(e,t){return(0,v.lh)(t.attributes,"Wait_")}static fromGraphic(e){var t,i,s,a,o,n,l,u,d,p,m;return new r({arriveCurbApproach:null!=e.attributes.ArrivalCurbApproach?y.JJ.fromJSON(e.attributes.ArrivalCurbApproach):null,arriveTime:null!=e.attributes.ArrivalTime?new Date(e.attributes.ArrivalTime):null,arriveTimeOffset:e.attributes.ArrivalUTCOffset,cumulativeCosts:null!=e.attributes.CumulativeCosts?(0,v.aZ)(JSON.parse(e.attributes.CumulativeCosts)):null,cumulativeDistance:null!==(t=e.attributes.CumulativeMeters)&&void 0!==t?t:null,cumulativeDuration:null!==(i=e.attributes.CumulativeMinutes)&&void 0!==i?i:null,curbApproach:null!=e.attributes.CurbApproach?y.JJ.fromJSON(e.attributes.CurbApproach):null,departCurbApproach:null!=e.attributes.DepartureCurbApproach?y.JJ.fromJSON(e.attributes.DepartureCurbApproach):null,departTime:null!=e.attributes.DepartureTime?new Date(e.attributes.DepartureTime):null,departTimeOffset:null!==(s=e.attributes.DepartureUTCOffset)&&void 0!==s?s:null,geometry:e.geometry,lateDuration:null!==(a=e.attributes.LateMinutes)&&void 0!==a?a:null,locationType:null!=e.attributes.LocationType?y.EM.fromJSON(e.attributes.LocationType):null,name:e.attributes.Name,objectId:null!==(o=e.attributes.ObjectID)&&void 0!==o?o:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,routeName:e.attributes.RouteName,sequence:null!==(n=e.attributes.Sequence)&&void 0!==n?n:null,serviceCosts:null!=e.attributes.ServiceCosts?(0,v.aZ)(JSON.parse(e.attributes.ServiceCosts)):null,serviceDistance:null!==(l=e.attributes.ServiceMeters)&&void 0!==l?l:null,serviceDuration:null!==(u=e.attributes.ServiceMinutes)&&void 0!==u?u:null,status:null!=e.attributes.Status?y.$r.fromJSON(e.attributes.Status):null,symbol:e.symbol,timeWindowEnd:null!=e.attributes.TimeWindowEnd?new Date(e.attributes.TimeWindowEnd):null,timeWindowEndOffset:null!==(d=e.attributes.TimeWindowEndUTCOffset)&&void 0!==d?d:null,timeWindowStart:null!=e.attributes.TimeWindowStart?new Date(e.attributes.TimeWindowStart):null,timeWindowStartOffset:null!==(p=e.attributes.TimeWindowStartUTCOffset)&&void 0!==p?p:null,waitDuration:null!==(m=e.attributes.WaitMinutes)&&void 0!==m?m:null})}toGraphic(){var e,t;const i={ObjectID:this.objectId,ArrivalCurbApproach:null!=this.arriveCurbApproach?y.JJ.toJSON(this.arriveCurbApproach):null,ArrivalTime:null!=this.arriveTime?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:null!=this.cumulativeCosts?JSON.stringify((0,v.nA)(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:null!=this.curbApproach?y.JJ.toJSON(this.curbApproach):null,DepartureCurbApproach:null!=this.departCurbApproach?y.JJ.toJSON(this.departCurbApproach):null,DepartureTime:null!=this.departTime?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:null!=this.locationType?y.EM.toJSON(this.locationType):null,Name:this.name,RouteName:this.routeName,Sequence:this.sequence,ServiceCosts:null!=this.serviceCosts?JSON.stringify((0,v.nA)(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:null!=this.status?y.$r.toJSON(this.status):null,TimeWindowEnd:null!=this.timeWindowEnd?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:null!==(e=this.timeWindowEndOffset)&&void 0!==e?e:this.arriveTimeOffset,TimeWindowStart:null!=this.timeWindowStart?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:null!==(t=this.timeWindowStartOffset)&&void 0!==t?t:this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new a.default({geometry:this.geometry,attributes:i,symbol:this.symbol,popupTemplate:this.popupTemplate})}};T.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time",type:"esriFieldTypeInteger"},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString"},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble"},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate"},{name:"DepartureUTCOffset",alias:"Departure Time",type:"esriFieldTypeInteger"},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble"},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString"},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble"},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate"},{name:"TimeWindowEndUTCOffset",alias:"Time Window End Offset",type:"esriFieldTypeInteger"},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate"},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start Offset",type:"esriFieldTypeInteger"},{name:"WaitMinutes",alias:"Minutes Wait",type:"esriFieldTypeDouble"}],(0,s._)([(0,u.MZ)({type:y.JJ.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:y.JJ.read}}})],T.prototype,"arriveCurbApproach",void 0),(0,s._)([(0,u.MZ)({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],T.prototype,"arriveTime",void 0),(0,s._)([(0,u.MZ)()],T.prototype,"arriveTimeOffset",void 0),(0,s._)([(0,d.w)("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],T.prototype,"readArriveTimeOffset",null),(0,s._)([(0,u.MZ)({json:{name:"attributes.Bearing",read:!1,write:!0}})],T.prototype,"bearing",void 0),(0,s._)([(0,u.MZ)({json:{name:"attributes.BearingTol",read:!1,write:!0}})],T.prototype,"bearingTol",void 0),(0,s._)([(0,u.MZ)()],T.prototype,"cumulativeCosts",void 0),(0,s._)([(0,d.w)("cumulativeCosts",["attributes"])],T.prototype,"readCumulativeCosts",null),(0,s._)([(0,u.MZ)()],T.prototype,"cumulativeDistance",void 0),(0,s._)([(0,u.MZ)()],T.prototype,"cumulativeDuration",void 0),(0,s._)([(0,u.MZ)({type:y.JJ.apiValues,json:{name:"attributes.CurbApproach",read:{reader:y.JJ.read},write:{writer:y.JJ.write}}})],T.prototype,"curbApproach",void 0),(0,s._)([(0,u.MZ)({type:y.JJ.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:y.JJ.read}}})],T.prototype,"departCurbApproach",void 0),(0,s._)([(0,u.MZ)({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],T.prototype,"departTime",void 0),(0,s._)([(0,u.MZ)()],T.prototype,"departTimeOffset",void 0),(0,s._)([(0,d.w)("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],T.prototype,"readDepartTimeOffset",null),(0,s._)([(0,u.MZ)({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],T.prototype,"distanceToNetworkInMeters",void 0),(0,s._)([(0,u.MZ)({type:c.default,json:{write:!0}})],T.prototype,"geometry",void 0),(0,s._)([(0,u.MZ)()],T.prototype,"lateDuration",void 0),(0,s._)([(0,u.MZ)({type:y.EM.apiValues,json:{name:"attributes.LocationType",read:{reader:y.EM.read},write:{writer:y.EM.write}}})],T.prototype,"locationType",void 0),(0,s._)([(0,u.MZ)({json:{name:"attributes.Name"}})],T.prototype,"name",void 0),(0,s._)([(0,u.MZ)({json:{name:"attributes.NavLatency",read:!1,write:!0}})],T.prototype,"navLatency",void 0),(0,s._)([(0,u.MZ)({json:{name:"attributes.ObjectID"}})],T.prototype,"objectId",void 0),(0,s._)([(0,u.MZ)({type:o.default})],T.prototype,"popupTemplate",void 0),(0,s._)([(0,u.MZ)({json:{read:{source:"attributes.PosAlong"}}})],T.prototype,"posAlong",void 0),(0,s._)([(0,u.MZ)({json:{name:"attributes.RouteName"}})],T.prototype,"routeName",void 0),(0,s._)([(0,u.MZ)()],T.prototype,"serviceCosts",void 0),(0,s._)([(0,d.w)("serviceCosts",["attributes"])],T.prototype,"readServiceCosts",null),(0,s._)([(0,m.K)("serviceCosts")],T.prototype,"writeServiceCosts",null),(0,s._)([(0,u.MZ)()],T.prototype,"serviceDistance",void 0),(0,s._)([(0,u.MZ)()],T.prototype,"serviceDuration",void 0),(0,s._)([(0,u.MZ)({json:{name:"attributes.Sequence"}})],T.prototype,"sequence",void 0),(0,s._)([(0,u.MZ)({type:y.mt.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:y.mt.read}}})],T.prototype,"sideOfEdge",void 0),(0,s._)([(0,u.MZ)({json:{read:{source:"attributes.SnapX"}}})],T.prototype,"snapX",void 0),(0,s._)([(0,u.MZ)({json:{read:{source:"attributes.SnapY"}}})],T.prototype,"snapY",void 0),(0,s._)([(0,u.MZ)({json:{read:{source:"attributes.SnapZ"}}})],T.prototype,"snapZ",void 0),(0,s._)([(0,u.MZ)({json:{read:{source:"attributes.SourceID"}}})],T.prototype,"sourceId",void 0),(0,s._)([(0,u.MZ)({json:{read:{source:"attributes.SourceOID"}}})],T.prototype,"sourceOid",void 0),(0,s._)([(0,u.MZ)({type:y.$r.apiValues,json:{read:{source:"attributes.Status",reader:y.$r.read}}})],T.prototype,"status",void 0),(0,s._)([(0,u.MZ)({types:h.Es})],T.prototype,"symbol",void 0),(0,s._)([(0,u.MZ)({type:Date,json:{name:"attributes.TimeWindowEnd"}})],T.prototype,"timeWindowEnd",void 0),(0,s._)([(0,m.K)("timeWindowEnd")],T.prototype,"writeTimeWindowEnd",null),(0,s._)([(0,u.MZ)()],T.prototype,"timeWindowEndOffset",void 0),(0,s._)([(0,u.MZ)({type:Date,json:{name:"attributes.TimeWindowStart"}})],T.prototype,"timeWindowStart",void 0),(0,s._)([(0,m.K)("timeWindowStart")],T.prototype,"writeTimeWindowStart",null),(0,s._)([(0,u.MZ)()],T.prototype,"timeWindowStartOffset",void 0),(0,s._)([(0,u.MZ)({readOnly:!0,json:{read:!1}})],T.prototype,"type",void 0),(0,s._)([(0,u.MZ)()],T.prototype,"violations",void 0),(0,s._)([(0,d.w)("violations",["attributes"])],T.prototype,"readViolations",null),(0,s._)([(0,u.MZ)()],T.prototype,"waitDuration",void 0),(0,s._)([(0,u.MZ)()],T.prototype,"wait",void 0),(0,s._)([(0,d.w)("wait",["attributes"])],T.prototype,"readWait",null),T=r=(0,s._)([(0,p.$)("esri.rest.support.Stop")],T);const b=T},86236:(e,t,i)=>{i.d(t,{Zn:()=>l,_s:()=>p,aZ:()=>o,lh:()=>s,nA:()=>n,o9:()=>d,p3:()=>a,r9:()=>u});var r=i(73103);function s(e,t){if(null==e)return null;const i={},s=new RegExp("^".concat(t),"i");for(const a of Object.keys(e))if(s.test(a)){const s=a.slice(t.length);i[r.et.fromJSON(s)]=e[a]}return i}function a(e,t,i){if(null!=e){t.attributes||(t.attributes={});for(const s in e){const a=r.et.toJSON(s);t.attributes["".concat(i).concat(a)]=e[s]}}}function o(e){const t={};for(const i of Object.keys(e)){const s=i;t[r.et.fromJSON(s)]=e[i]}return t}function n(e){const t={};for(const i of Object.keys(e)){const s=i;t[r.et.toJSON(s)]=e[i]}return t}function l(e,t){return null==e||null==t?null:Math.round((e-t)/6e4)}function u(e){var t,i,r;const s=e.toJSON(),a=s;return a.accumulateAttributeNames&&(a.accumulateAttributeNames=null===(t=s.accumulateAttributeNames)||void 0===t?void 0:t.join()),a.attributeParameterValues&&(a.attributeParameterValues=JSON.stringify(s.attributeParameterValues)),a.barriers&&(a.barriers=JSON.stringify(s.barriers)),a.outSR&&(a.outSR=null===(i=s.outSR)||void 0===i?void 0:i.wkid),a.overrides&&(a.overrides=JSON.stringify(s.overrides)),a.polygonBarriers&&(a.polygonBarriers=JSON.stringify(s.polygonBarriers)),a.polylineBarriers&&(a.polylineBarriers=JSON.stringify(s.polylineBarriers)),a.restrictionAttributeNames&&(a.restrictionAttributeNames=null===(r=s.restrictionAttributeNames)||void 0===r?void 0:r.join()),a.stops&&(a.stops=JSON.stringify(s.stops)),a.travelMode&&(a.travelMode=JSON.stringify(s.travelMode)),a}function d(e){var t,i,r;const s=e.toJSON(),a=s;return a.accumulateAttributeNames&&(a.accumulateAttributeNames=null===(t=s.accumulateAttributeNames)||void 0===t?void 0:t.join()),a.attributeParameterValues&&(a.attributeParameterValues=JSON.stringify(s.attributeParameterValues)),a.barriers&&(a.barriers=JSON.stringify(s.barriers)),a.facilities&&(a.facilities=JSON.stringify(s.facilities)),a.incidents&&(a.incidents=JSON.stringify(s.incidents)),a.outSR&&(a.outSR=null===(i=s.outSR)||void 0===i?void 0:i.wkid),a.overrides&&(a.overrides=JSON.stringify(s.overrides)),a.polygonBarriers&&(a.polygonBarriers=JSON.stringify(s.polygonBarriers)),a.polylineBarriers&&(a.polylineBarriers=JSON.stringify(s.polylineBarriers)),a.restrictionAttributeNames&&(a.restrictionAttributeNames=null===(r=s.restrictionAttributeNames)||void 0===r?void 0:r.join()),a.travelMode&&(a.travelMode=JSON.stringify(s.travelMode)),a}function p(e){var t,i,r,s,a;const o=e.toJSON(),n=o;return n.accumulateAttributeNames&&(n.accumulateAttributeNames=null===(t=o.accumulateAttributeNames)||void 0===t?void 0:t.join()),n.attributeParameterValues&&(n.attributeParameterValues=JSON.stringify(o.attributeParameterValues)),n.barriers&&(n.barriers=JSON.stringify(o.barriers)),n.defaultBreaks&&(n.defaultBreaks=null===(i=o.defaultBreaks)||void 0===i?void 0:i.join()),n.excludeSourcesFromPolygons&&(n.excludeSourcesFromPolygons=null===(r=o.excludeSourcesFromPolygons)||void 0===r?void 0:r.join()),n.facilities&&(n.facilities=JSON.stringify(o.facilities)),n.outSR&&(n.outSR=null===(s=o.outSR)||void 0===s?void 0:s.wkid),n.overrides&&(n.overrides=JSON.stringify(o.overrides)),n.polygonBarriers&&(n.polygonBarriers=JSON.stringify(o.polygonBarriers)),n.polylineBarriers&&(n.polylineBarriers=JSON.stringify(o.polylineBarriers)),n.restrictionAttributeNames&&(n.restrictionAttributeNames=null===(a=o.restrictionAttributeNames)||void 0===a?void 0:a.join()),n.travelMode&&(n.travelMode=JSON.stringify(o.travelMode)),n}}}]);
//# sourceMappingURL=75747.7c027d5d.chunk.js.map