"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[17941,44038,66486,90586],{8141:(t,e,n)=>{n.d(e,{z:()=>i});class i{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;this.minValue=t,this.maxValue=e,this.noDataValue=n}}},17941:(t,e,n)=>{n.r(e),n.d(e,{CreateColorCompositeMethod:()=>d,argStatisticsType:()=>I,arithmeticOperation:()=>x,bandIndexType:()=>s,cellStatisticalOperation:()=>w,clippingType:()=>f,colorRampName:()=>u,colormapName:()=>l,computeChangKeepMethod:()=>A,computeChangeMethod:()=>T,convolutionKernel:()=>h,curvatureType:()=>o,hillshadeType:()=>a,localArithmeticOperation:()=>m,localConditionalOperation:()=>k,localLogicalOperation:()=>v,localOperators:()=>b,localTrigonometricOperation:()=>y,missingBandAction:()=>c,noDataInterpretation:()=>p,slopeType:()=>r,statisticsType:()=>D,stretchType:()=>g,thresholdType:()=>B});var i=n(89379);const r={degree:1,percentRise:2,adjusted:3},o={standard:0,planform:1,profile:2},a={traditional:0,multidirectional:1},s={userDefined:0,NDVI:1,SAVI:2,TSAVI:3,MSAVI:4,GEMI:5,PVI:6,GVITM:7,Sultan:8,VARI:9,GNDVI:10,SR:11,NDVIRe:12,SRRe:13,MTVI2:14,RTVICore:15,CIRe:16,CIG:17,NDWI:18,EVI:19,ironOxide:20,ferrousMinerals:21,clayMinerals:22,WNDWI:23,BAI:24,NBR:25,NDBI:26,NDMI:27,NDSI:28,MNDWI:29},l={random:"Random",NDVI:"NDVI",NDVI2:"NDVI2",NDVI3:"NDVI3",elevation:"Elevation",gray:"Gray",hillshade:"Hillshade"},u={aspect:"Aspect",blackToWhite:"Black to White",blueBright:"Blue Bright",blueLightToDark:"Blue Light to Dark",blueGreenBright:"Blue-Green Bright",blueGreenLightToDark:"Blue-Green Light to Dark",brownLightToDark:"Brown Light to Dark",brownToBlueGreenDivergingBright:"Brown to Blue Green Diverging, Bright",brownToBlueGreenDivergingDark:"Brown to Blue Green Diverging, Dark",coefficientBias:"Coefficient Bias",coldToHotDiverging:"Cold to Hot Diverging",conditionNumber:"Condition Number",cyanToPurple:"Cyan to Purple",cyanLightToBlueDark:"Cyan-Light to Blue-Dark",distance:"Distance",elevation1:"Elevation #1",elevation2:"Elevation #2",errors:"Errors",grayLightToDark:"Gray Light to Dark",greenBright:"Green Bright",greenLightToDark:"Green Light to Dark",greenToBlue:"Green to Blue",orangeBright:"Orange Bright",orangeLightToDark:"Orange Light to Dark",partialSpectrum:"Partial Spectrum",partialSpectrum1Diverging:"Partial Spectrum 1 Diverging",partialSpectrum2Diverging:"Partial Spectrum 2 Diverging",pinkToYellowGreenDivergingBright:"Pink to YellowGreen Diverging, Bright",pinkToYellowGreenDivergingDark:"Pink to YellowGreen Diverging, Dark",precipitation:"Precipitation",prediction:"Prediction",purpleBright:"Purple Bright",purpleToGreenDivergingBright:"Purple to Green Diverging, Bright",purpleToGreenDivergingDark:"Purple to Green Diverging, Dark",purpleBlueBright:"Purple-Blue Bright",purpleBlueLightToDark:"Purple-Blue Light to Dark",purpleRedBright:"Purple-Red Bright",purpleRedLightToDark:"Purple-Red Light to Dark",redBright:"Red Bright",redLightToDark:"Red Light to Dark",redToBlueDivergingBright:"Red to Blue Diverging, Bright",redToBlueDivergingDark:"Red to Blue Diverging, Dark",redToGreen:"Red to Green",redToGreenDivergingBright:"Red to Green Diverging, Bright",redToGreenDivergingDark:"Red to Green Diverging, Dark",slope:"Slope",spectrumFullBright:"Spectrum-Full Bright",spectrumFullDark:"Spectrum-Full Dark",spectrumFullLight:"Spectrum-Full Light",surface:"Surface",temperature:"Temperature",whiteToBlack:"White to Black",yellowToDarkRed:"Yellow to Dark Red",yellowToGreenToDarkBlue:"Yellow to Green to Dark Blue",yellowToRed:"Yellow to Red",yellowGreenBright:"Yellow-Green Bright",yellowGreenLightToDark:"Yellow-Green Light to Dark"},c={bestMatch:0,fail:1},d={byName:0,byId:2},p={matchAny:0,matchAll:1},h={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},f={outside:1,inside:2},g={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9},m={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},v={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},y={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},w={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},k={setNull:50,conditional:78},b=(0,i.A)((0,i.A)((0,i.A)((0,i.A)((0,i.A)({},m),v),y),w),k),x={plus:1,minus:2,multiply:3,divide:4,power:5,mod:6},B={otsu:1},T={difference:0,relativeDifference:1,categorical:2,spectralEuclidianDistance:3,spectralAngleDifference:4,bandWithMostChange:5},A={all:1,changed:2,unchanged:3},D={min:1,max:2,mean:3,standardDeviation:4,median:5,majority:6,minority:7},I={max:0,min:1,median:2,duration:3}},44038:(t,e,n)=>{n.r(e),n.d(e,{default:()=>_});var i=n(89379),r=n(35143),o=n(42553),a=n(53084),s=n(46053),l=(n(81806),n(76460),n(6409)),u=n(28379),c=n(85842),d=n(17707),p=n(45802),h=n(40565),f=(n(47249),n(58646));let g=class extends o.A{constructor(){super(...arguments),this.pixelType="unknown"}};(0,r._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],g.prototype,"name",void 0),(0,r._)([(0,s.MZ)({type:String,json:{write:!0}})],g.prototype,"description",void 0),(0,r._)([(0,s.MZ)({type:h.jz,json:{type:h.jz,write:!0,name:"_object_id"}})],g.prototype,"id",void 0),(0,r._)([(0,s.MZ)({type:String,json:{type:f.e8.jsonValues,read:f.e8.read,write:{writer:f.e8.write,isRequired:!0}}})],g.prototype,"pixelType",void 0),(0,r._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],g.prototype,"type",void 0),g=(0,r._)([(0,c.$)("esri.layers.support.RasterFunctionInfo")],g);const m=g;let v=class extends o.A{constructor(){super(...arguments),this.isDataset=!1,this.isPublic=!1,this.type="RasterFunctionVariable"}};(0,r._)([(0,s.MZ)({type:String,json:{write:!0}})],v.prototype,"name",void 0),(0,r._)([(0,s.MZ)({type:Number,json:{type:h.jz,write:!0,name:"_object_id"}})],v.prototype,"id",void 0),(0,r._)([(0,s.MZ)({type:Boolean,json:{write:!0}})],v.prototype,"isDataset",void 0),(0,r._)([(0,s.MZ)({type:Boolean,json:{write:!0}})],v.prototype,"isPublic",void 0),(0,r._)([(0,s.MZ)({json:{write:!0}})],v.prototype,"value",void 0),(0,r._)([(0,s.MZ)({type:String,json:{write:!0}})],v.prototype,"type",void 0),v=(0,r._)([(0,c.$)("esri.layers.support.RasterFunctionVariable")],v);const y={key:"type",base:null,typeMap:{RasterFunctionVariable:v}};let w=class extends o.A{};(0,r._)([(0,s.MZ)({types:y,json:{types:y,name:"MatchVariable"}})],w.prototype,"matchVariable",void 0),(0,r._)([(0,s.MZ)({types:y,json:{types:y,name:"UnionDimension"}})],w.prototype,"unionDimension",void 0),(0,r._)([(0,s.MZ)({type:Number,json:{type:h.jz,write:!0,name:"_object_id"}})],w.prototype,"id",void 0),(0,r._)([(0,s.MZ)({type:String,json:{write:!0}})],w.prototype,"type",void 0),w=(0,r._)([(0,c.$)("esri.layers.support.RasterFunctionProperties")],w);const k=w,b=new p.J({0:"mosaic",1:"item",2:"item-group"},{useNumericKeys:!0});let x=class extends o.A{constructor(){super(...arguments),this.description="",this.functionType="mosaic",this.type="RasterFunctionTemplate"}};(0,r._)([(0,s.MZ)({type:[String],json:{write:!0}})],x.prototype,"aliases",void 0),(0,r._)([(0,s.MZ)({type:Object,json:{write:{isRequired:!0}}})],x.prototype,"arguments",void 0),(0,r._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],x.prototype,"description",void 0),(0,r._)([(0,s.MZ)({type:m,json:{write:{isRequired:!0},name:"function"}})],x.prototype,"functionInfo",void 0),(0,r._)([(0,s.MZ)({type:b.apiValues,json:{type:[0,1,2],read:b.read,write:{writer:b.write,isRequired:!0}}})],x.prototype,"functionType",void 0),(0,r._)([(0,s.MZ)({type:String,json:{write:!0}})],x.prototype,"group",void 0),(0,r._)([(0,s.MZ)({type:String,json:{write:!0}})],x.prototype,"help",void 0),(0,r._)([(0,s.MZ)({type:Number,json:{type:h.jz,write:!0,name:"_object_id"}})],x.prototype,"id",void 0),(0,r._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],x.prototype,"name",void 0),(0,r._)([(0,s.MZ)({type:String,json:{write:!0,name:"definition"}})],x.prototype,"queryDefinition",void 0),(0,r._)([(0,s.MZ)({type:String,json:{write:!0}})],x.prototype,"tag",void 0),(0,r._)([(0,s.MZ)({type:k,json:{write:!0}})],x.prototype,"properties",void 0),(0,r._)([(0,s.MZ)({type:String,json:{write:!0}})],x.prototype,"thumbnail",void 0),(0,r._)([(0,s.MZ)({type:String,json:{write:!0}})],x.prototype,"thumbnailEx",void 0),(0,r._)([(0,s.MZ)({json:{type:["RasterFunctionTemplate"],write:!0}})],x.prototype,"type",void 0),x=(0,r._)([(0,c.$)("esri.layers.support.RasterFunctionTemplate")],x);const B=x;var T;const A=new Set(["raster","raster2","dem","fillraster"]),D=new Set(["rasters"]),I=t=>null!==t&&void 0!==t&&t.rasterFunction?C.fromJSON(t):t,M=t=>t&&t instanceof C?t.toJSON():t,N=t=>(null===t||void 0===t?void 0:t.functionName)&&!t.declaredClass,S=t=>N(t)?new C(t):t,R=t=>t?B.fromJSON((0,i.A)({type:"RasterFunctionTemplate"},t)):void 0,P={types:{key:"type",base:null,typeMap:{RasterFunctionTemplate:B}},json:{write:!0,name:"rasterFunctionDefinition",read:R}};let C=T=class extends o.A{constructor(t){super(t),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.functionDefinition=null}set functionArguments(t){if(t){const e=Object.keys(t);if(e.some((e=>A.has(e.toLowerCase())&&N(t[e])))||e.some((e=>D.has(e.toLowerCase())&&Array.isArray(t[e])&&t[e].some((t=>N(t)))))){t=(0,a.clone)(t);for(const n of e)A.has(n.toLowerCase())?t[n]=S(t[n]):D.has(n.toLowerCase())&&Array.isArray(t[n])&&(t[n]=t[n].map((t=>S(t))))}}this._set("functionArguments",t)}readFunctionArguments(t){return(t=>{if(null==t)return null;t=(0,a.clone)(t);const e={};for(const n of Object.keys(t))A.has(n.toLowerCase())?e[n]=I(t[n]):D.has(n.toLowerCase())&&Array.isArray(t[n])?e[n]=t[n].map(I):e[n]=t[n];return e})(t)}writeFunctionArguments(t,e,n){const i={};for(const r of Object.keys(t))A.has(r.toLowerCase())?i[r]=M(t[r]):D.has(r.toLowerCase())&&Array.isArray(t[r])?i[r]=t[r].map(M):i[r]=M(t[r]);e[n]=i}readFunctionName(t,e){var n;const i=e.rasterFunctionInfos;return e.name||(null!==i&&void 0!==i&&i.length&&"None"!==i[0].name?i[0].name:e.rasterFunction||(null===(n=e.rasterFunctionDefinition)||void 0===n?void 0:n.name))}get rasterFunctionDefinition(){var t;return null===(t=this.functionDefinition)||void 0===t?void 0:t.toJSON()}set rasterFunctionDefinition(t){this.functionDefinition=R(t)}get hasClipFunction(){return this.rasterFunctionDefinition?JSON.stringify(this.rasterFunctionDefinition).includes('"type":"ClipFunction"'):JSON.stringify(this).includes('"rasterFunction":"Clip"')}clone(){return new T({functionName:this.functionName,functionArguments:(0,a.clone)(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:(0,a.clone)(this.rasterFunctionDefinition)})}};(0,r._)([(0,s.MZ)({json:{type:Object,name:"rasterFunctionArguments"}})],C.prototype,"functionArguments",null),(0,r._)([(0,u.w)("functionArguments")],C.prototype,"readFunctionArguments",null),(0,r._)([(0,d.K)("functionArguments")],C.prototype,"writeFunctionArguments",null),(0,r._)([(0,s.MZ)({json:{type:String,write:{target:"rasterFunction"}}})],C.prototype,"functionName",void 0),(0,r._)([(0,u.w)("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],C.prototype,"readFunctionName",null),(0,r._)([(0,l.e)({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1,default:"unknown"})],C.prototype,"outputPixelType",void 0),(0,r._)([(0,s.MZ)({type:String,json:{read:!0,write:!0}})],C.prototype,"variableName",void 0),(0,r._)([(0,s.MZ)()],C.prototype,"rasterFunctionDefinition",null),(0,r._)([(0,s.MZ)(P)],C.prototype,"functionDefinition",void 0),(0,r._)([(0,s.MZ)()],C.prototype,"hasClipFunction",null),C=T=(0,r._)([(0,c.$)("esri.layers.support.RasterFunction")],C);const _=C},57939:(t,e,n)=>{function i(t,e,n,i,r){const o=Math.floor(i/2);for(let s=0;s<o;s++)for(let i=0;i<e;i++)t[s*e+i]=t[(r-1-s)*e+i],t[(n-1-s)*e+i]=t[(n-r+s)*e+i];const a=Math.floor(r/2);for(let s=0;s<n;s++){const n=s*e;for(let i=0;i<a;i++)t[n+i]=t[n+r-1-i],t[n+e-i-1]=t[n+e+i-r]}}n.d(e,{e:()=>i})},58646:(t,e,n)=>{n.d(e,{SZ:()=>r,e8:()=>a,hm:()=>o});var i=n(45802);const r=(0,i.O)()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),o=(0,i.O)()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),a=(0,i.O)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"})},59356:(t,e,n)=>{n.d(e,{UY:()=>s,_z:()=>u,z5:()=>l});var i=n(89379),r=(n(81806),n(45802)),o=n(66486),a=n(52297);const s=new r.J({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),l=new r.J({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});function u(t,e,n,r){const[s,l]=t,u=(0,a.zw)(n)&&!(0,a.zw)(s.pixelType)&&!(0,a.zw)(l.pixelType),c=[s.mask,l.mask].filter((t=>t)),d=o.default.combineBandMasks(c),p=t.map((t=>t.pixels[0])),{width:h,height:f}=s,g=o.default.createEmptyBand(n,h*f);switch(e){case"difference":case"relative-difference":!function(t){const{bands:[e,n],mask:i,isRelative:r,isRoundingNeeded:o,outBand:a}=t,s=e.length;for(let l=0;l<s;l++)if(!i||i[l]){let t=e[l]-n[l];if(r){const i=Math.max(Math.abs(e[l])-Math.abs(n[l]));t=i>0?t/i:0}a[l]=o?Math.round(t):t}}({bands:p,mask:d,outBand:g,isRoundingNeeded:u,isRelative:"relative-difference"===e});break;case"categorical":!function(t){const{bands:[e,n],categoryIndexLookups:[i,r],classNames:[o,a],mask:s,keepMethod:l,outBand:u}=t,c=e.length,d=o.length,p=a.length,h=d*p,f=h+1,g=h+2;for(let m=0;m<c;m++)if(!s||s[m]){const t=e[m],s=n[m],c=i[t],d=r[s],v=o[c],y=a[d];u[m]=null==c||null==d?h:"changed"===l&&v===y?f:"unchanged"===l&&v!==y?g:c*p+d}}((0,i.A)({bands:p,mask:d,outBand:g},r));break;case"euclidean-distance":!function(t){const{pixels:[e,n],mask:i,outBand:r}=t,o=e[0].length,a=e.length;for(let s=0;s<o;s++)if(!i||i[s]){let t=0;for(let i=0;i<a;i++){const r=e[i][s]-n[i][s];t+=r*r}r[s]=Math.sqrt(t)}}({pixels:t.map((t=>t.pixels)),mask:d,outBand:g});break;case"angle-difference":!function(t){const{pixels:[e,n],mask:i,outBand:r}=t,o=e[0].length,a=e.length;for(let s=0;s<o;s++)if(!i||i[s]){let t=0,i=0,o=0;for(let r=0;r<a;r++){const a=e[r][s],l=n[r][s];t+=a*l,i+=a*a,o+=l*l}const l=Math.sqrt(i*o);r[s]=l?Math.acos(t/l):1.5707963267948966}}({pixels:t.map((t=>t.pixels)),mask:d,outBand:g});break;case"band-with-most-change":!function(t){const{pixels:[e,n],mask:i,outBand:r}=t,o=e[0].length,a=e.length;for(let s=0;s<o;s++)if(!i||i[s]){let t=0,i=0;for(let r=0;r<a;r++){const o=Math.abs(e[r][s]-n[r][s]);o>t&&(t=o,i=r)}r[s]=i}}({pixels:t.map((t=>t.pixels)),mask:d,outBand:g})}const m=new o.default({width:h,height:f,pixels:[g],pixelType:n,mask:d});return m.updateStatistics(),m}},66486:(t,e,n)=>{n.r(e),n.d(e,{default:()=>g});var i,r=n(35143),o=n(50076),a=n(42553),s=n(53084),l=n(76460),u=n(46053),c=n(21403),d=n(85842),p=n(8141),h=n(52297);let f=i=class extends a.A{static createEmptyBand(t,e){return new(i.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,n=new Uint8Array(e).fill(255);for(let i=0;i<t.length;i++){const r=t[i];for(let t=0;t<e;t++)r[t]||(n[t]=0)}return n}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){var t;return null===(t=this.pixels)||void 0===t?void 0:t.length}addData(t){var e;if(!t.pixels||t.pixels.length!==this.width*this.height)throw new o.default("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(null!==(e=t.statistics)&&void 0!==e?e:new p.z)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map((t=>function(t,e){let n=1/0,i=-1/0;const r=t.length;let o,a=0;if(null!=e)for(o=0;o<r;o++)e[o]&&(a=t[o],n=a<n?a:n,i=a>i?a:i);else for(o=0;o<r;o++)a=t[o],n=a<n?a:n,i=a>i?a:i;return new p.z(n,i)}(t,this.mask)));const t=this.mask;let e=0;if(null!=t)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t||!this.pixels)return;const[e,n]=(0,h.hP)(t),r=this.pixels,o=this.width*this.height,a=r.length;let s,l,u;const c=[];for(let d=0;d<a;d++){u=i.createEmptyBand(t,o),s=r[d];for(let t=0;t<o;t++)l=s[t],u[t]=l>n?n:l<e?e:l;c.push(u)}this.pixels=c,this.pixelType=t}extractBands(t){var e;const{pixels:n,statistics:r}=this;if(null==t||0===t.length||!n||0===n.length)return this;const o=n.length,a=t.some((t=>t>=n.length)),s=o===t.length&&!t.some(((t,e)=>t!==e));if(a||s)return this;const l=(null===(e=this.bandMasks)||void 0===e?void 0:e.length)===o?t.map((t=>this.bandMasks[t])):void 0;let{mask:u,validPixelCount:c}=this;const{width:d,height:p}=this;return null!==l&&void 0!==l&&l.length&&(u=i.combineBandMasks(l),c=u.filter((t=>!!t)).length),new i({pixelType:this.pixelType,width:d,height:p,mask:u,bandMasks:l,validPixelCount:c,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>n[t])),statistics:r&&t.map((t=>r[t]))})}clone(){const t=new i({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;null!=this.mask&&(t.mask=new Uint8Array(this.mask)),this.bandMasks&&(t.bandMasks=this.bandMasks.map((t=>new Uint8Array(t))));const n=i.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const i=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=i?this.pixels[e].slice():new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=(0,s.clone)(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:i,pixels:r}=this;if(!t||null===r||void 0===r||!r.length)return void l.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let o,a,s,u;o=a=s=r[0],r.length>=3?(a=r[1],s=r[2]):2===r.length&&(a=r[1]);const c=new Uint32Array(t),d=this.width*this.height;if(o.length===d)if(null!=e&&e.length===d)if(n)for(u=0;u<d;u++){const t=e[u];if(t){const e=t/255;c[u]=i?t<<24|s[u]*e<<16|a[u]*e<<8|o[u]*e:t<<24|s[u]<<16|a[u]<<8|o[u]}}else for(u=0;u<d;u++)e[u]&&(c[u]=255<<24|s[u]<<16|a[u]<<8|o[u]);else for(u=0;u<d;u++)c[u]=255<<24|s[u]<<16|a[u]<<8|o[u];else l.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:i}=this;if(!t||null===e||void 0===e||!e.length)return void l.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const r=this.pixelType;let o=1,a=0,s=1;if(i&&i.length>0){for(const t of i)if(null!=t.minValue&&(a=Math.min(a,t.minValue)),null!=t.maxValue&&null!=t.minValue){const e=t.maxValue-t.minValue;s=Math.max(s,e)}o=255/s}else{let t=255;"s8"===r?(a=-128,t=127):"u16"===r?t=65535:"s16"===r?(a=-32768,t=32767):"u32"===r?t=4294967295:"s32"===r?(a=-2147483648,t=2147483647):"f32"===r?(a=-34e38,t=34e38):"f64"===r&&(a=-Number.MAX_VALUE,t=Number.MAX_VALUE),o=255/(t-a)}const u=new Uint32Array(t),c=this.width*this.height;let d,p,h,f,g;if(d=p=h=e[0],d.length!==c)return l.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(p=e[1],e.length>=3&&(h=e[2]),null!=n&&n.length===c)for(f=0;f<c;f++)n[f]&&(u[f]=255<<24|(h[f]-a)*o<<16|(p[f]-a)*o<<8|(d[f]-a)*o);else for(f=0;f<c;f++)u[f]=255<<24|(h[f]-a)*o<<16|(p[f]-a)*o<<8|(d[f]-a)*o;else if(null!=n&&n.length===c)for(f=0;f<c;f++)g=(d[f]-a)*o,n[f]&&(u[f]=255<<24|g<<16|g<<8|g);else for(f=0;f<c;f++)g=(d[f]-a)*o,u[f]=255<<24|g<<16|g<<8|g}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||null===e||void 0===e||!e.length)return l.A.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let i,r,o,a;i=r=o=e[0],e.length>=3?(r=e[1],o=e[2]):2===e.length&&(r=e[1]);const s=this.width*this.height;if(i.length!==s)return l.A.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let u=0;if(null!=n&&n.length===s)for(a=0;a<s;a++)t[u++]=i[a],t[u++]=r[a],t[u++]=o[a],t[u++]=1&n[a];else for(a=0;a<s;a++)t[u++]=i[a],t[u++]=r[a],t[u++]=o[a],t[u++]=1}};(0,r._)([(0,u.MZ)({json:{write:!0}})],f.prototype,"width",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],f.prototype,"height",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],f.prototype,"pixelType",void 0),(0,r._)([(0,c.w)("pixelType")],f.prototype,"castPixelType",null),(0,r._)([(0,u.MZ)({json:{write:!0}})],f.prototype,"validPixelCount",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],f.prototype,"mask",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],f.prototype,"maskIsAlpha",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],f.prototype,"pixels",void 0),(0,r._)([(0,u.MZ)()],f.prototype,"premultiplyAlpha",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],f.prototype,"statistics",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],f.prototype,"depthCount",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],f.prototype,"noDataValues",void 0),(0,r._)([(0,u.MZ)({json:{write:!0}})],f.prototype,"bandMasks",void 0),f=i=(0,r._)([(0,d.$)("esri.layers.support.PixelBlock")],f);const g=f},90586:(t,e,n)=>{n.r(e),n.d(e,{abs:()=>Bt,acos:()=>wt,acosh:()=>se,argStatistics:()=>Ie,asin:()=>kt,asinh:()=>le,aspect:()=>ye,atan:()=>bt,atan2:()=>ue,atanh:()=>xt,bandArithmeticBAI:()=>V,bandArithmeticCIg:()=>R,bandArithmeticCIre:()=>S,bandArithmeticClayMinerals:()=>F,bandArithmeticCustom:()=>z,bandArithmeticEVI:()=>C,bandArithmeticFerrousMinerals:()=>j,bandArithmeticGEMI:()=>w,bandArithmeticGNDVI:()=>T,bandArithmeticGVITM:()=>b,bandArithmeticIronOxide:()=>_,bandArithmeticMNDWI:()=>E,bandArithmeticMSAVI:()=>y,bandArithmeticMTVI2:()=>M,bandArithmeticNBR:()=>G,bandArithmeticNDBI:()=>L,bandArithmeticNDMI:()=>Z,bandArithmeticNDSI:()=>U,bandArithmeticNDVI:()=>g,bandArithmeticNDVIre:()=>D,bandArithmeticNDWI:()=>P,bandArithmeticPVI:()=>k,bandArithmeticRTVICore:()=>N,bandArithmeticSAVI:()=>m,bandArithmeticSR:()=>A,bandArithmeticSRre:()=>I,bandArithmeticSultan:()=>x,bandArithmeticTSAVI:()=>v,bandArithmeticVARI:()=>B,bandArithmeticWNDWI:()=>O,bitwiseAnd:()=>Tt,bitwiseLeftShift:()=>At,bitwiseNot:()=>Dt,bitwiseOr:()=>It,bitwiseRightShift:()=>Mt,bitwiseXor:()=>Nt,booleanAnd:()=>St,booleanNot:()=>Rt,booleanOr:()=>Pt,booleanXor:()=>Ct,calculate:()=>fe,cellStatistics:()=>he,clip:()=>dt,colormap:()=>et,colormapToRGB:()=>nt,colorspaceConversion:()=>H,compositeBand:()=>st,computeChange:()=>J,conditional:()=>de,contrastBrightness:()=>s,convolution:()=>a,cos:()=>_t,cosh:()=>jt,createColorComposite:()=>at,curvature:()=>ke,defaultRaster:()=>Me,divide:()=>Ft,equalTo:()=>Ot,exp:()=>Vt,exp10:()=>Gt,exp2:()=>Lt,extractBand:()=>ot,float:()=>qt,grayscale:()=>Y,greaterThan:()=>Zt,greaterThanEqual:()=>Ut,hillshade:()=>be,int:()=>Et,isNull:()=>zt,lessThan:()=>Jt,lessThanEqual:()=>Wt,log:()=>Yt,log10:()=>Ht,log2:()=>Kt,mask:()=>ct,minus:()=>gt,mod:()=>$t,negate:()=>Xt,notEqual:()=>Qt,plus:()=>ft,power:()=>yt,remap:()=>lt,roundDown:()=>te,roundUp:()=>ee,setNull:()=>ce,shadedRelief:()=>xe,sin:()=>ne,sinh:()=>ie,slope:()=>we,spectralConversion:()=>K,sqrt:()=>vt,square:()=>re,statistics:()=>Ae,statisticsHistogram:()=>it,stretchHistogramEqualization:()=>h,stretchMinMax:()=>u,stretchNone:()=>p,stretchPercentClip:()=>d,stretchStandardDeviation:()=>c,table:()=>rt,tan:()=>oe,tanh:()=>ae,tasseledCap:()=>$,threshold:()=>W,times:()=>mt,transposeBits:()=>ut,weightedOverlay:()=>me,weightedSum:()=>ge});var i=n(44038);function r(t,e,n){return Object.keys(e).forEach((t=>{null==e[t]&&delete e[t]})),n||(n="unknown"),new i.default({functionName:t,functionArguments:e,outputPixelType:n})}const o={"user-defined":-1,"line-detection-horizontal":0,"line-detection-vertical":1,"line-detection-left-diagonal":2,"line-detection-right-diagonal":3,"gradient-north":4,"gradient-west":5,"gradient-east":6,"gradient-south":7,"gradient-north-east":8,"gradient-north-west":9,"smooth-arithmetic-mean":10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,"sobel-horizontal":17,"sobel-vertical":18,sharpen:19,sharpen2:20,"point-spread":21,none:255};function a(t){const{raster:e,outputPixelType:n}=t;if("convolutionType"in t&&"user-defined"!==t.convolutionType){var i;return r("Convolution",{type:null!==(i=o[t.convolutionType])&&void 0!==i?i:255,raster:e},n)}const{rows:a,cols:s,kernel:l}=t;return r("Convolution",{type:-1,rows:a,cols:s,kernel:l,raster:e},n)}function s(t){const{contrastOffset:e,brightnessOffset:n,raster:i,outputPixelType:o}=t;return r("ContrastBrightness",{contrastOffset:e,brightnessOffset:n,raster:i},o)}function l(t,e){const{raster:n,dynamicRangeAdjustment:i,gamma:r,useGamma:o,outputMin:a=0,outputMax:s=255}=e;return{raster:n,stretchType:t,min:a,max:s,useGamma:!!o,gamma:r,dra:!!i}}function u(t){var e;const n=l(5,t);return n.statistics=null===(e=t.statistics)||void 0===e?void 0:e.map((t=>{var e,n;return[t.min,t.max,null!==(e=t.avg)&&void 0!==e?e:0,null!==(n=t.stddev)&&void 0!==n?n:-1]})),r("Stretch",n,t.outputPixelType)}function c(t){var e,n;const i=l(3,t);return i.statistics=null===(e=t.statistics)||void 0===e?void 0:e.map((t=>{var e,n;return[t.min,t.max,null!==(e=t.avg)&&void 0!==e?e:0,null!==(n=t.stddev)&&void 0!==n?n:-1]})),i.numberOfStandardDeviations=null!==(n=t.numberOfStandardDeviations)&&void 0!==n?n:2,r("Stretch",i,t.outputPixelType)}function d(t){var e,n;const i=l(6,t);return i.minPercent=null!==(e=t.minPercent)&&void 0!==e?e:.25,i.maxPercent=null!==(n=t.maxPercent)&&void 0!==n?n:.25,r("Stretch",i,t.outputPixelType)}function p(t){return r("Stretch",l(0,t),t.outputPixelType)}function h(t){return r("Stretch",l(4,t),t.outputPixelType)}function f(t,e,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];const{raster:o,outputPixelType:a}=t,s={raster:o,method:e,bandIndexes:n.map((t=>t+1)).concat(i).join(" ")};return r("BandArithmetic",s,a)}function g(t){const{nirBandId:e,redBandId:n,scientificOutput:i=!0,raster:o,outputPixelType:a}=t;return r("NDVI",{raster:o,visibleBandID:n,infraredBandID:e,scientificOutput:i},a)}function m(t){const{nirBandId:e,redBandId:n,factor:i=.33}=t;return f(t,2,[e,n],[i])}function v(t){const{nirBandId:e,redBandId:n,slope:i=.33,intercept:r=.5,factor:o=1.5}=t;return f(t,3,[e,n],[i,r,o])}function y(t){const{nirBandId:e,redBandId:n}=t;return f(t,4,[e,n])}function w(t){const{nirBandId:e,redBandId:n}=t;return f(t,5,[e,n])}function k(t){const{nirBandId:e,redBandId:n,slope:i=.3,gradient:r=.5}=t;return f(t,6,[e,n],[i,r])}function b(t){return f(t,7,t.bandIds)}function x(t){return f(t,8,t.bandIds)}function B(t){const{redBandId:e,greenBandId:n,blueBandId:i}=t;return f(t,9,[e,n,i])}function T(t){const{nirBandId:e,greenBandId:n}=t;return f(t,10,[e,n])}function A(t){const{nirBandId:e,redBandId:n}=t;return f(t,11,[e,n])}function D(t){const{nirBandId:e,reBandId:n}=t;return f(t,12,[e,n])}function I(t){const{nirBandId:e,reBandId:n}=t;return f(t,13,[e,n])}function M(t){const{nirBandId:e,redBandId:n,greenBandId:i}=t;return f(t,14,[e,n,i])}function N(t){const{nirBandId:e,reBandId:n,greenBandId:i}=t;return f(t,15,[e,n,i])}function S(t){const{nirBandId:e,reBandId:n}=t;return f(t,16,[e,n])}function R(t){const{nirBandId:e,greenBandId:n}=t;return f(t,17,[e,n])}function P(t){const{nirBandId:e,greenBandId:n}=t;return f(t,18,[e,n])}function C(t){const{nirBandId:e,redBandId:n,blueBandId:i}=t;return f(t,19,[e,n,i])}function _(t){const{redBandId:e,blueBandId:n}=t;return f(t,20,[e,n])}function j(t){const{swirBandId:e,nirBandId:n}=t;return f(t,21,[e,n])}function F(t){const{swir1BandId:e,swir2BandId:n}=t;return f(t,22,[e,n])}function O(t){const{greenBandId:e,nirBandId:n,swirBandId:i,alpha:r=.5}=t;return f(t,23,[e,n,i],[r])}function V(t){const{redBandId:e,nirBandId:n}=t;return f(t,24,[e,n])}function G(t){const{nirBandId:e,swirBandId:n}=t;return f(t,25,[e,n])}function L(t){const{swirBandId:e,nirBandId:n}=t;return f(t,26,[e,n])}function Z(t){const{nirBandId:e,swirBandId:n}=t;return f(t,27,[e,n])}function U(t){const{greenBandId:e,swirBandId:n}=t;return f(t,28,[e,n])}function E(t){const{greenBandId:e,swirBandId:n}=t;return f(t,29,[e,n])}function z(t){const{raster:e,bandIndexes:n,outputPixelType:i}=t;return r("BandArithmetic",{raster:e,method:0,bandIndexes:n},i)}var q=n(59356);function J(t){const{raster:e,raster2:n,outputPixelType:i}=t;return r("ComputeChange",{method:q.UY.toJSON(t.method),keepMethod:t.keepMethod&&q.z5.toJSON(t.keepMethod),raster:e,raster2:n},i)}function W(t){const{raster:e,outputPixelType:n}=t;return r("Threshold",{thresholdType:1,raster:e},n)}function Y(t){const{weights:e,outputPixelType:n="unknown",raster:i}=t;return r("Grayscale",{conversionParameters:e,raster:i},n)}function H(t){const{outputPixelType:e,raster:n}=t;return r("ColorspaceConversion",{conversionType:"rgb-to-hsv"===t.conversionType?0:1,raster:n},e)}function K(t){const{outputPixelType:e,raster:n}=t;return r("SpectralConversion",{conversionMatrix:t.conversionMatrix.flat(),raster:n},e)}function $(t){const{outputPixelType:e,raster:n}=t;return r("TasseledCap",{raster:n},e)}var X=n(99746),Q=n(17941),tt=n(93187);function et(t){return"colormap"in t?function(t){const e=t.colormap.map((t=>{if("value"in t){var e;const n="string"==typeof t.color?null!==(e=(0,X.TS)(t.color))&&void 0!==e?e:(0,X.qh)(t.color):t.color;(t=[t.value,...n])[4]&&t[4]<=1&&(t[4]=Math.round(255*t[4]))}return t})),{raster:n,outputPixelType:i}=t;return r("Colormap",{colormap:e,raster:n},i)}(t):"colorRamp"in t?function(t){const{raster:e,colorRamp:n,outputPixelType:i}=t,o={colorRamp:"toJSON"in n?n.toJSON():n,raster:e};return r("Colormap",o,i)}(t):function(t){const{colorRampName:e}=t,n=Object.values(Q.colormapName).find((t=>t.toLowerCase()===(null===e||void 0===e?void 0:e.toLowerCase()))),i=tt.kH.toJSON(e),{raster:o,outputPixelType:a="unknown"}=t;return r("Colormap",n?{colormapName:n,raster:o}:{colorRampName:i,raster:o},a)}(t)}function nt(t){const{raster:e,outputPixelType:n="u8"}=t;return r("ColormapToRGB",{raster:e},n)}function it(t){var e;const{raster:n,histograms:i,outputPixelType:o}=t,a=null===(e=t.statistics)||void 0===e?void 0:e.map((t=>({min:t.min,max:t.max,mean:t.avg,standardDeviation:t.stddev})));return r("StatisticsHistograms",{raster:n,statistics:a,histograms:i},o)}function rt(t){const{raster:e,attributeTable:n,outputPixelType:i="unknown"}=t;return r("Table",{raster:e,attributeTableAsRecordSet:"toJSON"in n?n.toJSON():n},i)}function ot(t){const{raster:e,outputPixelType:n="unknown"}=t,i={raster:e,missingBandAction:"fail"===t.missingBandAction?1:0};return"bandIds"in t?i.bandIds=t.bandIds:"bandNames"in t?i.bandNames=t.bandNames:"bandWavelengths"in t&&(i.bandWavelengths=t.bandWavelengths),r("ExtractBand",i,n)}function at(t){const{redBand:e,greenBand:n,blueBand:i,raster:o,outputPixelType:a}=t;return r("CreateColorComposite",{raster:o,method:"name"===t.method?0:2,bandIndexesR:e,bandIndexesG:n,bandIndexesB:i},a)}function st(t){const{rasters:e,outputPixelType:n}=t;return r("CompositeBand",{rasters:e},n)}function lt(t){var e;const{allowUnmatched:n,raster:i,rangeMaps:o,outputPixelType:a}=t,s=null===o||void 0===o?void 0:o.filter((t=>{let{output:e}=t;return null!=e})),l=null===s||void 0===s?void 0:s.flatMap((t=>{let{range:e}=t;return e})),u=null===s||void 0===s?void 0:s.map((t=>{let{output:e}=t;return e})),c=null===o||void 0===o||null===(e=o.filter((t=>null==t.output)))||void 0===e?void 0:e.flatMap((t=>{let{range:e}=t;return e}));return r("Remap",{allowUnmatched:n,raster:i,inputRanges:l,outputValues:u,noDataRanges:c},a)}function ut(t){const{inputBitPositions:e,raster:n,fillRaster:i,outputBitPositions:o,outputPixelType:a}=t,s={inputBitPositions:e,outputBitPositions:o,raster:n};return null!=i&&("number"==typeof i?(s.constantFillCheck=!0,s.constantFillValue=i):s.fillRaster=i),r("TransposeBits",s,a)}function ct(t){var e,n;const{raster:i,outputPixelType:o="unknown"}=t,a=null===(e=t.includedRanges)||void 0===e?void 0:e.flatMap((t=>t)),s=null===(n=t.noDataValues)||void 0===n?void 0:n.map((t=>t.join(" ")));return r("Mask",{raster:i,includedRanges:a,noDataInterpretation:"match-all"===t.noDataInterpretation?1:0,noDataValues:s},o)}function dt(t){const{geometry:e,keepOutside:n,outputPixelType:i="unknown",raster:o}=t;return r("Clip",{clippingGeometry:"declaredClass"in e?e.toJSON():e,clippingType:n?2:1,raster:o},i)}function pt(t,e){var n,i;let o,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown";return"object"!=typeof e||!("raster"in e)&&("rasterFunction"in e||"functionName"in e)?o=[e]:(o=[null!==(n=e.raster)&&void 0!==n?n:"$$"],a=null!==(i=e.outputPixelType)&&void 0!==i?i:"unknown"),r("Local",{operation:t,rasters:o},a)}function ht(t,e,n){var i;let o,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"unknown";return"object"==typeof e&&"raster"in e?(o=[e.raster,e.raster2],a=null!==(i=e.outputPixelType)&&void 0!==i?i:"unknown"):o=[e,n],r("Local",{operation:t,rasters:o},a)}function ft(t,e){return ht(1,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function gt(t,e){return ht(2,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function mt(t,e){return ht(3,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function vt(t){return pt(4,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function yt(t,e){return ht(5,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function wt(t){return pt(6,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function kt(t){return pt(7,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function bt(t){return pt(8,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function xt(t){return pt(9,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function Bt(t){return pt(10,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function Tt(t,e){return ht(11,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function At(t,e){return ht(12,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function Dt(t){return pt(13,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function It(t,e){return ht(14,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function Mt(t,e){return ht(15,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function Nt(t,e){return ht(16,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function St(t,e){return ht(17,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function Rt(t){return pt(18,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function Pt(t,e){return ht(19,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function Ct(t,e){return ht(20,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function _t(t){return pt(21,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function jt(t){return pt(22,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function Ft(t,e){return ht(23,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function Ot(t,e){return ht(24,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function Vt(t){return pt(25,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function Gt(t){return pt(26,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function Lt(t){return pt(27,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function Zt(t,e){return ht(28,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function Ut(t,e){return ht(29,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function Et(t){return pt(30,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function zt(t){return pt(31,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function qt(t){return pt(32,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function Jt(t,e){return ht(33,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function Wt(t,e){return ht(34,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function Yt(t){return pt(35,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function Ht(t){return pt(36,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function Kt(t){return pt(37,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function $t(t,e){return ht(44,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function Xt(t){return pt(45,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function Qt(t,e){return ht(46,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function te(t){return pt(48,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function ee(t){return pt(49,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function ne(t){return pt(51,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function ie(t){return pt(52,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function re(t){return pt(53,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function oe(t){return pt(56,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function ae(t){return pt(57,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function se(t){return pt(59,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function le(t){return pt(60,t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"unknown")}function ue(t,e){return ht(61,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown")}function ce(t,e){var n;let i,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"unknown";return"object"==typeof t&&"raster"in t?(i=[t.raster,t.falseRaster],o=null!==(n=t.outputPixelType)&&void 0!==n?n:"unknown"):i=[t,e],r("Local",{operation:50,rasters:i},o)}function de(t,e,n,i){var o;let a;return"object"==typeof t&&"raster"in t&&"trueRaster"in t?(a=[t.raster,t.trueRaster,t.falseRaster],i=null!==(o=t.outputPixelType)&&void 0!==o?o:"unknown"):a=[t,e,n],r("Local",{operation:78,rasters:a},i)}const pe={majority:38,max:39,mean:40,median:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58};function he(t){const{rasters:e,statisticsType:n,processAsMultiband:i=!0,outputPixelType:o}=t;return r("Local",{operation:pe[n],processAsMultiband:i,rasters:e},o)}function fe(t){const{rasters:e,inputNames:n,expression:i,outputPixelType:o}=t;return r("RasterCalculator",{rasters:e,inputNames:n,expression:i},o)}function ge(t){var e;const{rasters:n,weights:i,outputPixelType:o}=t,a=null!==(e=null===t||void 0===t?void 0:t.fields)&&void 0!==e?e:n.map((()=>"Value"));return r("WeightedSum",{rasters:n,fields:a,weights:i},o)}function me(t){var e;const{rasters:n,weights:i,outputPixelType:o,minScale:a,maxScale:s,valueToScaleMaps:l,noDataValues:u,restrictedValues:c}=t,d=i.reduce(((t,e)=>t+e)),p=1===d?i:i.map((t=>t/d)),h=null!==(e=null===t||void 0===t?void 0:t.fields)&&void 0!==e?e:n.map((()=>"Value")),f=n.map((()=>[]));if(null!==l&&void 0!==l&&l.length)for(let r=0;r<f.length;r++){var g;(null===(g=l[r])||void 0===g?void 0:g.length)&&f[r].push(...l[r].map((t=>t.join(" "))))}if(null!==u&&void 0!==u&&u.length)for(let r=0;r<f.length;r++){var m;(null===(m=u[r])||void 0===m?void 0:m.length)&&f[r].push(...u[r].map((t=>"".concat(t," NODATA"))))}if(null!==c&&void 0!==c&&c.length)for(let r=0;r<f.length;r++){var v;(null===(v=c[r])||void 0===v?void 0:v.length)&&f[r].push(...c[r].map((t=>"".concat(t," Restricted"))))}const y=f.map((t=>t.join(",")));return r("WeightedOverlay",{rasters:n,fields:h,influences:p,remaps:y,evalFrom:a,evalTo:s},o)}var ve=n(89379);function ye(t){const{raster:e,outputPixelType:n}=t;return r("Aspect",{raster:e},n)}function we(t){const{raster:e,zFactor:n,removeEdgeEffect:i,outputPixelType:o="unknown"}=t,a="degree"===t.slopeType?1:"percent-rise"===t.slopeType?2:3,s={raster:e,slopeType:a,zFactor:n,removeEdgeEffect:i};return 3===a&&(s.psPower=t.pixelSizePower,s.psZFactor=t.pixelSizeZFactor),r("Slope",s,o)}function ke(t){const{raster:e,zFactor:n,outputPixelType:i="unknown"}=t;return r("Curvature",{raster:e,curvatureType:"standard"===t.curvatureType?0:"planform"===t.curvatureType?1:2,zFactor:n},i)}function be(t){const{raster:e,zFactor:n,altitude:i=45,azimuth:o=315,removeEdgeEffect:a,outputPixelType:s="u8"}=t,l="adjusted"===t.scalingType?3:1,u={raster:e,hillshadeType:"multi-directional"===t.hillshadeType?1:0,altitude:i,azimuth:o,slopeType:l,zFactor:n,removeEdgeEffect:a};return 3===l&&(u.psPower=t.pixelSizePower,u.psZFactor=t.pixelSizeZFactor),r("Hillshade",u,s)}function xe(t){const{functionArguments:e}=be(t),{outputPixelType:n="u8"}=t,i=t.colorRamp;if(i){const t="toJSON"in i?i.toJSON():i;return r("ShadedRelief",(0,ve.A)((0,ve.A)({},e),{},{colorRamp:t}),n)}const o=t.colorRampName;if(o){const t=(0,tt.hs)(o);return r("ShadedRelief",(0,ve.A)((0,ve.A)({},e),{},{colorRamp:t}),n)}const a=t.colormap;return r("ShadedRelief",(0,ve.A)((0,ve.A)({},e),{},{colormap:a}),n)}var Be=n(45802),Te=n(94260);function Ae(t){const{rows:e,cols:n,fillNoDataOnly:i=!1,raster:o,outputPixelType:a}=t;return r("Statistics",{rows:e,cols:n,fillNoDataOnly:i,statisticsType:Te.a.toJSON(t.statisticsType),raster:o},a)}const De=new Be.J({0:"max",1:"min",2:"median",3:"duration"},{useNumericKeys:!0});function Ie(t){const{rasters:e,outputPixelType:n}=t,i={argStatisticsType:De.toJSON(t.statisticsType),rasters:e};return"duration"===t.statisticsType?(i.minValue=t.minValue,i.maxValue=t.maxValue):i.undefinedClass=t.undefinedClass,r("ArgStatistics",i,n)}const Me="$$"},94260:(t,e,n)=>{n.d(e,{a:()=>a,y:()=>d});n(81806);var i=n(45802),r=n(66486),o=n(57939);const a=new i.J({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function s(t,e){const{fillNoDataOnly:n}=e,{band:i,width:r,height:o,mask:a,outBand:s}=t;if(n&&!a)return void s.set(i);const{statisticsType:l,kernelRows:u,kernelCols:c}=e,d="stddev"===l,p=r*o,h=new Float64Array(p),f=new Float64Array(p),g=new Uint32Array(p);for(let x=0;x<o;x++){const t=x*r;let e=0,n=0,o=0;for(let r=0;r<c;r++)a&&!a[t+r]||(e+=i[t+r],d&&(n+=i[t+r]**2),o++);h[t]=e,f[t]=n,g[t]=o;for(let s=1;s<=r-c;s++){const r=t+s-1,l=r+c;a?(a[r]&&(o--,e-=i[r],d&&(n-=i[r]**2)),a[l]&&(o++,e+=i[l],d&&(n+=i[l]**2))):(e-=i[r],e+=i[l],d&&(n-=i[r]**2,n+=i[l]**2)),h[t+s]=e,g[t+s]=o,d&&(f[t+s]=n)}}const m=new Float64Array(p),v=new Float64Array(p),y=new Uint32Array(p),w=u*r;for(let x=0;x<=r-c;x++){let t=0,e=0,n=0;for(let i=0;i<u;i++){const o=i*r+x;t+=h[o],n+=g[o],d&&(e+=f[o])}m[x]=t,v[x]=e,y[x]=n;for(let i=1;i<=o-u;i++){const o=(i-1)*r+x,a=o+w;t-=h[o],t+=h[a],n-=g[o],n+=g[a],d&&(e-=f[o],e+=f[a]),m[i*r+x]=t,v[i*r+x]=e,y[i*r+x]=n}}const k=Math.floor(u/2),b=Math.floor(c/2);for(let x=k;x<o-k;x++){const t=x*r;for(let e=b;e<r-b;e++){const i=(x-k)*r+e-b,o=y[i];if(0===o||n&&(!a||a[t+e]))continue;const l=m[i]/o,u=d?Math.sqrt((v[i]-m[i]*l)/o):l;s[t+e]=u,a&&(a[t+e]=255)}}}function l(t,e){const{fillNoDataOnly:n}=e,{band:i,width:r,height:o,mask:a,outBand:s}=t;if(n&&!a)return void s.set(i);const{kernelRows:l,kernelCols:u,statisticsType:c}=e,d=Math.floor(l/2),p=Math.floor(u/2),h="min"===c,f=s.slice(),g=new Uint32Array(r*o);for(let m=d;m<o-d;m++){const t=m*r;for(let e=p;e<r-p;e++){let n=h?Number.MAX_VALUE:-Number.MAX_VALUE,o=0;for(let s=0;s<l;s++)for(let l=0;l<u;l++){const u=t+e+(s-d)*r+l-p;a&&!a[u]||(n=h?Math.min(n,i[u]):Math.max(n,i[u]),o++)}a?(f[t+e]=0===o?0:n,g[t+e]=o):s[t+e]=0===o?0:n}}if(a)for(let m=d;m<o-d;m++){const t=m*r;for(let e=p;e<r-p;e++)if(g[t+e]){if(n&&a[t+e])continue;s[t+e]=f[t+e],a[t+e]=255}}}function u(t,e){const{fillNoDataOnly:n}=e,{band:i,width:r,height:o,mask:a,outBand:s}=t;if(n&&!a)return void s.set(i);const{kernelRows:l,kernelCols:u}=e,c=Math.floor(l/2),d=Math.floor(u/2),p=s.slice(),h=new Uint32Array(r*o);for(let f=c;f<o-c;f++){const t=f*r;for(let e=d;e<r-d;e++){if(n&&null!==a&&void 0!==a&&a[t+e])continue;const o=[];for(let n=0;n<l;n++)for(let s=0;s<u;s++){const l=t+e+(n-c)*r+s-d;a&&!a[l]||o.push(i[l])}o.length&&(o.sort(((t,e)=>t-e)),a?(p[t+e]=o[Math.floor((o.length-1)/2)],h[t+e]=o.length):s[t+e]=o[Math.floor((o.length-1)/2)])}}if(a)for(let f=c;f<o-c;f++){const t=f*r;for(let e=d;e<r-d;e++)if(h[t+e]){if(n&&a[t+e])continue;s[t+e]=p[t+e],a[t+e]=255}}}function c(t,e){const{fillNoDataOnly:n}=e,{band:i,width:r,height:o,mask:a,outBand:s}=t;if(n&&!a)return void s.set(i);const{kernelRows:l,kernelCols:u}=e,c=Math.floor(l/2),d=Math.floor(u/2),p="majority"===e.statisticsType,h=l*u,f=s.slice(),g=new Uint32Array(r*o);for(let m=c;m<o-c;m++){const t=m*r;for(let e=d;e<r-d;e++){if(n&&null!==a&&void 0!==a&&a[t+e])continue;const o=new Map;for(let n=0;n<l;n++)for(let s=0;s<u;s++){const l=t+e+(n-c)*r+s-d;if(a&&!a[l])continue;const u=i[l];o.set(u,o.has(u)?o.get(u)+1:1)}if(0===o.size)continue;let m=0,v=0,y=p?0:h+1;for(const t of o.keys())v=o.get(t),p===v>y&&(y=v,m=t);a?(f[t+e]=m,g[t+e]=o.size):s[t+e]=m}}if(a)for(let m=c;m<o-c;m++){const t=m*r;for(let e=d;e<r-d;e++)if(g[t+e]){if(n&&a[t+e])continue;s[t+e]=f[t+e],a[t+e]=255}}}function d(t,e){var n,i;const{mask:a}=t,{fillNoDataOnly:d}=e;if(d&&!a)return t;const{pixels:p,width:h,height:f,bandMasks:g,pixelType:m}=t,v=p.length,y=h*f,w=[],{kernelRows:k,kernelCols:b,statisticsType:x,mirrorEdges:B}=e;if(d&&!a)return t;const T=null!==(n=e.outputPixelType)&&void 0!==n?n:m,A=[];for(let S=0;S<v;S++){var D,I;const t=p[S],n=r.default.createEmptyBand(T,y);d&&n.set(t);const i=null!==(D=null===g||void 0===g?void 0:g[S])&&void 0!==D?D:a,m=null!==(I=null===i||void 0===i?void 0:i.slice())&&void 0!==I?I:null,v={band:t,width:h,height:f,mask:m,outBand:n};switch(x){case"min":case"max":l(v,e);break;case"mean":case"stddev":s(v,e);break;case"median":u(v,e);break;case"majority":case"minority":c(v,e)}B&&!d&&(0,o.e)(n,h,f,k,b),w.push(n),m&&A.push(m)}let M=null!==(i=A[0])&&void 0!==i?i:a;A.length!==v&&(A.length=0),v>1&&(null===g||void 0===g?void 0:g.length)&&(M=r.default.combineBandMasks(g));const N=new r.default({pixelType:T,width:h,height:f,pixels:w,bandMasks:g&&A.length?A:null,mask:M});return N.updateStatistics(),N}}}]);
//# sourceMappingURL=90586.f43fcf43.chunk.js.map