"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[20229,41882,9e4],{20229:(e,t,i)=>{i.r(t),i.d(t,{default:()=>p});var o,n=i(35143),r=i(42553),s=i(46053),a=(i(81806),i(76460),i(47249),i(85842));function l(e){return e=Number(e),isNaN(e)?void 0:e}let d=o=class extends r.A{constructor(){super(...arguments),this.name=null,this.minWavelength=void 0,this.maxWavelength=void 0,this.radianceBias=void 0,this.radianceGain=void 0,this.reflectanceBias=void 0,this.reflectanceGain=void 0,this.solarIrradiance=void 0}clone(){return new o({name:this.name,minWavelength:this.minWavelength,maxWavelength:this.maxWavelength,radianceBias:this.radianceBias,radianceGain:this.radianceGain,reflectanceBias:this.reflectanceBias,reflectanceGain:this.reflectanceGain,solarIrradiance:this.solarIrradiance})}};(0,n._)([(0,s.MZ)({json:{name:"BandName",write:!0}})],d.prototype,"name",void 0),(0,n._)([(0,s.MZ)({json:{name:"WavelengthMin",read:{reader:l},write:!0}})],d.prototype,"minWavelength",void 0),(0,n._)([(0,s.MZ)({json:{name:"WavelengthMax",read:{reader:l},write:!0}})],d.prototype,"maxWavelength",void 0),(0,n._)([(0,s.MZ)({json:{name:"RadianceBias",read:{reader:l},write:!0}})],d.prototype,"radianceBias",void 0),(0,n._)([(0,s.MZ)({json:{name:"RadianceGain",read:{reader:l},write:!0}})],d.prototype,"radianceGain",void 0),(0,n._)([(0,s.MZ)({json:{name:"ReflectanceBias",read:{reader:l},write:!0}})],d.prototype,"reflectanceBias",void 0),(0,n._)([(0,s.MZ)({json:{name:"ReflectanceGain",read:{reader:l},write:!0}})],d.prototype,"reflectanceGain",void 0),(0,n._)([(0,s.MZ)({json:{name:"SolarIrradiance",read:{reader:l},write:!0}})],d.prototype,"solarIrradiance",void 0),d=o=(0,n._)([(0,a.$)("esri.layers.support.RasterBandInfo")],d);const p=d},41882:(e,t,i)=>{i.r(t),i.d(t,{default:()=>v});var o,n=i(35143),r=i(42553),s=i(53084),a=i(46053),l=(i(81806),i(76460),i(85842)),d=i(76797),p=i(13312),u=i(20229),h=i(58646),c=i(9e4),m=i(49653);let y=o=class extends r.A{constructor(e){super(e),this.attributeTable=null,this.bandCount=null,this.colormap=null,this.extent=null,this.format=void 0,this.height=null,this.width=null,this.histograms=null,this.keyProperties={},this.multidimensionalInfo=null,this.noDataValue=null,this.pixelSize=null,this.pixelType=null,this.isPseudoSpatialReference=!1,this.spatialReference=null,this.statistics=null,this.storageInfo=null,this.transform=null}get bandInfos(){const e=this.keyProperties.BandProperties,{bandCount:t}=this;if(null===e||void 0===e||!e.length||e.length<t){const e=[];for(let i=1;i<=t;i++)e.push(new u.default({name:"band_"+i}));return e}const i=e.map((e=>u.default.fromJSON(e)));for(let o=0;o<i.length;o++)i[o].name=i[o].name||"band_"+(o+1);return i}get dataType(){var e,t;const i=null!==(e=null===(t=this.keyProperties)||void 0===t||null===(t=t.DataType)||void 0===t?void 0:t.toLowerCase())&&void 0!==e?e:"generic";return"stdtime"===i?"standard-time":i}get nativeExtent(){return this._get("nativeExtent")||this.extent}set nativeExtent(e){e&&this._set("nativeExtent",e)}get nativePixelSize(){if(null==this.transform||!this.transform.affectsPixelSize)return this.pixelSize;const e=this.nativeExtent;return{x:e.width/this.width,y:e.height/this.height}}get hasMultidimensionalTranspose(){var e;return!(null===(e=this.storageInfo)||void 0===e||!e.transposeInfo)}get sensorInfo(){var e;if(null!==(e=this.keyProperties)&&void 0!==e&&e.SensorName)return c.default.fromJSON(this.keyProperties)}clone(){return new o({attributeTable:(0,s.clone)(this.attributeTable),bandCount:this.bandCount,colormap:(0,s.clone)(this.colormap),extent:(0,s.clone)(this.extent),format:this.format,height:this.height,width:this.width,histograms:(0,s.clone)(this.histograms),keyProperties:(0,s.clone)(this.keyProperties),multidimensionalInfo:(0,s.clone)(this.multidimensionalInfo),noDataValue:this.noDataValue,pixelSize:(0,s.clone)(this.pixelSize),pixelType:this.pixelType,isPseudoSpatialReference:this.isPseudoSpatialReference,spatialReference:(0,s.clone)(this.spatialReference),statistics:(0,s.clone)(this.statistics),storageInfo:(0,s.clone)(this.storageInfo),transform:(0,s.clone)(this.transform)})}};(0,n._)([(0,a.MZ)({json:{write:!0}})],y.prototype,"attributeTable",void 0),(0,n._)([(0,a.MZ)({json:{write:!0}})],y.prototype,"bandCount",void 0),(0,n._)([(0,a.MZ)({readOnly:!0})],y.prototype,"bandInfos",null),(0,n._)([(0,a.MZ)({json:{write:!0}})],y.prototype,"colormap",void 0),(0,n._)([(0,a.MZ)({type:String,readOnly:!0})],y.prototype,"dataType",null),(0,n._)([(0,a.MZ)({type:d.default,json:{write:!0}})],y.prototype,"extent",void 0),(0,n._)([(0,a.MZ)({type:d.default,json:{write:!0}})],y.prototype,"nativeExtent",null),(0,n._)([(0,a.MZ)({json:{write:!0}})],y.prototype,"nativePixelSize",null),(0,n._)([(0,a.MZ)({json:{write:!0}})],y.prototype,"format",void 0),(0,n._)([(0,a.MZ)({json:{write:!0}})],y.prototype,"height",void 0),(0,n._)([(0,a.MZ)({json:{write:!0}})],y.prototype,"width",void 0),(0,n._)([(0,a.MZ)({json:{write:!0}})],y.prototype,"hasMultidimensionalTranspose",null),(0,n._)([(0,a.MZ)({json:{write:!0}})],y.prototype,"histograms",void 0),(0,n._)([(0,a.MZ)({json:{write:!0}})],y.prototype,"keyProperties",void 0),(0,n._)([(0,a.MZ)({json:{write:!0}})],y.prototype,"multidimensionalInfo",void 0),(0,n._)([(0,a.MZ)({json:{write:!0}})],y.prototype,"noDataValue",void 0),(0,n._)([(0,a.MZ)({json:{write:!0}})],y.prototype,"pixelSize",void 0),(0,n._)([(0,a.MZ)({type:h.e8.apiValues,json:{write:!0}})],y.prototype,"pixelType",void 0),(0,n._)([(0,a.MZ)()],y.prototype,"isPseudoSpatialReference",void 0),(0,n._)([(0,a.MZ)({readOnly:!0})],y.prototype,"sensorInfo",null),(0,n._)([(0,a.MZ)({type:p.default,json:{write:!0}})],y.prototype,"spatialReference",void 0),(0,n._)([(0,a.MZ)({json:{write:!0}})],y.prototype,"statistics",void 0),(0,n._)([(0,a.MZ)({type:m.A,json:{write:!0}})],y.prototype,"storageInfo",void 0),(0,n._)([(0,a.MZ)({json:{write:!0}})],y.prototype,"transform",void 0),y=o=(0,n._)([(0,l.$)("esri.layers.support.RasterInfo")],y);const v=y},49653:(e,t,i)=>{i.d(t,{A:()=>u});var o,n=i(35143),r=i(42553),s=i(53084),a=i(46053),l=(i(81806),i(76460),i(85842)),d=i(19247);let p=o=class extends r.A{constructor(){super(...arguments),this.blockWidth=void 0,this.blockHeight=void 0,this.compression=null,this.origin=null,this.firstPyramidLevel=null,this.maximumPyramidLevel=null,this.pyramidScalingFactor=2,this.pyramidBlockWidth=null,this.pyramidBlockHeight=null,this.isVirtualTileInfo=!1,this.tileInfo=null,this.transposeInfo=null,this.blockBoundary=null}clone(){return new o({blockWidth:this.blockWidth,blockHeight:this.blockHeight,compression:this.compression,origin:(0,s.clone)(this.origin),firstPyramidLevel:this.firstPyramidLevel,maximumPyramidLevel:this.maximumPyramidLevel,pyramidResolutions:(0,s.clone)(this.pyramidResolutions),pyramidScalingFactor:this.pyramidScalingFactor,pyramidBlockWidth:this.pyramidBlockWidth,pyramidBlockHeight:this.pyramidBlockHeight,isVirtualTileInfo:this.isVirtualTileInfo,tileInfo:(0,s.clone)(this.tileInfo),transposeInfo:(0,s.clone)(this.transposeInfo),blockBoundary:(0,s.clone)(this.blockBoundary)})}};(0,n._)([(0,a.MZ)({type:Number,json:{write:!0}})],p.prototype,"blockWidth",void 0),(0,n._)([(0,a.MZ)({type:Number,json:{write:!0}})],p.prototype,"blockHeight",void 0),(0,n._)([(0,a.MZ)({type:String,json:{write:!0}})],p.prototype,"compression",void 0),(0,n._)([(0,a.MZ)({type:d.default,json:{write:!0}})],p.prototype,"origin",void 0),(0,n._)([(0,a.MZ)({type:Number,json:{write:!0}})],p.prototype,"firstPyramidLevel",void 0),(0,n._)([(0,a.MZ)({type:Number,json:{write:!0}})],p.prototype,"maximumPyramidLevel",void 0),(0,n._)([(0,a.MZ)({json:{write:!0}})],p.prototype,"pyramidResolutions",void 0),(0,n._)([(0,a.MZ)({type:Number,json:{write:!0}})],p.prototype,"pyramidScalingFactor",void 0),(0,n._)([(0,a.MZ)({type:Number,json:{write:!0}})],p.prototype,"pyramidBlockWidth",void 0),(0,n._)([(0,a.MZ)({type:Number,json:{write:!0}})],p.prototype,"pyramidBlockHeight",void 0),(0,n._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],p.prototype,"isVirtualTileInfo",void 0),(0,n._)([(0,a.MZ)({json:{write:!0}})],p.prototype,"tileInfo",void 0),(0,n._)([(0,a.MZ)()],p.prototype,"transposeInfo",void 0),(0,n._)([(0,a.MZ)({json:{write:!0}})],p.prototype,"blockBoundary",void 0),p=o=(0,n._)([(0,l.$)("esri.layers.support.RasterStorageInfo")],p);const u=p},58646:(e,t,i)=>{i.d(t,{SZ:()=>n,e8:()=>s,hm:()=>r});var o=i(45802);const n=(0,o.O)()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),r=(0,o.O)()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),s=(0,o.O)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"})},9e4:(e,t,i)=>{i.r(t),i.d(t,{default:()=>h});var o,n=i(35143),r=i(42553),s=i(46053),a=(i(81806),i(76460),i(47249),i(28379)),l=i(85842),d=i(17707);function p(e){return e=Number(e),isNaN(e)?void 0:e}let u=o=class extends r.A{constructor(){super(...arguments),this.acquisitionDate=void 0,this.cloudCover=void 0,this.productName=void 0,this.sensorName=null,this.sensorAzimuth=void 0,this.sensorElevation=void 0,this.sunAzimuth=void 0,this.sunElevation=void 0}readAcquisitionDate(e){return new Date(e)}writeAcquisitionDate(e,t){t.AcquisitionDate=e.getTime()}clone(){return new o({acquisitionDate:this.acquisitionDate,cloudCover:this.cloudCover,productName:this.productName,sensorName:this.sensorName,sensorAzimuth:this.sensorAzimuth,sensorElevation:this.sensorElevation,sunAzimuth:this.sunAzimuth,sunElevation:this.sunElevation})}};(0,n._)([(0,s.MZ)({type:Date,json:{name:"AcquisitionDate",write:!0}})],u.prototype,"acquisitionDate",void 0),(0,n._)([(0,a.w)("acquisitionDate")],u.prototype,"readAcquisitionDate",null),(0,n._)([(0,d.K)("acquisitionDate")],u.prototype,"writeAcquisitionDate",null),(0,n._)([(0,s.MZ)({json:{name:"CloudCover",read:{reader:p},write:!0}})],u.prototype,"cloudCover",void 0),(0,n._)([(0,s.MZ)({json:{name:"ProductName",write:!0}})],u.prototype,"productName",void 0),(0,n._)([(0,s.MZ)({json:{name:"SensorName",write:!0}})],u.prototype,"sensorName",void 0),(0,n._)([(0,s.MZ)({json:{name:"SensorAzimuth",read:{reader:p},write:!0}})],u.prototype,"sensorAzimuth",void 0),(0,n._)([(0,s.MZ)({json:{name:"SensorElevation",read:{reader:p},write:!0}})],u.prototype,"sensorElevation",void 0),(0,n._)([(0,s.MZ)({json:{name:"SunAzimuth",read:{reader:p},write:!0}})],u.prototype,"sunAzimuth",void 0),(0,n._)([(0,s.MZ)({json:{name:"SunElevation",read:{reader:p},write:!0}})],u.prototype,"sunElevation",void 0),u=o=(0,n._)([(0,l.$)("esri.layers.support.RasterSensorInfo")],u);const h=u}}]);
//# sourceMappingURL=41882.860adbe6.chunk.js.map