"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[15208],{15208:(e,t,i)=>{i.d(t,{default:()=>d});var o=i(39356),r=i(18690),a=i(76460),n=i(50346),s=i(65215),l=i(97572),u=i(19562);class d{constructor(e){this.viewModel=e,this.createFootprints=async e=>{await(0,n.waitTick)(e);const{coveragePolygons:t,currentBestFeature:i,isAdditionalCoverageVisible:r}=this.viewModel;for(const a of t)(null===a||void 0===a?void 0:a.imageID)===i.attributes.objectId?this.viewModel.bestFeatureFootprint=new o.default({attributes:{imageID:null===a||void 0===a?void 0:a.imageID},geometry:a,symbol:u.Fz,visible:!1}):this.viewModel.additionalFootprints.push(new o.default({attributes:{imageID:null===a||void 0===a?void 0:a.imageID},geometry:a,symbol:u.P1.clone(),visible:r}))},this.updateFootprint=async(e,t)=>{const{activeViewer:i,currentBestFeature:l,currentCoverageVisible:d,footprintExtent:c}=this.viewModel,v=null===i||void 0===i?void 0:i.imageSize;if(l&&v&&c)try{const i=await this.viewModel.getMapPoint(e,{feature:l,mode:"default",imageSize:v});(0,n.throwIfAborted)(t);const a=i.filter(r.Ru);if(!a.length)return;const c=[a.map((e=>{let{x:t,y:i}=e;return[t,i,1]}))];c[0].push(c[0][0]);const g=new s.default({rings:c,spatialReference:a[0].spatialReference});this.viewModel.updateCurrentCoveragePolygon(new o.default({geometry:g,attributes:{imageID:l.attributes.objectId},symbol:u.Fz,visible:d}))}catch(g){(0,n.isAbortError)(g)||a.A.getLogger(this.viewModel).error("update-footprint",g)}else this.viewModel.updateCurrentCoveragePolygon(null)},this.updateFootprintPanorama=async(e,t)=>{const{horizontalFieldOfView:i,pitch:r,verticalFieldOfView:a,yaw:d}=e,{activeViewer:c,currentBestFeature:v,currentCoverageVisible:g,footprintExtent:p}=this.viewModel,h=null===c||void 0===c?void 0:c.imageSize;if(!v||!h||!p)return void this.viewModel.updateCurrentCoveragePolygon(null);const{cameraPitch:f,objectId:w}=v.attributes;if(r+f-a/2>180)return void this.viewModel.updateCurrentCoveragePolygon(null);let b=[];if(r+f+a/2<180)b=[[-i/2,a/2],[i/2,a/2],...r-a/2<0?[[-i/2,-a/2],[i/2,-a/2]]:[[i/2,-a/2],[-i/2,-a/2]]];else if(r+f-a/2<180&&r+f+a/2>180){b=[[-i/2,-a/2]];const e=Math.floor(i/6),t=i/e;for(let o=0;o<=e;o++)b.push([o*t-i/2,90-r]);b.push([i/2,-a/2]),r-a/2<0&&([b[0],b[b.length-1]]=[b[b.length-1],b[0]])}const m=b.map((e=>{let[t,i]=e;return(0,l._H)(d+t,r+i,h[0],h[1])})),y=await this.viewModel.getMapPoint(m,{feature:v,mode:"panorama",imageSize:h});(0,n.throwIfAborted)(t);const M=[y.map((e=>{let{x:t,y:i}=e;return[t,i,1]}))];M[0].push(M[0][0]);const C=new s.default({rings:M,spatialReference:y[0].spatialReference});this.viewModel.updateCurrentCoveragePolygon(new o.default({geometry:C,attributes:{imageID:w},symbol:u.Fz.clone(),visible:g}))}}}}}]);
//# sourceMappingURL=15208.889bb35b.chunk.js.map