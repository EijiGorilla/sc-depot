"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[30617],{30617:(a,e,t)=>{t.r(e),t.d(e,{default:()=>y});var r=t(89379),s=t(53986),i=t(50076),l=t(53430),n=t(4414),u=t(28383),d=t(42633),m=t(11563);const o=["layer"],c=["layerAdapter"],p=l.numericTypes;async function y(a){const e=await async function(a){if(null===a||void 0===a||!a.layer||!a.view)throw new i.default("heatmap-statistics:missing-parameters","'layer' and 'view' parameters are required");const e=[m.mb.CSVLayer,m.mb.FeatureLayer,m.mb.GeoJSONLayer,m.mb.KnowledgeGraphSublayer,m.mb.OGCFeatureLayer,m.mb.OrientedImageryLayer,m.mb.ParquetLayer,m.mb.StreamLayer,m.mb.WFSLayer],{layer:t}=a,l=(0,s.A)(a,o),c=(0,m.Jg)(t,e);if(!c)throw new i.default("heatmap-statistics:invalid-parameters","'layer' must be one of these types: "+(0,m.Ho)(e).join(", "));const y=(0,r.A)({layerAdapter:c},l);y.radius=null==y.radius?null==y.blurRadius?18:(0,n.zp)(y.blurRadius):y.radius;const b=null!=y.signal?{signal:y.signal}:null;await c.load(b);const f=y.field,h=f?c.getField(f):null,w=await(0,d.EG)({field:f}),g=(0,u.MH)(c,w,"heatmap-statistics:invalid-parameters");if(g)throw g;if(h){const a=(0,u.a)(c,h,"heatmap-statistics:invalid-parameters",p);if(a)throw a}return y}(a),{layerAdapter:t}=e,l=(0,s.A)(e,c);return t.heatmapStatistics(l)}}}]);
//# sourceMappingURL=30617.2db4bcca.chunk.js.map