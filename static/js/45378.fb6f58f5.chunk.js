"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[3428,45378,48630,50410,82615,97200],{3428:(t,e,o)=>{o.r(e),o.d(e,{default:()=>d});var r=o(35143),i=o(69539),s=o(42553),a=o(46053),n=o(40565),l=(o(81806),o(47249),o(85842));let p=class extends s.A{constructor(){super(...arguments),this.value=null,this.label=null,this.color=null}};(0,r._)([(0,a.MZ)({type:Number,json:{write:{isRequired:!0}}})],p.prototype,"value",void 0),(0,r._)([(0,a.MZ)({type:String,json:{write:!0}})],p.prototype,"label",void 0),(0,r._)([(0,a.MZ)({type:i.default,json:{type:[n.jz],write:{isRequired:!0}}})],p.prototype,"color",void 0),p=(0,r._)([(0,l.$)("esri.renderers.support.ColormapInfo")],p);const d=p},45378:(t,e,o)=>{o.r(e),o.d(e,{default:()=>c});var r=o(35143),i=o(69098),s=o(42553),a=o(46053),n=o(40565),l=(o(81806),o(47249),o(6409)),p=o(85842),d=o(88205);let u=class extends(i.A.ClonableMixin(s.A)){constructor(t){super(t),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};(0,r._)([(0,a.MZ)({type:String,json:{write:{isRequired:!0}}})],u.prototype,"name",void 0),(0,r._)([(0,a.MZ)({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),(0,l.e)({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],u.prototype,"method",void 0),(0,r._)([(0,a.MZ)({type:String,json:{write:{isRequired:!0}}})],u.prototype,"value",void 0),(0,r._)([(0,a.MZ)({type:[n.jz],json:{write:{isRequired:!0}}})],u.prototype,"bandIds",void 0),(0,r._)([(0,a.MZ)({types:d.uy,json:{write:!0,origins:{"web-scene":{types:d.Gj,write:{overridePolicy:t=>({enabled:t&&"vector-field"!==t.type&&"flow"!==t.type})}}}}})],u.prototype,"renderer",void 0),u=(0,r._)([(0,p.$)("esri.renderers.support.RasterPresetRenderer")],u);const c=u},48630:(t,e,o)=>{o.r(e),o.d(e,{default:()=>w});var r,i=o(35143),s=o(63241),a=o(42553),n=o(53084),l=o(76460),p=o(46053),d=(o(81806),o(6409)),u=o(28379),c=o(85842),m=o(17707),h=o(74916),y=o(22471);let v=r=class extends a.A{constructor(t){super(t),this.colorRamp=null,this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.maxPercent=null,this.minPercent=null,this.numberOfStandardDeviations=null,this.outputMax=null,this.outputMin=null,this.sigmoidStrengthLevel=null,this.histograms=null,this.useGamma=!1,this.stretchType="none",this.type="raster-stretch"}readColorRamp(t){if(t)return(0,y.r)(t)}get statistics(){return this._get("statistics")}set statistics(t){(0,s.Lx)(l.A.getLogger(this),"statistics",{replacement:"customStatistics",version:"4.31",warnOnce:!0}),this._set("statistics",t)}get customStatistics(){const t=this.statistics;return t&&Array.isArray(t[0])?t.map((t=>({min:t[0],max:t[1],avg:t[2],stddev:t[3]}))):t}set customStatistics(t){this._set("statistics",null===t||void 0===t?void 0:t.map((t=>{var e,o;return[t.min,t.max,null!==(e=t.avg)&&void 0!==e?e:0,null!==(o=t.stddev)&&void 0!==o?o:1]})))}readCustomStatistics(t){return null===t||void 0===t?void 0:t.map((t=>({min:t[0],max:t[1],avg:t[2],stddev:t[3]})))}writeCustomStatistics(t,e,o){(null===t||void 0===t?void 0:t.length)&&(e[o]=t.map((t=>{var e,o;return[t.min,t.max,null!==(e=t.avg)&&void 0!==e?e:0,null!==(o=t.stddev)&&void 0!==o?o:1]})))}readStretchType(t,e){let o=e.stretchType;return"number"==typeof o&&(o=h.x[o]),h.u.read(o)}clone(){const t=new r({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,gamma:(0,n.clone)(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,colorRamp:(0,n.clone)(this.colorRamp),histograms:(0,n.clone)(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment});return t._set("statistics",(0,n.clone)(this.statistics)),t}};(0,i._)([(0,p.MZ)({types:y.g,json:{write:!0}})],v.prototype,"colorRamp",void 0),(0,i._)([(0,u.w)("colorRamp")],v.prototype,"readColorRamp",null),(0,i._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],v.prototype,"computeGamma",void 0),(0,i._)([(0,p.MZ)({type:Boolean,json:{write:{target:"dra"},read:{source:"dra"}}})],v.prototype,"dynamicRangeAdjustment",void 0),(0,i._)([(0,p.MZ)({type:[Number],json:{write:!0}})],v.prototype,"gamma",void 0),(0,i._)([(0,p.MZ)({type:Number,json:{write:!0}})],v.prototype,"maxPercent",void 0),(0,i._)([(0,p.MZ)({type:Number,json:{write:!0}})],v.prototype,"minPercent",void 0),(0,i._)([(0,p.MZ)({type:Number,json:{write:!0}})],v.prototype,"numberOfStandardDeviations",void 0),(0,i._)([(0,p.MZ)({type:Number,json:{read:{source:"max"},write:{target:"max"}}})],v.prototype,"outputMax",void 0),(0,i._)([(0,p.MZ)({type:Number,json:{read:{source:"min"},write:{target:"min"}}})],v.prototype,"outputMin",void 0),(0,i._)([(0,p.MZ)({type:Number,json:{write:!0}})],v.prototype,"sigmoidStrengthLevel",void 0),(0,i._)([(0,p.MZ)({})],v.prototype,"statistics",null),(0,i._)([(0,p.MZ)()],v.prototype,"histograms",void 0),(0,i._)([(0,p.MZ)({json:{type:[[Number]],name:"statistics",write:!0}})],v.prototype,"customStatistics",null),(0,i._)([(0,u.w)("customStatistics")],v.prototype,"readCustomStatistics",null),(0,i._)([(0,m.K)("customStatistics")],v.prototype,"writeCustomStatistics",null),(0,i._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],v.prototype,"useGamma",void 0),(0,i._)([(0,p.MZ)({type:h.u.apiValues,json:{type:h.u.jsonValues,write:h.u.write}})],v.prototype,"stretchType",void 0),(0,i._)([(0,u.w)("stretchType",["stretchType"])],v.prototype,"readStretchType",null),(0,i._)([(0,d.e)({rasterStretch:"raster-stretch"})],v.prototype,"type",void 0),v=r=(0,i._)([(0,c.$)("esri.renderers.RasterStretchRenderer")],v);const w=v},50410:(t,e,o)=>{o.r(e),o.d(e,{default:()=>c});var r,i=o(35143),s=o(42553),a=o(46053),n=(o(81806),o(76460),o(47249),o(6409)),l=o(85842),p=o(3428),d=o(93187);let u=r=class extends s.A{constructor(t){super(t),this.colormapInfos=null,this.type="raster-colormap"}static createFromColormap(t,e){if(!t)return null;const o=5===t[0].length,i=[...t].sort(((t,e)=>t[0]-e[0])).map((t=>{var r;return p.default.fromJSON({value:t[0],color:o?t.slice(1,5):t.slice(1,4).concat([255]),label:e?null!==(r=e[t[0]])&&void 0!==r?r:"":t[0]})}));return new r({colormapInfos:i})}static createFromColorramp(t){const e=(0,d.R8)(t);return r.createFromColormap(e)}clone(){return new r({colormapInfos:this.colormapInfos.map((t=>t.toJSON()))})}extractColormap(){return this.colormapInfos.map((t=>{let{value:e,color:o}=t;return[e,o.r,o.g,o.b,o.a>1?o.a:255*o.a&255]})).sort(((t,e)=>t[0]-e[0]))}};(0,i._)([(0,a.MZ)({type:[p.default],json:{write:{isRequired:!0}}})],u.prototype,"colormapInfos",void 0),(0,i._)([(0,n.e)({rasterColormap:"raster-colormap"}),(0,a.MZ)({json:{write:{isRequired:!0}}})],u.prototype,"type",void 0),u=r=(0,i._)([(0,l.$)("esri.renderers.RasterColormapRenderer")],u);const c=u},74916:(t,e,o)=>{o.d(e,{u:()=>r,x:()=>i});const r=new(o(45802).J)({none:"none",standardDeviation:"standard-deviation",histogramEqualization:"histogram-equalization",minMax:"min-max",percentClip:"percent-clip",sigmoid:"sigmoid"}),i={0:"none",3:"standardDeviation",4:"histogramEqualization",5:"minMax",6:"percentClip",9:"sigmoid"}},82615:(t,e,o)=>{o.r(e),o.d(e,{default:()=>m});var r,i=o(35143),s=o(42553),a=o(53084),n=o(46053),l=(o(81806),o(76460),o(6409)),p=o(28379),d=o(85842),u=o(22471);let c=r=class extends s.A{constructor(t){super(t),this.altitude=45,this.azimuth=315,this.colorRamp=null,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.scalingType="none",this.type="raster-shaded-relief",this.zFactor=1}readColorRamp(t){return(0,u.r)(t)}clone(){return new r({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,scalingType:this.scalingType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,colorRamp:(0,a.clone)(this.colorRamp)})}};(0,i._)([(0,n.MZ)({type:Number,json:{write:{isRequired:!0}}})],c.prototype,"altitude",void 0),(0,i._)([(0,n.MZ)({type:Number,json:{write:{isRequired:!0}}})],c.prototype,"azimuth",void 0),(0,i._)([(0,n.MZ)({types:u.g,json:{write:!0}})],c.prototype,"colorRamp",void 0),(0,i._)([(0,p.w)("colorRamp")],c.prototype,"readColorRamp",null),(0,i._)([(0,n.MZ)({type:["traditional","multi-directional"],json:{write:{isRequired:!0}}})],c.prototype,"hillshadeType",void 0),(0,i._)([(0,n.MZ)({type:Number,json:{write:!0}})],c.prototype,"pixelSizePower",void 0),(0,i._)([(0,n.MZ)({type:Number,json:{write:!0}})],c.prototype,"pixelSizeFactor",void 0),(0,i._)([(0,n.MZ)({type:["none","adjusted"],json:{write:{isRequired:!0}}})],c.prototype,"scalingType",void 0),(0,i._)([(0,l.e)({rasterShadedRelief:"raster-shaded-relief"}),(0,n.MZ)({json:{write:{isRequired:!0}}})],c.prototype,"type",void 0),(0,i._)([(0,n.MZ)({type:Number,json:{write:{isRequired:!0}}})],c.prototype,"zFactor",void 0),c=r=(0,i._)([(0,d.$)("esri.renderers.RasterShadedReliefRenderer")],c);const m=c},88205:(t,e,o)=>{o.d(e,{Gj:()=>m,LF:()=>y,uy:()=>c});var r=o(89379),i=o(62754),s=o(63844),a=o(97200),n=o(50410),l=o(82615),p=o(48630),d=o(84596),u=o(6745);const c={key:"type",base:null,typeMap:{"unique-value":d.default,"class-breaks":s.default,"raster-colormap":n.default,"raster-stretch":p.default,"vector-field":u.default,"raster-shaded-relief":l.default,flow:a.default}},m=(0,r.A)((0,r.A)({},c),{},{typeMap:(0,r.A)({},c.typeMap)});delete m.typeMap["vector-field"],delete m.typeMap.flow;const h={uniqueValue:d.default,classBreaks:s.default,rasterStretch:p.default,rasterColormap:n.default,vectorField:u.default,rasterShadedRelief:l.default,flowRenderer:a.default};function y(t,e){if(!t)return null;if("classBreaks"===t.type&&t.classificationMethod){const e=t.authoringInfo||{classificationMethod:""};e.classificationMethod=t.classificationMethod,t.authoringInfo=e}"vectorField"===t.type&&t.visualVariables&&!Array.isArray(t.visualVariables)&&(t.visualVariables=[t.visualVariables]);const o=(r=t)&&h[r.type]||null;var r;if(o){const r=new o;return r.read(t,e),r}return null!==e&&void 0!==e&&e.messages&&t&&e.messages.push(new i.A("renderer:unsupported","Renderers of type '"+(t.type||"unknown")+"' are not supported",{definition:t,context:e})),null}},97200:(t,e,o)=>{o.r(e),o.d(e,{default:()=>w});var r,i=o(35143),s=o(69539),a=o(45802),n=o(42553),l=o(76931),p=o(46053),d=(o(81806),o(76460),o(47249),o(6409)),u=o(85842),c=o(37287),m=o(9922),h=o(84563);const y=new a.J({flow_from:"flow-from",flow_to:"flow-to"});let v=r=class extends((0,c.h)(n.A)){constructor(t){super(t),this.density=.8,this.color=new s.default([255,255,255,1]),this.maxPathLength=200,this.trailWidth=1.5,this.flowSpeed=10,this.trailLength=100,this.smoothing=0,this.flowRepresentation="flow-from",this.type="flow",this.authoringInfo=null,this.legendOptions=null,this.trailCap="butt",this.background="none"}clone(){var t,e;const{density:o,maxPathLength:i,trailWidth:s,flowSpeed:a,trailLength:n,smoothing:l,flowRepresentation:p,trailCap:d,background:u}=this,c=this.color.clone(),m=(this.visualVariables||[]).map((t=>t.clone())),h=null===(t=this.authoringInfo)||void 0===t?void 0:t.clone(),y=null===(e=this.legendOptions)||void 0===e?void 0:e.clone();return new r({density:o,color:c,maxPathLength:i,trailWidth:s,flowSpeed:a,trailLength:n,trailCap:d,background:u,smoothing:l,flowRepresentation:p,visualVariables:m,authoringInfo:h,legendOptions:y})}getSymbol(t,e){}async getSymbolAsync(t,e){}getSymbols(){return[]}};(0,i._)([(0,p.MZ)({type:Number,json:{write:!0}})],v.prototype,"density",void 0),(0,i._)([(0,p.MZ)({type:s.default,json:{write:{allowNull:!0}}})],v.prototype,"color",void 0),(0,i._)([(0,p.MZ)({type:Number,cast:l.cr,json:{write:!0}})],v.prototype,"maxPathLength",void 0),(0,i._)([(0,p.MZ)({type:Number,cast:l.cr,json:{write:!0}})],v.prototype,"trailWidth",void 0),(0,i._)([(0,p.MZ)({type:Number,json:{write:!0}})],v.prototype,"flowSpeed",void 0),(0,i._)([(0,p.MZ)({type:Number,json:{write:!0}})],v.prototype,"trailLength",void 0),(0,i._)([(0,p.MZ)({type:Number,cast:l.cr,json:{write:!1}})],v.prototype,"smoothing",void 0),(0,i._)([(0,p.MZ)({type:y.apiValues,json:{type:y.jsonValues,read:{reader:y.read},write:{writer:y.write}}})],v.prototype,"flowRepresentation",void 0),(0,i._)([(0,d.e)({flowRenderer:"flow"})],v.prototype,"type",void 0),(0,i._)([(0,p.MZ)({type:m.default,json:{write:!0}})],v.prototype,"authoringInfo",void 0),(0,i._)([(0,p.MZ)({type:h.A,json:{write:!0}})],v.prototype,"legendOptions",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:!0}})],v.prototype,"trailCap",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:!0}})],v.prototype,"background",void 0),v=r=(0,i._)([(0,u.$)("esri.renderers.FlowRenderer")],v);const w=v}}]);
//# sourceMappingURL=45378.fb6f58f5.chunk.js.map