"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[84513],{20481:(t,e,n)=>{n.d(e,{B:()=>l,GP:()=>c,ZY:()=>o,qg:()=>d});var i=n(89379),a=n(88685),r=n(38042);const s={ar:[".",","],bg:[",","\xa0"],bs:[",","."],ca:[",","."],cs:[",","\xa0"],da:[",","."],de:[",","."],"de-ch":[".","\u2019"],el:[",","."],en:[".",","],"en-au":[".",","],es:[",","."],"es-mx":[".",","],et:[",","\xa0"],fi:[",","\xa0"],fr:[",","\u202f"],"fr-ch":[",","\u202f"],he:[".",","],hi:[".",",","#,##,##0.###"],hr:[",","."],hu:[",","\xa0"],id:[",","."],it:[",","."],"it-ch":[".","\u2019"],ja:[".",","],ko:[".",","],lt:[",","\xa0"],lv:[",","\xa0"],mk:[",","."],nb:[",","\xa0"],nl:[",","."],no:[",","\xa0"],pl:[",","\xa0"],pt:[",","."],"pt-pt":[",","\xa0"],ro:[",","."],ru:[",","\xa0"],sk:[",","\xa0"],sl:[",","."],sr:[",","."],sv:[",","\xa0"],th:[".",","],tr:[",","."],uk:[",","\xa0"],vi:[",","."],zh:[".",","]};function o(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,r.JK)(),e=(t=t.toLowerCase())in s;if(!e){const n=t.split("-");n.length>1&&n[0]in s&&(t=n[0],e=!0),e||(t="en")}const[n,i,a="#,##0.###"]=s[t];return{decimal:n,group:i,pattern:a}}function c(t,e){const n=o((e=(0,i.A)({},e)).locale);e.customs=n;const a=e.pattern||n.pattern;return isNaN(t)||Math.abs(t)===1/0?null:function(t,e,n){const i=(n=n||{}).customs.group,a=n.customs.decimal,r=e.split(";"),s=r[0];if((e=r[t<0?1:0]||"-"+s).includes("%"))t*=100;else if(e.includes("\u2030"))t*=1e3;else{if(e.includes("\xa4"))throw new Error("currency notation not supported");if(e.includes("E"))throw new Error("exponential notation not supported")}const o=u,c=s.match(o);if(!c)throw new Error("unable to find a number expression in pattern: "+e);return!1===n.fractional&&(n.places=0),e.replace(o,function(t,e,n){!0===(n=n||{}).places&&(n.places=0),n.places===1/0&&(n.places=6);const i=e.split("."),a="string"==typeof n.places&&n.places.indexOf(",");let r=n.places;a?r=n.places.slice(a+1):+r>=0||(r=(i[1]||[]).length),n.round<0||(t=Number(t.toFixed(Number(r))));const s=String(Math.abs(t)).split("."),o=s[1]||"";if(i[1]||n.places){a&&(n.places=n.places.slice(0,Math.max(0,a)));const t=void 0!==n.places?n.places:i[1]&&i[1].lastIndexOf("0")+1;+t>o.length&&(s[1]=o.padEnd(Number(t),"0")),+r<o.length&&(s[1]=o.slice(0,Math.max(0,Number(r))))}else s[1]&&s.pop();const c=i[0].replace(",","");let u=c.indexOf("0");-1!==u&&(u=c.length-u,u>s[0].length&&(s[0]=s[0].padStart(u,"0")),c.includes("#")||(s[0]=s[0].slice(-u)));let l,d,p=i[0].lastIndexOf(",");if(-1!==p){l=i[0].length-p-1;const t=i[0].slice(0,p);p=t.lastIndexOf(","),-1!==p&&(d=t.length-p-1)}const h=[];for(let g=s[0];g;){const t=g.length-l;h.push(t>0?g.slice(Math.max(0,t)):g),g=t>0?g.slice(0,t):"",d&&(l=d,d=void 0)}return s[0]=h.reverse().join(n.group||","),s.join(n.decimal||".")}(t,c[0],{decimal:a,group:i,places:n.places,round:n.round}))}(t,a,e)}const u=/[#0,]*[#0](?:\.0*#*)?/;function l(t){const e=o((t=t||{}).locale),n=t.pattern||e.pattern,i=e.group,r=e.decimal;let s=1;if(n.includes("%"))s/=100;else if(n.includes("\u2030"))s/=1e3;else if(n.includes("\xa4"))throw new Error("currency notation not supported");const c=n.split(";");1===c.length&&c.push("-"+c[0]);const l=h(c,(e=>(e="(?:"+(0,a.Cj)(e,".")+")").replace(u,(e=>{const n={signed:!1,separator:t.strict?i:[i,""],fractional:t.fractional,decimal:r,exponent:!1},a=e.split(".");let o=t.places;1===a.length&&1!==s&&(a[1]="###"),1===a.length||0===o?n.fractional=!1:(void 0===o&&(o=t.pattern?a[1].lastIndexOf("0")+1:1/0),o&&null==t.fractional&&(n.fractional=!0),!t.places&&+o<a[1].length&&(o+=","+a[1].length),n.places=o);const c=a[0].split(",");return c.length>1&&(n.groupSize=c.pop().length,c.length>1&&(n.groupSize2=c.pop().length)),"("+function(t){"places"in(t=t||{})||(t.places=1/0),"string"!=typeof t.decimal&&(t.decimal="."),"fractional"in t&&!String(t.places).startsWith("0")||(t.fractional=[!0,!1]),"exponent"in t||(t.exponent=[!0,!1]),"eSigned"in t||(t.eSigned=[!0,!1]);const e=p(t),n=h(t.fractional,(e=>{let n="";return e&&0!==t.places&&(n="\\"+t.decimal,t.places===1/0?n="(?:"+n+"\\d+)?":n+="\\d{"+t.places+"}"),n}),!0);let i=e+n;return n&&(i="(?:(?:"+i+")|(?:"+n+"))"),i+h(t.exponent,(e=>e?"([eE]"+p({signed:t.eSigned})+")":""))}(n)+")"}))),!0);return{regexp:l.replaceAll(/[\xa0 ]/g,"[\\s\\xa0]"),group:i,decimal:r,factor:s}}function d(t,e){const n=l(e),i=new RegExp("^"+n.regexp+"$").exec(t);if(!i)return NaN;let a=i[1];if(!i[1]){if(!i[2])return NaN;a=i[2],n.factor*=-1}return a=a.replaceAll(new RegExp("["+n.group+"\\s\\xa0]","g"),"").replace(n.decimal,"."),Number(a)*n.factor}function p(t){return"signed"in(t=t||{})||(t.signed=[!0,!1]),"separator"in t?"groupSize"in t||(t.groupSize=3):t.separator="",h(t.signed,(t=>t?"[-+]":""),!0)+h(t.separator,(e=>{if(!e)return"(?:\\d+)";" "===(e=(0,a.Cj)(e))?e="\\s":"\xa0"===e&&(e="\\s\\xa0");const n=t.groupSize,i=t.groupSize2;if(i){const t="(?:0|[1-9]\\d{0,"+(i-1)+"}(?:["+e+"]\\d{"+i+"})*["+e+"]\\d{"+n+"})";return n-i>0?"(?:"+t+"|(?:0|[1-9]\\d{0,"+(n-1)+"}))":t}return"(?:0|[1-9]\\d{0,"+(n-1)+"}(?:["+e+"]\\d{"+n+"})*)"}),!0)}const h=(t,e,n)=>{if(!Array.isArray(t))return e(t);const i=[];for(let a=0;a<t.length;a++)i.push(e(t[a]));return g(i.join("|"),Boolean(n))},g=(t,e)=>"("+(e?"?:":"")+t+")"},36062:(t,e,n)=>{n.r(e),n.d(e,{default:()=>f});var i=n(35143),a=n(91967),r=n(50076),s=(n(81806),n(46053)),o=(n(76460),n(47249),n(85842)),c=n(58905),u=n(9624),l=n(13312),d=n(80963),p=n(45417),h=n(94982);let g=class extends a.default{constructor(t){super(t),this.conversionInfo=null,this.coordinateSegments=null,this._currentPattern=void 0,this.defaultPattern=null,this.name=null,this.viewModel=null}get currentPattern(){var t;return null!==(t=this._currentPattern||this.defaultPattern)&&void 0!==t?t:""}set currentPattern(t){this._currentPattern=t}get label(){var t;return null!==(t=this.name)&&void 0!==t?t:""}set label(t){this._overrideIfSome("label",t)}get hasDisplayProperties(){return!(!this.defaultPattern||!this.coordinateSegments)}get spatialReference(){var t,e;return"basemap"===this.name?this._viewSpatialReference:null!==(t=null===(e=this.conversionInfo)||void 0===e?void 0:e.spatialReference)&&void 0!==t?t:l.default.WGS84}set spatialReference(t){this._overrideIfSome("spatialReference",t)}get _viewSpatialReference(){var t,e;return null!==(t=null===(e=this.viewModel)||void 0===e||null===(e=e.view)||void 0===e?void 0:e.spatialReference)&&void 0!==t?t:l.default.WGS84}get _additionalCharactersPattern(){const t=this.coordinateSegments;if(!t)return null;const e=t.map((t=>t.alias)),n=this.currentPattern.replaceAll(new RegExp('["nsew'.concat(e.join(),"]"),"gi"),"").replaceAll(" ","");return new RegExp("[".concat(n,"]"),"g")}get test(){}async convert(t){var e;if(!(0,h.Ny)(t))throw new r.default("format:invalid-point","Could not convert invalid point.",{point:t});const n=null===(e=this.conversionInfo)||void 0===e?void 0:e.convert;if(n)return Promise.resolve().then((()=>n(t)));const i=await this._project(t,this.spatialReference);return{location:i,coordinate:await this._getCoordinate(i)}}getConversionStrategy(){var t,e;const n=this._viewSpatialReference;return null!==(t=this.conversionInfo)&&void 0!==t&&t.convert||null!==(e=this.viewModel)&&void 0!==e&&e.formatterAvailable||"xy"===this.name&&(n.isWebMercator||n.isWGS84)||"basemap"===this.name?"client":"server"}getDisplayCoordinate(t){if(!t)return null;if(!this.coordinateSegments||!this.currentPattern)return t;let e=this.currentPattern;const n=this._getSegmentMatches(t,!1);for(let i=this.coordinateSegments.length-1;i>=0;i--){const t=this.coordinateSegments[i];e=e.replace(t.alias,n[i])}return e}_parseUserInput(t){const{defaultPattern:e,_additionalCharactersPattern:n,coordinateSegments:i}=this;if(!e||!n)return"";let a=e.replace(n,"");t=t.replace(n,"");const r=this._getSegmentMatches(t,!0);if(i)for(let s=i.length-1;s>=0;s--){const t=i[s];a=a.replace(t.alias,r[s])}return a}_getSegmentMatches(t,e){const n=new Array,{coordinateSegments:i}=this;if(!i)return n;for(let a=0;a<i.length;a++){const r=i[a],s=t.match(r.searchPattern);if(!s){n.push("");continue}let o=s[0];if(t=t.replace(o,"").trim(),r.substitution){const t=e?r.substitution.input(o):r.substitution.output(o);t&&(o="".concat(t))}n.push(o)}return n}async reverseConvert(t){var e,n;const i=this._parseUserInput(t),a=null===(e=this.conversionInfo)||void 0===e?void 0:e.reverseConvert;let s;if(a)s=a(i);else if("xy"===this.name||"basemap"===this.name)s=(0,h.Kp)(i,this.spatialReference);else if(null!==(n=this.viewModel)&&void 0!==n&&n.formatterAvailable)switch(this.name){case"dd":case"ddm":case"dms":s=(0,c.fromLatitudeLongitude)(i,this.spatialReference);break;case"mgrs":{const t="automatic";s=(0,c.fromMgrs)(i,this.spatialReference,t);break}case"utm":{const t="latitude-band-indicators";s=(0,c.fromUtm)(i,this.spatialReference,t);break}case"usng":s=(0,c.fromUsng)(i,this.spatialReference);break;default:s=null}if(!s)throw new r.default("format:invalid-input","Could not parse input into point.",{userInput:t});return this._project(s,this._viewSpatialReference)}async _getCoordinate(t){var e,n,i;const a=null!==(e=null===(n=this.viewModel)||void 0===n||null===(n=n.view)||void 0===n?void 0:n.scale)&&void 0!==e?e:0;if(!(0,h.Ny)(t))throw new r.default("format:invalid-point","Could not transform invalid point into coordinate.",{point:t});if(null!==(i=this.viewModel)&&void 0!==i&&i.formatterAvailable||"basemap"===this.name||"xy"===this.name)switch(this.name){case"dd":case"ddm":case"dms":{const e=(0,h.pu)(a);return(0,c.toLatitudeLongitude)(t,this.name,e)}case"mgrs":return(0,c.toMgrs)(t,"automatic",5,!1);case"usng":return(0,c.toUsng)(t,5,!1);case"utm":return(0,c.toUtm)(t,"latitude-band-indicators",!0);default:return(0,h.sO)(t,a)}return(0,h.sO)(t,a)}async _project(t,e){var n,i;if((0,d.aI)(t.spatialReference,e)||!e)return t;if(null!==(n=this.viewModel)&&void 0!==n&&n.formatterAvailable&&(0,u.isLoaded)())return(0,u.project)(t,e);if(null===(i=this.viewModel)||void 0===i||!i.formatterAvailable){const n=(0,p.project)(t,e);if(null!=n)return n}return null}};(0,i._)([(0,s.MZ)()],g.prototype,"conversionInfo",void 0),(0,i._)([(0,s.MZ)()],g.prototype,"coordinateSegments",void 0),(0,i._)([(0,s.MZ)()],g.prototype,"currentPattern",null),(0,i._)([(0,s.MZ)()],g.prototype,"_currentPattern",void 0),(0,i._)([(0,s.MZ)()],g.prototype,"label",null),(0,i._)([(0,s.MZ)()],g.prototype,"defaultPattern",void 0),(0,i._)([(0,s.MZ)({readOnly:!0})],g.prototype,"hasDisplayProperties",null),(0,i._)([(0,s.MZ)()],g.prototype,"name",void 0),(0,i._)([(0,s.MZ)({type:l.default})],g.prototype,"spatialReference",null),(0,i._)([(0,s.MZ)()],g.prototype,"viewModel",void 0),(0,i._)([(0,s.MZ)({readOnly:!0})],g.prototype,"_viewSpatialReference",null),(0,i._)([(0,s.MZ)({readOnly:!0})],g.prototype,"_additionalCharactersPattern",null),g=(0,i._)([(0,o.$)("esri.widgets.CoordinateConversion.support.Format")],g);const f=g},84513:(t,e,n)=>{n.d(e,{PL:()=>c,rA:()=>d,ty:()=>p});var i=n(20481),a=n(38042),r=n(36062);const s=(0,i.ZY)().decimal,o={N:"north",S:"south",E:"east",W:"west"},c="\xb0".concat("\u200e"),u=new RegExp("-?\\d+[\\.|\\".concat(s,"]?\\d*")),l=/^[\\0]+(?=\d)/;function d(t,e){const n="ar"===(0,a.JK)(),r=t.abbreviatedDirections.north,s=t.abbreviatedDirections.south,u=t.abbreviatedDirections.east,l=t.abbreviatedDirections.west,d=(0,i.ZY)().decimal,p={[r]:"N",[s]:"S",[u]:"E",[l]:"W"},f=new RegExp("-?\\d+[\\.|\\".concat(d,"]?\\d*")),m=new RegExp("N|S|".concat(r,"|").concat(s),"i"),b=new RegExp("E|W|".concat(u,"|").concat(l),"i"),v={ddm:"Y".concat(c," A'").concat(t.abbreviatedDirections.north,", X").concat(c," B'").concat(t.abbreviatedDirections.east),dms:"Y".concat(c," A' B\"").concat(t.abbreviatedDirections.north,", X").concat(c," C' D\"").concat(t.abbreviatedDirections.east),dd:"Y".concat(c).concat(t.abbreviatedDirections.north,", X").concat(c).concat(t.abbreviatedDirections.east),xy:"X".concat(c,", Y").concat(c),basemap:"X, Y"},w={ddm:"".concat(t.abbreviatedDirections.north).concat(c,"Y 'A ,").concat(t.abbreviatedDirections.east).concat(c,"X 'B"),dms:"".concat(t.abbreviatedDirections.north).concat(c,"Y 'A \"B ,").concat(t.abbreviatedDirections.east).concat(c,"X 'C \"D"),dd:"".concat(t.abbreviatedDirections.north).concat(c,"Y ,").concat(t.abbreviatedDirections.east).concat(c,"X"),xy:"X".concat(c," ,Y").concat(c),basemap:"X ,Y"},P=new RegExp("\\d{1,2}[\\.|\\".concat(d,"]?\\d*"),"i"),x=new RegExp("\\d{1,3}[\\.|\\".concat(d,"]?\\d*"),"i");e.forEach((e=>{const{name:i}=e;if("dd"===i?e.coordinateSegments=[{alias:"Y",description:"degrees latitude",searchPattern:P,substitution:{input:t=>g(t),output:t=>h(t)}},{alias:t.abbreviatedDirections.north,description:"north/south indicator",searchPattern:m,substitution:{input:t=>p[t],output:e=>t.abbreviatedDirections[o[e]]}},{alias:"X",description:"degrees longitude",searchPattern:x,substitution:{input:t=>g(t),output:t=>h(t)}},{alias:t.abbreviatedDirections.east,description:"east/west indicator",searchPattern:b,substitution:{input:t=>p[t],output:e=>t.abbreviatedDirections[o[e]]}}]:"ddm"===i?e.coordinateSegments=[{alias:"Y",description:"degrees latitude",searchPattern:P,substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"A",description:"minutes latitude",searchPattern:P,substitution:{input:t=>g(t),output:t=>h(t)}},{alias:t.abbreviatedDirections.north,description:"north/south indicator",searchPattern:m,substitution:{input:t=>p[t],output:e=>t.abbreviatedDirections[o[e]]}},{alias:"X",description:"degrees longitude",searchPattern:x,substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"B",description:"minutes longitude",searchPattern:P,substitution:{input:t=>g(t),output:t=>h(t)}},{alias:t.abbreviatedDirections.east,description:"east/west indicator",searchPattern:b,substitution:{input:t=>p[t],output:e=>t.abbreviatedDirections[o[e]]}}]:"dms"===i?e.coordinateSegments=[{alias:"Y",description:"degrees latitude",searchPattern:P,substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"A",description:"minutes latitude",searchPattern:P,substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"B",description:"seconds latitude",searchPattern:P,substitution:{input:t=>g(t),output:t=>h(t)}},{alias:t.abbreviatedDirections.north,description:"north/south indicator",searchPattern:m,substitution:{input:t=>p[t],output:e=>t.abbreviatedDirections[o[e]]}},{alias:"X",description:"degrees longitude",searchPattern:x,substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"C",description:"minutes longitude",searchPattern:P,substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"D",description:"seconds longitude",searchPattern:P,substitution:{input:t=>g(t),output:t=>h(t)}},{alias:t.abbreviatedDirections.east,description:"east/west indicator",searchPattern:b,substitution:{input:t=>p[t],output:e=>t.abbreviatedDirections[o[e]]}}]:("xy"===e.name||"basemap"===e.name)&&(e.coordinateSegments=[{alias:"X",description:"easting",searchPattern:f,substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"Y",description:"northing",searchPattern:f,substitution:{input:t=>g(t),output:t=>h(t)}}]),(t=>null!=t&&Object.keys(v).includes(t))(i)){const t=n?w[i]:v[i];e.defaultPattern=t,e.currentPattern=t}}))}function p(){const t=new RegExp("N|S","i"),e=new RegExp("E|W","i");return[new r.default({name:"basemap",coordinateSegments:[{alias:"X",description:"easting",searchPattern:u,substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"Y",description:"northing",searchPattern:u,substitution:{input:t=>g(t),output:t=>h(t)}}],defaultPattern:"X, Y",viewModel:null}),new r.default({name:"dd",coordinateSegments:[{alias:"Y",description:"degrees latitude",searchPattern:new RegExp("\\d{1,2}[\\.|\\".concat(s,"]?\\d*(?=\\D*?[N|S])"),"i"),substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"N",description:"north/south indicator",searchPattern:t},{alias:"X",description:"degrees longitude",searchPattern:new RegExp("\\d{1,3}[\\.|\\".concat(s,"]?\\d*(?=\\D*?[E|W|])"),"i"),substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"E",description:"east/west indicator",searchPattern:e}],defaultPattern:"Y".concat(c,"N, X").concat(c,"E"),viewModel:null}),new r.default({name:"ddm",coordinateSegments:[{alias:"Y",description:"degrees latitude",searchPattern:new RegExp("\\d{1,2}(?=.*?\\s+.*?[N|S])","i"),substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"A",description:"minutes latitude",searchPattern:new RegExp("\\d{1,2}[\\.\\".concat(s,"]?\\d*(?=.*?[N|S])"),"i"),substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"N",description:"north/south indicator",searchPattern:t},{alias:"X",description:"degrees longitude",searchPattern:new RegExp("\\d{1,3}(?=\\D*?\\s+.*?[E|W])","i"),substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"B",description:"minutes longitude",searchPattern:new RegExp("\\d{1,2}[\\.|\\|".concat(s,"]?\\d*(?=.*?[E|W])"),"i"),substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"E",description:"east/west indicator",searchPattern:e}],defaultPattern:"Y".concat(c," A'N, X").concat(c," B'E"),viewModel:null}),new r.default({name:"dms",coordinateSegments:[{alias:"Y",description:"degrees latitude",searchPattern:new RegExp("\\d{1,2}(?=.*?\\s+.*?[N|S])","i"),substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"A",description:"minutes latitude",searchPattern:new RegExp("\\d{1,2}(?=.*?[N|S])","i"),substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"B",description:"seconds latitude",searchPattern:new RegExp("\\d{1,2}[\\.|\\".concat(s,"]?\\d*(?=.*?[N|S])"),"i"),substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"N",description:"north/south indicator",searchPattern:t},{alias:"X",description:"degrees longitude",searchPattern:new RegExp("\\d{1,3}(?=.*?\\s+.*?[E|W])","i"),substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"C",description:"minutes longitude",searchPattern:new RegExp("\\d{1,2}(?=.*?[E|W])","i"),substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"D",description:"seconds longitude",searchPattern:new RegExp("\\d{1,2}[\\.|\\".concat(s,"]?\\d*(?=.*?[E|W])"),"i"),substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"E",description:"east/west indicator",searchPattern:e}],defaultPattern:"Y".concat(c," A' B\"N, X").concat(c," C' D\"E"),viewModel:null}),new r.default({name:"xy",coordinateSegments:[{alias:"X",description:"longitude",searchPattern:u,substitution:{input:t=>g(t),output:t=>h(t)}},{alias:"Y",description:"latitude",searchPattern:u,substitution:{input:t=>g(t),output:t=>h(t)}}],defaultPattern:"X".concat(c,", Y").concat(c),viewModel:null}),new r.default({name:"mgrs",coordinateSegments:[{alias:"Z",description:"grid zone",searchPattern:/\d{1,2}\w|[abyz]/i},{alias:"S",description:"grid square",searchPattern:/\w{2}/},{alias:"X",description:"easting",searchPattern:/^\d{5}(?=.?\d{5}$)|^\d{4}(?=.?\d{4}$)|^\d{3}(?=.?\d{3}$)|^\d{2}(?=.?\d{2}$)|^\d(?=.?\d$)/},{alias:"Y",description:"northing",searchPattern:/^\d{1,5}/}],defaultPattern:"Z S X Y",viewModel:null}),new r.default({name:"usng",coordinateSegments:[{alias:"Z",description:"grid zone",searchPattern:/\d{1,2}\w|[abyz]/i},{alias:"S",description:"grid square",searchPattern:/\w{2}/},{alias:"X",description:"easting",searchPattern:/^\d{5}(?=.?\d{5}$)|^\d{4}(?=.?\d{4}$)|^\d{3}(?=.?\d{3}$)|^\d{2}(?=.?\d{2}$)|^\d(?=.?\d$)/},{alias:"Y",description:"northing",searchPattern:/^\d{1,5}/}],defaultPattern:"Z S X Y",viewModel:null}),new r.default({name:"utm",coordinateSegments:[{alias:"Z",description:"zone number",searchPattern:/\d{1,2}|[abyz]/i},{alias:"B",description:"latitude band",searchPattern:/^\D/},{alias:"X",description:"easting",searchPattern:/\d{1,7}(?=\s*\d{7}$)/},{alias:"Y",description:"northing",searchPattern:/\d{1,7}/}],defaultPattern:"ZB X Y",viewModel:null})]}function h(t){const e=t.match(l),n=e?e[0]:"",a=t.includes(".")?t.split(".")[1].length:0;return n+(0,i.GP)(Number(t),{pattern:"###0.###",places:a,round:-1})}function g(t){return(0,i.qg)(t)}},94982:(t,e,n)=>{n.d(e,{Kp:()=>o,Ny:()=>u,pu:()=>s,sO:()=>l,z2:()=>p});var i=n(19247),a=n(13312);function r(t,e){const n=s(e);return[t[0].toFixed(n),t[1].toFixed(n)]}function s(t){return t>=500?6:t<500&&t>=50?7:t<50&&t>=5?8:9}function o(t,e){const n=t.includes(",")?",":" ",[r,s,o]=t.split(n).map((t=>{const e=t.trim();return e?Number(e):null}));if(!c(r)||!c(s))return null;const u=new i.default({x:r,y:s,spatialReference:e||a.default.WGS84});return o&&(u.z=o,u.hasZ=!0),u}function c(t){return"number"==typeof t&&isFinite(t)}function u(t){return!!t&&c(t.x)&&c(t.y)}function l(t,e){if(t.spatialReference.isGeographic&&e){const[n,i]=r([t.x,t.y],e);return"".concat(n,", ").concat(i)}return"".concat(t.x.toFixed(3),", ").concat(t.y.toFixed(3))}const d=["dd","dms","ddm","mgrs","usng","utm"];function p(t){return d.includes(t)}}}]);
//# sourceMappingURL=84513.8171d967.chunk.js.map