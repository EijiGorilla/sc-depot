"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[75166,85685],{770:(e,n,a)=>{a.d(n,{bG:()=>i,Ty:()=>r,YJ:()=>c,Fq:()=>u,vt:()=>o});var t=a(53084),l=a(42633);class s{constructor(e){const{name:n,label:a,description:t,schemes:s}=e;this.name=n,this.label=a,this.description=t,this.schemes=s;const i=e.basemapGroups||l.Np;let o=[];Object.keys(i).forEach((e=>{o=o.concat(i[e])})),this.supportedBasemaps=o,this.basemapGroups=i}isBasemapSupported(e){const n=(0,l.T1)(e,this.supportedBasemaps);return!(!n||!this.supportedBasemaps.includes(n))}getRawSchemes(e){const{basemapId:n,basemapTheme:a}=function(e,n,a){let t=null,s=null;if(n&&(t=(0,l.T1)(n,e,!1),t)){const e=(0,l.BV)(t);null!=e&&(s=e)}return!t&&a&&(t="dark"===a?"dark-gray":"gray",s=a),t||s||(t="gray",s="light"),{basemapId:t,basemapTheme:s}}(this.supportedBasemaps,e.basemap,e.basemapTheme);let s=a;if(n){const e=(0,l.BV)(n,this.basemapGroups);null!=e&&(s=e)}let i=e.geometryType;"multipoint"===i?i="point":"mesh"===i&&(i="polygon");const o=this.schemes[i]||this.schemes.default;return{schemesInfo:(0,t.clone)(o[s]),basemapId:n,basemapTheme:a}}}function i(e){const n=e.themeDictionary,a=new Map;for(const t in n){const e=n[t];a.set(t,new s(e))}return a}function o(e,n){const a=[];return e.forEach((e=>{e.isBasemapSupported(n)&&a.push({name:e.name,label:e.label,description:e.description,basemaps:[...e.supportedBasemaps]})})),a}function r(e,n){if(!e)return;if(!n)return;let a=null;const t=[n.primaryScheme,...n.secondarySchemes];for(const s of t){var l;if((null===(l=s.name)||void 0===l?void 0:l.toLowerCase())===e.toLowerCase()){a=s;break}}return a}function c(e,n,a){if(!e&&!n)return[];if(!a)return[];const t=!(null!==e&&void 0!==e&&e.length),l=!(null!==n&&void 0!==n&&n.length),s=[a.primaryScheme,...a.secondarySchemes],i=[];for(const o of s){const a=!!t||e.some((e=>o.tags.includes(e))),s=!l&&n.some((e=>o.tags.includes(e)));a&&!s&&i.push(o)}return i}function u(e){const n=e.theme;if(n)return n.getRawSchemes({basemap:e.basemap,geometryType:e.geometryType,basemapTheme:e.basemapTheme})}},29857:(e,n,a)=>{a.r(n),a.d(n,{default:()=>b});var t=a(89379),l=a(53986),s=a(50076),i=a(68002),o=a(16525),r=a(90494),c=a(11563);const u=["layer"],p=500,f=1e8,m=1280,d=12,v=30,h=15;async function g(e){const{view:n,sampleSize:a}=e;if(!e||!e.layer)throw new s.default("scale-range:missing-parameters","'layer' parameter is required");if(e.snapToLOD&&!n)throw new s.default("scale-range:missing-parameters","'view' parameter is required when 'snapToLOD' is true");e.forBinning&&(0,r.p)(e,"scale-range");const{layer:i}=e,o=(0,l.A)(e,u),f=e.forBinning?c.Mi:c.J4,m=(0,c.Jg)(i,f,e.forBinning);if(!m)throw new s.default("scale-range:invalid-parameters","'layer' must be one of these types: "+(0,c.Ho)(f).join(", "));const d=(0,t.A)({layerAdapter:m},o);d.sampleSize=a||p,await(null===n||void 0===n?void 0:n.when());const v=null!=d.signal?{signal:d.signal}:null;return await m.load(v),d}function w(e,n,a){var t,l;const s=function(e,n){const a=d,t=m/4,l=v,s=m/4,i=h,o=m/2;let r=0,c=0,u=0,p=0;switch(e){case"point":case"multipoint":{var f,g;const e=n;r=null!==(f=e.avgMinDistance)&&void 0!==f?f:0,c=a,u=null!==(g=e.minDistance)&&void 0!==g?g:0,p=t;break}case"polyline":{var w,y;const e=n;r=null!==(w=e.avgLength)&&void 0!==w?w:0,c=l,u=null!==(y=e.minLength)&&void 0!==y?y:0,p=s;break}case"polygon":{var S,b;const e=n;r=null!==(S=e.avgSize)&&void 0!==S?S:0,c=i,u=null!==(b=e.minSize)&&void 0!==b?b:0,p=o;break}}return{resolutionForMinScale:r>0?r/c:null,resolutionForMaxScale:u>0?u/p:null}}(e.geometryType,n),o=(null===a||void 0===a?void 0:a.spatialReference)||e.layer.spatialReference;return{minScale:(0,i.gB)(null!==(t=s.resolutionForMinScale)&&void 0!==t?t:0,o),maxScale:(0,i.gB)(null!==(l=s.resolutionForMaxScale)&&void 0!==l?l:0,o)}}function y(e,n){let a=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(e.constraints&&"effectiveLODs"in e.constraints){const t=e.constraints.effectiveLODs,l=a?t:t.slice().reverse();let s=null;for(const e of l)if(!(a?e.scale>n:e.scale<n)){s=e;break}return s}}function S(e,n,a,t){const{view:l,snapToLOD:i,layerAdapter:o}=e;if(i&&l){const e=y(l,n),t=y(l,a,!1);n=e?e.scale:n,a=t?t.scale:a}if(n<a)throw new s.default("scale-range:invalid","calculated minScale is less than maxScale.");return a>n/2&&(a=Math.floor(a/2)),n>f&&(n=0),"polygon"!==o.geometryType&&(a=0),{minScale:Math.ceil(n),maxScale:Math.floor(a),spatialStatistics:t}}async function b(e){const n=await g(e),{view:a,sampleSize:t,layerAdapter:l,signal:i,filter:r}=n,c=await l.getSampleFeatures({view:a,sampleSize:t,returnGeometry:!0,filter:r,signal:i},"json");if(null===c||void 0===c||!c.length)throw new s.default("scale-range:insufficient-info","No features are available to calculate statistics");const u=await(0,o.A)({features:c,geometryType:l.geometryType}),{minScale:p,maxScale:f}=w(l,u,a);return S(n,p,f,u)}},31650:(e,n,a)=>{a.r(n),a.d(n,{default:()=>M});var t=a(89379),l=a(53986),s=(a(81806),a(50076)),i=a(76931),o=a(68002),r=a(43996),c=a(63040),u=a(29857),p=a(90494),f=a(11563);const m=["layer"],d=1e8,v=1128.497176,h=591657527.591555,g=[10,8,4,2],w=[100,100,60,30],y=[2,1,.75,.5],S=[32,18,12,6],b=[{level:0,resolution:156543.03392800014,scale:591657527.591555},{level:1,resolution:78271.51696399994,scale:295828763.795777},{level:2,resolution:39135.75848200009,scale:147914381.897889},{level:3,resolution:19567.87924099992,scale:73957190.948944},{level:4,resolution:9783.93962049996,scale:36978595.474472},{level:5,resolution:4891.96981024998,scale:18489297.737236},{level:6,resolution:2445.98490512499,scale:9244648.868618},{level:7,resolution:1222.992452562495,scale:4622324.434309},{level:8,resolution:611.4962262813797,scale:2311162.217155},{level:9,resolution:305.74811314055756,scale:1155581.108577},{level:10,resolution:152.87405657041106,scale:577790.554289},{level:11,resolution:76.43702828507324,scale:288895.277144},{level:12,resolution:38.21851414253662,scale:144447.638572},{level:13,resolution:19.10925707126831,scale:72223.819286},{level:14,resolution:9.554628535634155,scale:36111.909643},{level:15,resolution:4.77731426794937,scale:18055.954822},{level:16,resolution:2.388657133974685,scale:9027.977411},{level:17,resolution:1.1943285668550503,scale:4513.988705},{level:18,resolution:.5971642835598172,scale:2256.994353},{level:19,resolution:.29858214164761665,scale:1128.497176}];function x(e,n){const{view:a}=e;if(!a)throw new s.default("scale-range:invalid-parameters","'view' is required");const t=n.minScale||d,l=a.constraints&&"effectiveLODs"in a.constraints&&a.constraints.effectiveLODs||b,i=[];for(let s=0;s<l.length;s++){if(l[s].scale>t)continue;const e=Number(s),n=[e-3,e,e+3,e+6];for(const a of n)a>-1&&a<l.length&&i.push(l[a].scale);break}return i.sort(((e,n)=>e-n))}function z(e,n){const{view:a,layerAdapter:t}=e;if(!a)throw new s.default("scale-range:invalid-parameters","'view' is required");const l=t.fullExtent,i=t.minScale||v,r=t.maxScale||h,c=n.minScale||0,u=n.maxScale||0;let p=null!=l?(0,o.X_)(a,l):0;return p=p<i&&p>r?p:0,{scales:[i,r,c,u,p].map(Math.round).sort(((e,n)=>e-n)).filter(((e,n,a)=>!!e&&a.indexOf(e)===n)).filter(((e,n,a)=>!n||Math.abs(e-a[n-1])>5)),fullExtentScale:p}}function T(e,n){const{spatialStatistics:a,minScale:t,maxScale:l}=n;if(!("avgSize"in a)||!a.avgSize)throw new s.default("size-range:insufficient-info","average polygon size is invalid");const o=a.avgSize,{view:u}=e;if(!u)throw new s.default("scale-range:invalid-parameters","'view' is required");const{resolution:p,scale:f}=u,m=p/f,{scales:d,fullExtentScale:v}=z(e,{minScale:t,maxScale:l}),h=[],g=[];return d.forEach(((e,n)=>{const{min:a,max:t}=function(e,n){const a=Math.ceil(e/n);let t=Math.ceil(a/4);t<4?t=4:t>16&&(t=16);const l=5*t;return{min:t,max:l<50?50:l}}(o,m*e),l=d.indexOf(v),s=l>-1&&n>l?2:1;h.push(new c.default({value:e,size:(0,i.PN)(a/s)})),g.push(new c.default({value:e,size:(0,i.PN)(t/s)}))})),{minSize:new r.default({valueExpression:"$view.scale",stops:h}),maxSize:new r.default({valueExpression:"$view.scale",stops:g})}}async function M(e){const n=await async function(e){const{view:n}=e;if(!(e&&n&&e.layer))throw new s.default("size-range:missing-parameters","'view' and 'layer' parameters are required");e.forBinning&&(0,p.p)(e,"size-range");const{layer:a}=e,i=(0,l.A)(e,m),o=e.forBinning?f.Mi:f.J4,r=(0,f.Jg)(a,o,e.forBinning);if(!r)throw new s.default("size-range:invalid-parameters","'layer' must be one of these types: "+(0,f.Ho)(o).join(", "));const c=(0,t.A)((0,t.A)({layerAdapter:r},i),{},{view:n});await n.when();const u=null!=c.signal?{signal:c.signal}:null;await r.load(u);const d=r.geometryType;if("point"!==d&&"multipoint"!==d&&"polyline"!==d&&"polygon"!==d)throw new s.default("size-range:not-supported","sizeRange is not supported for geometryType: ".concat(d));return c}(e),{view:a,layerAdapter:o,signal:d,filter:v}=n,h=await(0,u.default)({layer:o,view:a,signal:d,filter:v});switch(o.geometryType){case"point":case"multipoint":return function(e,n){const{minScale:a,maxScale:t}=n,l=x(e,{minScale:a,maxScale:t});if(!l.length)throw new s.default("scale-range:insufficient-info","not enough scale values");return{minSize:new r.default({valueExpression:"$view.scale",stops:l.map(((e,n)=>new c.default({value:e,size:(0,i.PN)(g[n])})))}),maxSize:new r.default({valueExpression:"$view.scale",stops:l.map(((e,n)=>new c.default({value:e,size:(0,i.PN)(w[n])})))})}}(n,h);case"polyline":return function(e,n){const{minScale:a,maxScale:t}=n,l=x(e,{minScale:a,maxScale:t});if(!l.length)throw new s.default("scale-range:insufficient-info","not enough scale values");return{minSize:new r.default({valueExpression:"$view.scale",stops:l.map(((e,n)=>new c.default({value:e,size:(0,i.PN)(y[n])})))}),maxSize:new r.default({valueExpression:"$view.scale",stops:l.map(((e,n)=>new c.default({value:e,size:(0,i.PN)(S[n])})))})}}(n,h);case"polygon":return T(n,h);case"mesh":case"multipatch":return null}return null}},80791:(e,n,a)=>{a.d(n,{_J:()=>c,_t:()=>r});var t=a(76931),l=a(42633);const s=l.Np.light,i=l.Np.dark;function o(e,n){return e.r===n.r&&e.g===n.g&&e.b===n.b}function r(e,n){let a=0;if(e.length===n.length){let t=e.every(((e,a)=>o(e,n[a])));t?a=1:(t=e.slice().reverse().every(((e,a)=>o(e,n[a]))),t&&(a=-1))}return a}function c(e,n){return Math.ceil(function(e){const n=e.width,a=e.height;let l=e.pixelSizeAt(e.toMap((0,t.tc)(.5*n,.5*a),{exclude:[]}));if(l<=0&&(l=e.pixelSizeAt(e.toMap((0,t.tc)(.5*n,.95*a),{exclude:[]})),l<=0&&"camera"in e)){const n=e.camera.position.clone();n.z=0,l=2*e.pixelSizeAt(n)}return l}(n)*(0,t.Lz)((0,t.cr)(e)))}}}]);
//# sourceMappingURL=85685.9a226090.chunk.js.map