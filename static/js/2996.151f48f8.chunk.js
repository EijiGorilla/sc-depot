"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[2996,75166],{770:(e,t,a)=>{a.d(t,{bG:()=>s,Ty:()=>i,YJ:()=>l,Fq:()=>m,vt:()=>r});var o=a(53084),n=a(42633);class c{constructor(e){const{name:t,label:a,description:o,schemes:c}=e;this.name=t,this.label=a,this.description=o,this.schemes=c;const s=e.basemapGroups||n.Np;let r=[];Object.keys(s).forEach((e=>{r=r.concat(s[e])})),this.supportedBasemaps=r,this.basemapGroups=s}isBasemapSupported(e){const t=(0,n.T1)(e,this.supportedBasemaps);return!(!t||!this.supportedBasemaps.includes(t))}getRawSchemes(e){const{basemapId:t,basemapTheme:a}=function(e,t,a){let o=null,c=null;if(t&&(o=(0,n.T1)(t,e,!1),o)){const e=(0,n.BV)(o);null!=e&&(c=e)}return!o&&a&&(o="dark"===a?"dark-gray":"gray",c=a),o||c||(o="gray",c="light"),{basemapId:o,basemapTheme:c}}(this.supportedBasemaps,e.basemap,e.basemapTheme);let c=a;if(t){const e=(0,n.BV)(t,this.basemapGroups);null!=e&&(c=e)}let s=e.geometryType;"multipoint"===s?s="point":"mesh"===s&&(s="polygon");const r=this.schemes[s]||this.schemes.default;return{schemesInfo:(0,o.clone)(r[c]),basemapId:t,basemapTheme:a}}}function s(e){const t=e.themeDictionary,a=new Map;for(const o in t){const e=t[o];a.set(o,new c(e))}return a}function r(e,t){const a=[];return e.forEach((e=>{e.isBasemapSupported(t)&&a.push({name:e.name,label:e.label,description:e.description,basemaps:[...e.supportedBasemaps]})})),a}function i(e,t){if(!e)return;if(!t)return;let a=null;const o=[t.primaryScheme,...t.secondarySchemes];for(const c of o){var n;if((null===(n=c.name)||void 0===n?void 0:n.toLowerCase())===e.toLowerCase()){a=c;break}}return a}function l(e,t,a){if(!e&&!t)return[];if(!a)return[];const o=!(null!==e&&void 0!==e&&e.length),n=!(null!==t&&void 0!==t&&t.length),c=[a.primaryScheme,...a.secondarySchemes],s=[];for(const r of c){const a=!!o||e.some((e=>r.tags.includes(e))),c=!n&&t.some((e=>r.tags.includes(e)));a&&!c&&s.push(r)}return s}function m(e){const t=e.theme;if(t)return t.getRawSchemes({basemap:e.basemap,geometryType:e.geometryType,basemapTheme:e.basemapTheme})}},2996:(e,t,a)=>{a.r(t),a.d(t,{cloneScheme:()=>T,getSchemeByName:()=>C,getSchemes:()=>w,getSchemesByTag:()=>D,getThemes:()=>b});var o=a(89379),n=a(69539),c=a(18690),s=a(59784),r=a(89132),i=a(770),l=a(80791);const m={light:{color:[153,153,153,.25],width:"1px"},dark:{color:[153,153,153,.25],width:"1px"},darker:{color:[26,26,26,.25],width:"1px"}},p=["tropical-bliss","desert-blooms","under-the-sea","vibrant-rainbow","ocean-bay","prairie-summer","pastel-chalk"],u=["predominant-v1","predominant-v2","predominant-v3","predominant-v4","predominant-v5","predominance-race","predominance-money","predominance-race-ethnic","predominance-rainbow","predominance-sequence"],d=["cat-symbols-strong","cat-symbols-autumnal","cat-symbols-bright","cat-symbols-midrange","cat-symbols-subdued","cat-symbols-pastel","cat-symbols-red","cat-symbols-blue","cat-symbols-green","cat-symbols-gray"],h=["cat-popup-olympic-sunset"],y="#aaaaaa",f="12px",g=(0,i.bG)({themeDictionary:{default:{name:"default",label:"Default",description:"Default theme for visualizing features by their type.",schemes:{point:{light:{common:{noDataColor:y,outline:m.light,size:"8px"},primary:"cat-dark",secondary:["cat-light"].concat(d).concat(p).concat(u).concat(h)},dark:{common:{noDataColor:y,outline:m.darker,size:"8px"},primary:"cat-light",secondary:["cat-dark"].concat(d).concat(p).concat(u).concat(h)}},polyline:{light:{common:{noDataColor:y,width:"2px"},primary:"cat-dark",secondary:["cat-light"].concat(d).concat(p).concat(u).concat(h)},dark:{common:{noDataColor:y,width:"2px"},primary:"cat-light",secondary:["cat-dark"].concat(d).concat(p).concat(u).concat(h)}},polygon:{light:{common:{noDataColor:y,outline:m.light,fillOpacity:.8},primary:"cat-dark",secondary:["cat-light"].concat(d).concat(p).concat(u).concat(h)},dark:{common:{noDataColor:y,outline:m.dark,fillOpacity:.8},primary:"cat-light",secondary:["cat-dark"].concat(d).concat(p).concat(u).concat(h)}}}},"point-cloud-class":{name:"point-cloud-class",label:"Point Cloud Class",description:"Default theme for visualizing point cloud data based on classification.",schemes:{point:{light:{primary:"point-cloud-class-scheme",secondary:[]},dark:{primary:"point-cloud-class-scheme",secondary:[]}}}}}});function b(e){return(0,i.vt)(g,e)}function w(e){const t=e.theme||"default",a=(0,i.Fq)({basemap:e.basemap,geometryType:e.geometryType,basemapTheme:e.basemapTheme,theme:g.get(t)});if(!a)return;const{schemesInfo:o,basemapId:n,basemapTheme:s}=a,r=o.common;return{primaryScheme:k(e,o.primary,r),secondarySchemes:o.secondary.map((t=>k(e,t,r))).filter(c.Ru),basemapId:n,basemapTheme:s}}function C(e){return(0,i.Ty)(e.name,w(e))}function D(e){return(0,i.YJ)(e.includedTags,e.excludedTags,w(e))}function T(e){if(!e)return;const t=(0,o.A)({},e);return t.colors=t.colors.map((e=>new n.default(e))),t.tags=[...t.tags],"noDataColor"in t&&t.noDataColor&&(t.noDataColor=new n.default(t.noDataColor)),"outline"in t&&t.outline&&(t.outline={color:t.outline.color&&new n.default(t.outline.color),width:t.outline.width}),t}function k(e,t,a){var o;const{numColors:c}=e,i=e.theme||"default",m=r.A[t];if(!m)return;const p=c?null!==(o=m[c])&&void 0!==o?o:(0,s.Iy)(m.stops,c):m.stops,u="mesh"!==e.geometryType&&e.worldScale?e.view:null;switch(e.geometryType){case"point":case"multipoint":{if("point-cloud-class"===i)return function(e){return{name:e.name,tags:[...e.tags],theme:e.theme,colors:e.colors.map((e=>new n.default(e)))}}({theme:i,name:m.name,tags:m.tags,colors:p});const e=a;return function(e,t){return{name:e.name,tags:[...e.tags],theme:e.theme,colors:e.colors.map((e=>new n.default(e))),noDataColor:new n.default(e.noDataColor),outline:{color:new n.default(e.outline.color),width:e.outline.width},size:t?(0,l._J)(e.size,t):e.size,opacity:e.opacity}}({name:m.name,tags:m.tags,theme:i,colors:p,noDataColor:e.noDataColor,opacity:1,outline:e.outline,size:e.size},u)}case"polyline":{const e=a;return function(e,t){return{name:e.name,tags:[...e.tags],theme:e.theme,colors:e.colors.map((e=>new n.default(e))),noDataColor:new n.default(e.noDataColor),width:t?(0,l._J)(e.width,t):e.width,opacity:e.opacity}}({name:m.name,tags:m.tags,theme:i,colors:p,noDataColor:e.noDataColor,opacity:1,width:e.width},u)}case"polygon":{const e=a;return function(e,t){return{name:e.name,tags:[...e.tags],theme:e.theme,colors:e.colors.map((e=>new n.default(e))),noDataColor:new n.default(e.noDataColor),outline:{color:new n.default(e.outline.color),width:e.outline.width},opacity:e.opacity,size:t?(0,l._J)(e.size,t):e.size}}({name:m.name,tags:m.tags,theme:i,colors:p,noDataColor:e.noDataColor,opacity:e.fillOpacity||1,outline:e.outline,size:f},u)}case"mesh":{const e=a;return function(e){return{name:e.name,tags:[...e.tags],theme:e.theme,colors:e.colors.map((e=>new n.default(e))),noDataColor:new n.default(e.noDataColor),opacity:e.opacity}}({name:m.name,tags:m.tags,theme:i,colors:p,noDataColor:e.noDataColor,opacity:e.fillOpacity||1})}default:return}}},80791:(e,t,a)=>{a.d(t,{_J:()=>l,_t:()=>i});var o=a(76931),n=a(42633);const c=n.Np.light,s=n.Np.dark;function r(e,t){return e.r===t.r&&e.g===t.g&&e.b===t.b}function i(e,t){let a=0;if(e.length===t.length){let o=e.every(((e,a)=>r(e,t[a])));o?a=1:(o=e.slice().reverse().every(((e,a)=>r(e,t[a]))),o&&(a=-1))}return a}function l(e,t){return Math.ceil(function(e){const t=e.width,a=e.height;let n=e.pixelSizeAt(e.toMap((0,o.tc)(.5*t,.5*a),{exclude:[]}));if(n<=0&&(n=e.pixelSizeAt(e.toMap((0,o.tc)(.5*t,.95*a),{exclude:[]})),n<=0&&"camera"in e)){const t=e.camera.position.clone();t.z=0,n=2*e.pixelSizeAt(t)}return n}(t)*(0,o.Lz)((0,o.cr)(e)))}}}]);
//# sourceMappingURL=2996.151f48f8.chunk.js.map