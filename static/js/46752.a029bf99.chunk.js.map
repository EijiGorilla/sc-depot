{"version":3,"file":"static/js/46752.a029bf99.chunk.js","mappings":"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","sources":["../node_modules/lit-html/src/directives/repeat.ts","../node_modules/@esri/calcite-components/dist/components/calcite-color-picker-hex-input/customElement.js","../node_modules/@esri/calcite-components/dist/components/calcite-color-picker/customElement.js","../node_modules/lodash-es/throttle.js"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\nimport {\n  insertPart,\n  getCommittedValue,\n  removePart,\n  setCommittedValue,\n  setChildPartValue,\n} from '../directive-helpers.js';\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type ItemTemplate<T> = (item: T, index: number) => unknown;\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map<unknown, number>();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\nclass RepeatDirective extends Directive {\n  private _itemKeys?: unknown[];\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('repeat() can only be used in text expressions');\n    }\n  }\n\n  private _getValuesAndKeys<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    let keyFn: KeyFn<T> | undefined;\n    if (template === undefined) {\n      template = keyFnOrTemplate;\n    } else if (keyFnOrTemplate !== undefined) {\n      keyFn = keyFnOrTemplate as KeyFn<T>;\n    }\n    const keys = [];\n    const values = [];\n    let index = 0;\n    for (const item of items) {\n      keys[index] = keyFn ? keyFn(item, index) : index;\n      values[index] = template!(item, index);\n      index++;\n    }\n    return {\n      values,\n      keys,\n    };\n  }\n\n  render<T>(items: Iterable<T>, template: ItemTemplate<T>): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    return this._getValuesAndKeys(items, keyFnOrTemplate, template).values;\n  }\n\n  override update<T>(\n    containerPart: ChildPart,\n    [items, keyFnOrTemplate, template]: [\n      Iterable<T>,\n      KeyFn<T> | ItemTemplate<T>,\n      ItemTemplate<T>,\n    ]\n  ) {\n    // Old part & key lists are retrieved from the last update (which may\n    // be primed by hydration)\n    const oldParts = getCommittedValue(\n      containerPart\n    ) as Array<ChildPart | null>;\n    const {values: newValues, keys: newKeys} = this._getValuesAndKeys(\n      items,\n      keyFnOrTemplate,\n      template\n    );\n\n    // We check that oldParts, the committed value, is an Array as an\n    // indicator that the previous value came from a repeat() call. If\n    // oldParts is not an Array then this is the first render and we return\n    // an array for lit-html's array handling to render, and remember the\n    // keys.\n    if (!Array.isArray(oldParts)) {\n      this._itemKeys = newKeys;\n      return newValues;\n    }\n\n    // In SSR hydration it's possible for oldParts to be an array but for us\n    // to not have item keys because the update() hasn't run yet. We set the\n    // keys to an empty array. This will cause all oldKey/newKey comparisons\n    // to fail and execution to fall to the last nested brach below which\n    // reuses the oldPart.\n    const oldKeys = (this._itemKeys ??= []);\n\n    // New part list will be built up as we go (either reused from\n    // old parts or created for new keys in this update). This is\n    // saved in the above cache at the end of the update.\n    const newParts: ChildPart[] = [];\n\n    // Maps from key to index for current and previous update; these\n    // are generated lazily only when needed as a performance\n    // optimization, since they are only required for multiple\n    // non-contiguous changes in the list, which are less common.\n    let newKeyToIndexMap!: Map<unknown, number>;\n    let oldKeyToIndexMap!: Map<unknown, number>;\n\n    // Head and tail pointers to old parts and new values\n    let oldHead = 0;\n    let oldTail = oldParts.length - 1;\n    let newHead = 0;\n    let newTail = newValues.length - 1;\n\n    // Overview of O(n) reconciliation algorithm (general approach\n    // based on ideas found in ivi, vue, snabbdom, etc.):\n    //\n    // * We start with the list of old parts and new values (and\n    //   arrays of their respective keys), head/tail pointers into\n    //   each, and we build up the new list of parts by updating\n    //   (and when needed, moving) old parts or creating new ones.\n    //   The initial scenario might look like this (for brevity of\n    //   the diagrams, the numbers in the array reflect keys\n    //   associated with the old parts or new values, although keys\n    //   and parts/values are actually stored in parallel arrays\n    //   indexed using the same head/tail pointers):\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n    //                                      item order\n    //      newHead ^                 ^ newTail\n    //\n    // * Iterate old & new lists from both sides, updating,\n    //   swapping, or removing parts at the head/tail locations\n    //   until neither head nor tail can move.\n    //\n    // * Example below: keys at head pointers match, so update old\n    //   part 0 in-place (no need to move it) and record part 0 in\n    //   the `newParts` list. The last thing we do is advance the\n    //   `oldHead` and `newHead` pointers (will be reflected in the\n    //   next diagram).\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //      newHead ^                 ^ newTail\n    //\n    // * Example below: head pointers don't match, but tail\n    //   pointers do, so update part 6 in place (no need to move\n    //   it), and record part 6 in the `newParts` list. Last,\n    //   advance the `oldTail` and `oldHead` pointers.\n    //\n    //         oldHead v              v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n    //                                      & newTail\n    //         newHead ^              ^ newTail\n    //\n    // * If neither head nor tail match; next check if one of the\n    //   old head/tail items was removed. We first need to generate\n    //   the reverse map of new keys to index (`newKeyToIndexMap`),\n    //   which is done once lazily as a performance optimization,\n    //   since we only hit this case if multiple non-contiguous\n    //   changes were made. Note that for contiguous removal\n    //   anywhere in the list, the head and tails would advance\n    //   from either end and pass each other before we get to this\n    //   case and removals would be handled in the final while loop\n    //   without needing to generate the map.\n    //\n    // * Example below: The key at `oldTail` was removed (no longer\n    //   in the `newKeyToIndexMap`), so remove that part from the\n    //   DOM and advance just the `oldTail` pointer.\n    //\n    //         oldHead v           v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n    //         newHead ^           ^ newTail\n    //\n    // * Once head and tail cannot move, any mismatches are due to\n    //   either new or moved items; if a new key is in the previous\n    //   \"old key to old index\" map, move the old part to the new\n    //   location, otherwise create and insert a new part. Note\n    //   that when moving an old part we null its position in the\n    //   oldParts array if it lies between the head and tail so we\n    //   know to skip it when the pointers get there.\n    //\n    // * Example below: neither head nor tail match, and neither\n    //   were removed; so find the `newHead` key in the\n    //   `oldKeyToIndexMap`, and move that old part's DOM into the\n    //   next head position (before `oldParts[oldHead]`). Last,\n    //   null the part in the `oldPart` array since it was\n    //   somewhere in the remaining oldParts still to be scanned\n    //   (between the head and tail pointers) so that we know to\n    //   skip that old part on future iterations.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n    //                                      newHead\n    //         newHead ^           ^ newTail\n    //\n    // * Note that for moves/insertions like the one above, a part\n    //   inserted at the head pointer is inserted before the\n    //   current `oldParts[oldHead]`, and a part inserted at the\n    //   tail pointer is inserted before `newParts[newTail+1]`. The\n    //   seeming asymmetry lies in the fact that new parts are\n    //   moved into place outside in, so to the right of the head\n    //   pointer are old parts, and to the right of the tail\n    //   pointer are new parts.\n    //\n    // * We always restart back from the top of the algorithm,\n    //   allowing matching and simple updates in place to\n    //   continue...\n    //\n    // * Example below: the head pointers once again match, so\n    //   simply update part 1 and record it in the `newParts`\n    //   array.  Last, advance both head pointers.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //            newHead ^        ^ newTail\n    //\n    // * As mentioned above, items that were moved as a result of\n    //   being stuck (the final else clause in the code below) are\n    //   marked with null, so we always advance old pointers over\n    //   these so we're comparing the next actual old value on\n    //   either end.\n    //\n    // * Example below: `oldHead` is null (already placed in\n    //   newParts), so advance `oldHead`.\n    //\n    //            oldHead v     v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n    //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //               newHead ^     ^ newTail\n    //\n    // * Note it's not critical to mark old parts as null when they\n    //   are moved from head to tail or tail to head, since they\n    //   will be outside the pointer range and never visited again.\n    //\n    // * Example below: Here the old tail key matches the new head\n    //   key, so the part at the `oldTail` position and move its\n    //   DOM to the new head position (before `oldParts[oldHead]`).\n    //   Last, advance `oldTail` and `newHead` pointers.\n    //\n    //               oldHead v  v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n    //                                     advance oldTail & newHead\n    //               newHead ^     ^ newTail\n    //\n    // * Example below: Old and new head keys match, so update the\n    //   old head part in place, and advance the `oldHead` and\n    //   `newHead` pointers.\n    //\n    //               oldHead v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n    //                                      newHead\n    //                  newHead ^  ^ newTail\n    //\n    // * Once the new or old pointers move past each other then all\n    //   we have left is additions (if old list exhausted) or\n    //   removals (if new list exhausted). Those are handled in the\n    //   final while loops at the end.\n    //\n    // * Example below: `oldHead` exceeded `oldTail`, so we're done\n    //   with the main loop.  Create the remaining part and insert\n    //   it at the new head position, and the update is complete.\n    //\n    //                   (oldHead > oldTail)\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //                     newHead ^ newTail\n    //\n    // * Note that the order of the if/else clauses is not\n    //   important to the algorithm, as long as the null checks\n    //   come first (to ensure we're always working on valid old\n    //   parts) and that the final else clause comes last (since\n    //   that's where the expensive moves occur). The order of\n    //   remaining clauses is just a simple guess at which cases\n    //   will be most common.\n    //\n    // * Note, we could calculate the longest\n    //   increasing subsequence (LIS) of old items in new position,\n    //   and only move those not in the LIS set. However that costs\n    //   O(nlogn) time and adds a bit more code, and only helps\n    //   make rare types of mutations require fewer moves. The\n    //   above handles removes, adds, reversal, swaps, and single\n    //   moves of contiguous items in linear time, in the minimum\n    //   number of moves. As the number of multiple moves where LIS\n    //   might help approaches a random shuffle, the LIS\n    //   optimization becomes less helpful, so it seems not worth\n    //   the code at this point. Could reconsider if a compelling\n    //   case arises.\n\n    while (oldHead <= oldTail && newHead <= newTail) {\n      if (oldParts[oldHead] === null) {\n        // `null` means old part at head has already been used\n        // below; skip\n        oldHead++;\n      } else if (oldParts[oldTail] === null) {\n        // `null` means old part at tail has already been used\n        // below; skip\n        oldTail--;\n      } else if (oldKeys[oldHead] === newKeys[newHead]) {\n        // Old head matches new head; update in place\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newHead]\n        );\n        oldHead++;\n        newHead++;\n      } else if (oldKeys[oldTail] === newKeys[newTail]) {\n        // Old tail matches new tail; update in place\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newTail]\n        );\n        oldTail--;\n        newTail--;\n      } else if (oldKeys[oldHead] === newKeys[newTail]) {\n        // Old head matches new tail; update and move to new tail\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newTail]\n        );\n        insertPart(containerPart, newParts[newTail + 1], oldParts[oldHead]!);\n        oldHead++;\n        newTail--;\n      } else if (oldKeys[oldTail] === newKeys[newHead]) {\n        // Old tail matches new head; update and move to new head\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newHead]\n        );\n        insertPart(containerPart, oldParts[oldHead]!, oldParts[oldTail]!);\n        oldTail--;\n        newHead++;\n      } else {\n        if (newKeyToIndexMap === undefined) {\n          // Lazily generate key-to-index maps, used for removals &\n          // moves below\n          newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n          oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n        }\n        if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n          // Old head is no longer in new list; remove\n          removePart(oldParts[oldHead]!);\n          oldHead++;\n        } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n          // Old tail is no longer in new list; remove\n          removePart(oldParts[oldTail]!);\n          oldTail--;\n        } else {\n          // Any mismatches at this point are due to additions or\n          // moves; see if we have an old part we can reuse and move\n          // into place\n          const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n          const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n          if (oldPart === null) {\n            // No old part for this value; create a new one and\n            // insert it\n            const newPart = insertPart(containerPart, oldParts[oldHead]!);\n            setChildPartValue(newPart, newValues[newHead]);\n            newParts[newHead] = newPart;\n          } else {\n            // Reuse old part\n            newParts[newHead] = setChildPartValue(oldPart, newValues[newHead]);\n            insertPart(containerPart, oldParts[oldHead]!, oldPart);\n            // This marks the old part as having been used, so that\n            // it will be skipped in the first two checks above\n            oldParts[oldIndex as number] = null;\n          }\n          newHead++;\n        }\n      }\n    }\n    // Add parts for any remaining new values\n    while (newHead <= newTail) {\n      // For all remaining additions, we insert before last new\n      // tail, since old pointers are no longer valid\n      const newPart = insertPart(containerPart, newParts[newTail + 1]);\n      setChildPartValue(newPart, newValues[newHead]);\n      newParts[newHead++] = newPart;\n    }\n    // Remove any remaining unused old parts\n    while (oldHead <= oldTail) {\n      const oldPart = oldParts[oldHead++];\n      if (oldPart !== null) {\n        removePart(oldPart);\n      }\n    }\n\n    // Save order of new parts for next round\n    this._itemKeys = newKeys;\n    // Directly set part value, bypassing it's dirty-checking\n    setCommittedValue(containerPart, newParts);\n    return noChange;\n  }\n}\n\nexport interface RepeatDirectiveFn {\n  <T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ): unknown;\n  <T>(items: Iterable<T>, template: ItemTemplate<T>): unknown;\n  <T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): unknown;\n}\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * The `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n *\n * ```js\n * html`\n *   <ol>\n *     ${repeat(this.items, (item) => item.id, (item, index) => {\n *       return html`<li>${index}: ${item.name}</li>`;\n *     })}\n *   </ol>\n * `\n * ```\n *\n * **Important**: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive(RepeatDirective) as RepeatDirectiveFn;\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RepeatDirective};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { c as customElement } from \"../../chunks/runtime.js\";\nimport { ref } from \"lit-html/directives/ref.js\";\nimport { keyed } from \"lit-html/directives/keyed.js\";\nimport Color from \"color\";\nimport { html } from \"lit\";\nimport { LitElement, createEvent, safeClassMap } from \"@arcgis/lumina\";\nimport { n as normalizeHex, h as hexify, i as isValidHex, a as isLonghandHex, b as isShorthandHex, r as rgbToHex, o as opacityToAlpha, c as alphaToOpacity, O as OPACITY_LIMITS, d as hexChar } from \"../../chunks/utils4.js\";\nimport { b as focusElement } from \"../../chunks/dom.js\";\nimport { c as componentFocusable } from \"../../chunks/component.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nconst CSS = {\n  container: \"container\",\n  hexInput: \"hex-input\",\n  opacityInput: \"opacity-input\"\n};\nconst styles = css`:host{display:block}.container{display:flex;inline-size:100%;flex-wrap:nowrap;align-items:center}.hex-input{flex-grow:1;text-transform:uppercase}.opacity-input{inline-size:100px;margin-inline-start:-1px}:host([hidden]){display:none}[hidden]{display:none}`;\nconst DEFAULT_COLOR = Color();\nclass ColorPickerHexInput extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.internalColor = DEFAULT_COLOR;\n    this.alphaChannel = false;\n    this.allowEmpty = false;\n    this.hexLabel = \"Hex\";\n    this.scale = \"m\";\n    this.value = normalizeHex(hexify(DEFAULT_COLOR, this.alphaChannel), this.alphaChannel, true);\n    this.calciteColorPickerHexInputChange = createEvent({ cancelable: false });\n  }\n  static {\n    this.properties = { internalColor: [16, {}, { state: true }], alphaChannel: [5, {}, { type: Boolean }], allowEmpty: [5, {}, { type: Boolean }], hexLabel: 1, messages: [0, {}, { attribute: false }], numberingSystem: 1, scale: [3, {}, { reflect: true }], value: [3, {}, { reflect: true }] };\n  }\n  static {\n    this.styles = styles;\n  }\n  async setFocus() {\n    await componentFocusable(this);\n    return focusElement(this.hexInputNode);\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.previousNonNullValue = this.value;\n    const { allowEmpty, alphaChannel, value } = this;\n    if (value) {\n      const normalized = normalizeHex(value, alphaChannel);\n      if (isValidHex(normalized, alphaChannel)) {\n        this.internalSetValue(normalized, normalized, false);\n      }\n      return;\n    }\n    if (allowEmpty) {\n      this.internalSetValue(void 0, void 0, false);\n    }\n  }\n  willUpdate(changes) {\n    if (changes.has(\"value\") && (this.hasUpdated || this.value !== normalizeHex(hexify(DEFAULT_COLOR, this.alphaChannel), this.alphaChannel, true))) {\n      this.internalSetValue(this.value, changes.get(\"value\"), false);\n    }\n  }\n  onHexInputBlur() {\n    const node = this.hexInputNode;\n    const inputValue = node.value;\n    const hex = `#${inputValue}`;\n    const { allowEmpty, internalColor } = this;\n    const willClearValue = allowEmpty && !inputValue;\n    const isLonghand = isLonghandHex(hex);\n    const anyShorthand = isShorthandHex(hex, true) || isShorthandHex(hex, false);\n    if (anyShorthand) {\n      this.onHexInputChange();\n    }\n    if (willClearValue || isValidHex(hex) && isLonghand) {\n      return;\n    }\n    node.value = allowEmpty && !internalColor ? \"\" : this.formatHexForInternalInput(rgbToHex(\n      // always display hex input in RRGGBB format\n      internalColor.object()\n    ));\n  }\n  onOpacityInputBlur() {\n    const node = this.opacityInputNode;\n    const inputValue = node.value;\n    const { allowEmpty, internalColor } = this;\n    const willClearValue = allowEmpty && !inputValue;\n    if (willClearValue) {\n      return;\n    }\n    node.value = allowEmpty && !internalColor ? \"\" : this.formatOpacityForInternalInput(internalColor);\n  }\n  onOpacityInputInput() {\n    this.onOpacityInputChange();\n  }\n  onHexInputChange() {\n    const nodeValue = this.hexInputNode.value;\n    let value = nodeValue;\n    if (value) {\n      const normalized = normalizeHex(value, false);\n      const preserveExistingAlpha = isValidHex(normalized) && this.alphaChannel;\n      if (preserveExistingAlpha && this.internalColor) {\n        const alphaHex = normalizeHex(this.internalColor.hexa(), true).slice(-2);\n        value = `${normalized + alphaHex}`;\n      }\n    }\n    this.internalSetValue(value, this.value);\n  }\n  onOpacityInputChange() {\n    const node = this.opacityInputNode;\n    let value;\n    if (!node.value) {\n      value = node.value;\n    } else {\n      const alpha = opacityToAlpha(Number(node.value));\n      value = this.internalColor?.alpha(alpha).hexa();\n    }\n    this.internalSetValue(value, this.value);\n  }\n  onInputFocus(event) {\n    if (event.type === \"calciteInternalInputTextFocus\") {\n      this.hexInputNode.selectText();\n    } else {\n      this.opacityInputNode.selectText();\n    }\n  }\n  onHexInputInput() {\n    const hexInputValue = `#${this.hexInputNode.value}`;\n    const oldValue = this.value;\n    if (isValidHex(hexInputValue, this.alphaChannel) && isLonghandHex(hexInputValue, this.alphaChannel)) {\n      this.internalSetValue(hexInputValue, oldValue);\n    }\n  }\n  onInputKeyDown(event) {\n    const { altKey, ctrlKey, metaKey, shiftKey } = event;\n    const { alphaChannel, hexInputNode, internalColor, value } = this;\n    const { key } = event;\n    const composedPath = event.composedPath();\n    if (key === \"Tab\" && isShorthandHex(value, this.alphaChannel) || key === \"Enter\") {\n      if (composedPath.includes(hexInputNode)) {\n        this.onHexInputChange();\n      } else {\n        this.onOpacityInputChange();\n      }\n      if (key === \"Enter\") {\n        event.preventDefault();\n      }\n      return;\n    }\n    const isNudgeKey = key === \"ArrowDown\" || key === \"ArrowUp\";\n    const oldValue = this.value;\n    if (isNudgeKey) {\n      if (!value) {\n        this.internalSetValue(this.previousNonNullValue, oldValue);\n        event.preventDefault();\n        return;\n      }\n      const direction = key === \"ArrowUp\" ? 1 : -1;\n      const bump = shiftKey ? 10 : 1;\n      this.internalSetValue(hexify(this.nudgeRGBChannels(internalColor, bump * direction, composedPath.includes(hexInputNode) ? \"rgb\" : \"a\"), alphaChannel), oldValue);\n      event.preventDefault();\n      return;\n    }\n    const withModifiers = altKey || ctrlKey || metaKey;\n    const singleChar = key.length === 1;\n    const validHexChar = hexChar.test(key);\n    if (singleChar && !withModifiers && !validHexChar) {\n      event.preventDefault();\n    }\n  }\n  onHexInputPaste(event) {\n    const hex = event.clipboardData.getData(\"text\");\n    if (isValidHex(hex, this.alphaChannel) && isLonghandHex(hex, this.alphaChannel)) {\n      event.preventDefault();\n      this.hexInputNode.value = hex.slice(1);\n      this.internalSetValue(hex, this.value);\n    }\n  }\n  internalSetValue(value, oldValue, emit = true) {\n    if (value) {\n      const { alphaChannel } = this;\n      const normalized = normalizeHex(value, alphaChannel, alphaChannel);\n      if (isValidHex(normalized, alphaChannel)) {\n        const { internalColor: currentColor } = this;\n        const nextColor = Color(normalized);\n        const normalizedLonghand = normalizeHex(hexify(nextColor, alphaChannel), alphaChannel);\n        const changed = !currentColor || normalizedLonghand !== normalizeHex(hexify(currentColor, alphaChannel), alphaChannel);\n        this.internalColor = nextColor;\n        this.previousNonNullValue = normalizedLonghand;\n        this.value = normalizedLonghand;\n        if (changed && emit) {\n          this.calciteColorPickerHexInputChange.emit();\n        }\n        return;\n      }\n    } else if (this.allowEmpty) {\n      this.internalColor = void 0;\n      this.value = void 0;\n      if (emit) {\n        this.calciteColorPickerHexInputChange.emit();\n      }\n      return;\n    }\n    this.value = oldValue;\n  }\n  storeHexInputRef(node) {\n    this.hexInputNode = node;\n  }\n  storeOpacityInputRef(node) {\n    this.opacityInputNode = node;\n  }\n  formatHexForInternalInput(hex) {\n    return hex ? hex.replace(\"#\", \"\").slice(0, 6) : \"\";\n  }\n  formatOpacityForInternalInput(color) {\n    return color ? `${alphaToOpacity(color.alpha())}` : \"\";\n  }\n  nudgeRGBChannels(color, amount, context) {\n    let nudgedChannels;\n    const channels = color.array();\n    const rgbChannels = channels.slice(0, 3);\n    if (context === \"rgb\") {\n      const nudgedRGBChannels = rgbChannels.map((channel) => channel + amount);\n      nudgedChannels = [\n        ...nudgedRGBChannels,\n        this.alphaChannel ? channels[3] : void 0\n      ];\n    } else {\n      const nudgedAlpha = opacityToAlpha(alphaToOpacity(color.alpha()) + amount);\n      nudgedChannels = [...rgbChannels, nudgedAlpha];\n    }\n    return Color(nudgedChannels);\n  }\n  render() {\n    const { alphaChannel, hexLabel, internalColor, messages, scale, value } = this;\n    const hexInputValue = this.formatHexForInternalInput(value);\n    const opacityInputValue = this.formatOpacityForInternalInput(internalColor);\n    const inputScale = scale === \"l\" ? \"m\" : \"s\";\n    return html`<div class=${safeClassMap(CSS.container)}><calcite-input-text class=${safeClassMap(CSS.hexInput)} .label=${messages?.hex || hexLabel} .maxLength=${this.alphaChannel ? 8 : 6} @keydown=${this.onInputKeyDown} @paste=${this.onHexInputPaste} @calciteInputTextChange=${this.onHexInputChange} @calciteInputTextInput=${this.onHexInputInput} @calciteInternalInputTextBlur=${this.onHexInputBlur} @calciteInternalInputTextFocus=${this.onInputFocus} prefix-text=# .scale=${inputScale} .value=${hexInputValue} ${ref(this.storeHexInputRef)}></calcite-input-text>${alphaChannel ? keyed(\"opacity-input\", html`<calcite-input-number class=${safeClassMap(CSS.opacityInput)} .label=${messages?.opacity} .max=${OPACITY_LIMITS.max} max-length=3 .min=${OPACITY_LIMITS.min} number-button-type=none .numberingSystem=${this.numberingSystem} @keydown=${this.onInputKeyDown} @calciteInputNumberInput=${this.onOpacityInputInput} @calciteInternalInputNumberBlur=${this.onOpacityInputBlur} @calciteInternalInputNumberFocus=${this.onInputFocus} .scale=${inputScale} suffix-text=% .value=${opacityInputValue} ${ref(this.storeOpacityInputRef)}></calcite-input-number>`) : null}</div>`;\n  }\n}\ncustomElement(\"calcite-color-picker-hex-input\", ColorPickerHexInput);\nexport {\n  ColorPickerHexInput\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { c as customElement } from \"../../chunks/runtime.js\";\nimport { ref } from \"lit-html/directives/ref.js\";\nimport { repeat } from \"lit-html/directives/repeat.js\";\nimport { keyed } from \"lit-html/directives/keyed.js\";\nimport Color from \"color\";\nimport { throttle } from \"lodash-es\";\nimport { html, nothing } from \"lit\";\nimport { LitElement, createEvent, safeClassMap, safeStyleMap } from \"@arcgis/lumina\";\nimport { i as isPrimaryPointerButton, h as focusFirstTabbable, g as getElementDir } from \"../../chunks/dom.js\";\nimport { u as updateHostInteraction, I as InteractiveContainer } from \"../../chunks/interactive.js\";\nimport { i as isActivationKey } from \"../../chunks/key.js\";\nimport { c as componentFocusable } from \"../../chunks/component.js\";\nimport { c as clamp, r as remap, a as closeToRangeEdge } from \"../../chunks/math.js\";\nimport { u as useT9n } from \"../../chunks/useT9n.js\";\nimport { c as createObserver } from \"../../chunks/observers.js\";\nimport { D as DEFAULT_COLOR, C as CSSColorMode, g as getSliderWidth, e as getColorFieldDimensions, S as STATIC_DIMENSIONS, n as normalizeHex, h as hexify, p as parseMode, f as DEFAULT_STORAGE_KEY_PREFIX, j as alphaCompatible, k as normalizeColor, l as colorEqual, O as OPACITY_LIMITS, R as RGB_LIMITS, H as HSV_LIMITS, m as CSS, o as opacityToAlpha, t as toAlphaMode, q as toNonAlphaMode, s as HUE_LIMIT_CONSTRAINED, u as normalizeAlpha, c as alphaToOpacity, v as SCOPE_SIZE } from \"../../chunks/utils4.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nconst styles = css`:host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:inline-block;font-size:var(--calcite-font-size--2);line-height:1rem;font-weight:var(--calcite-font-weight-normal);inline-size:var(--calcite-internal-color-picker-min-width);min-inline-size:var(--calcite-internal-color-picker-min-width)}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}:host([scale=s]){--calcite-internal-color-picker-min-width: 200px;--calcite-color-picker-spacing: 8px}:host([scale=s]) .saved-colors{gap:.25rem;grid-template-columns:repeat(auto-fill,20px)}:host([scale=m]){--calcite-internal-color-picker-min-width: 240px;--calcite-color-picker-spacing: 12px}:host([scale=l]){--calcite-internal-color-picker-min-width: 304px;--calcite-color-picker-spacing: 16px;font-size:var(--calcite-font-size--1);line-height:1rem}:host([scale=l]) .section:first-of-type{padding-block-start:var(--calcite-color-picker-spacing)}:host([scale=l]) .saved-colors{grid-template-columns:repeat(auto-fill,32px)}:host([scale=l]) .control-section{display:flex;flex-direction:column;flex-wrap:wrap;align-items:baseline}:host([scale=l]) .color-hex-options{inline-size:100%;display:flex;flex-shrink:1;flex-direction:column;justify-content:space-around}:host([scale=l]) .color-mode-container{flex-shrink:3}.container{background-color:var(--calcite-color-foreground-1);display:flex;flex-direction:column;block-size:min-content;border:1px solid var(--calcite-color-border-1)}.control-and-scope{position:relative;display:flex;cursor:pointer;touch-action:none}.color-field,.control-and-scope{-webkit-user-select:none;user-select:none}.scope{pointer-events:none;position:absolute;z-index:var(--calcite-z-index);block-size:1px;inline-size:1px;border-radius:9999px;background-color:transparent;font-size:var(--calcite-font-size--1);outline-color:transparent}.scope:focus{outline:2px solid var(--calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)));outline-offset:calc(2px*(1 - (2*clamp(0,var(--calcite-offset-invert-focus),1))));outline-offset:6px}.hex-and-channels-group{display:flex;inline-size:100%;flex-direction:column;flex-wrap:wrap}.section{padding-block:0 var(--calcite-color-picker-spacing);padding-inline:var(--calcite-color-picker-spacing)}.section:first-of-type{padding-block-start:var(--calcite-color-picker-spacing)}.sliders{display:flex;flex-direction:column;justify-content:space-between;margin-inline-start:var(--calcite-color-picker-spacing);gap:var(--calcite-spacing-xxs)}.preview-and-sliders{display:flex;align-items:center;padding:var(--calcite-color-picker-spacing)}.color-hex-options,.section--split{flex-grow:1}.header{display:flex;align-items:center;justify-content:space-between;color:var(--calcite-color-text-1)}.color-mode-container{padding-block-start:var(--calcite-color-picker-spacing)}.channels{display:flex}.channel{flex-grow:1}.channel[data-channel-index=\"3\"]{margin-inline-start:-1px;min-inline-size:81px}:host([scale=s]) .channel[data-channel-index=\"3\"]{min-inline-size:68px}:host([scale=l]) .channel[data-channel-index=\"3\"]{min-inline-size:88px}.saved-colors{display:grid;gap:.5rem;padding-block-start:var(--calcite-color-picker-spacing);grid-template-columns:repeat(auto-fill,24px)}.saved-colors-buttons{display:flex}.saved-color{outline-offset:0;outline-color:transparent;cursor:pointer}.saved-color:focus{outline:2px solid var(--calcite-color-brand);outline-offset:2px}.saved-color:hover{transition:outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;outline:2px solid var(--calcite-color-border-2);outline-offset:2px}:host([hidden]){display:none}[hidden]{display:none}`;\nconst throttleFor60FpsInMs = 16;\nclass ColorPicker extends LitElement {\n  constructor() {\n    super();\n    this._color = DEFAULT_COLOR;\n    this.internalColorUpdateContext = null;\n    this.isActiveChannelInputEmpty = false;\n    this.mode = CSSColorMode.HEX;\n    this.resizeObserver = createObserver(\"resize\", (entries) => this.resizeCanvas(entries));\n    this.shiftKeyChannelAdjustment = 0;\n    this.upOrDownArrowKeyTracker = null;\n    this._valueWasSet = false;\n    this.messages = useT9n({ blocking: true });\n    this.captureColorFieldColor = (x, y, skipEqual = true) => {\n      const { width, height } = this.dynamicDimensions.colorField;\n      const saturation = Math.round(HSV_LIMITS.s / width * x);\n      const value = Math.round(HSV_LIMITS.v / height * (height - y));\n      this.internalColorSet(this.baseColorFieldColor.hsv().saturationv(saturation).value(value), skipEqual);\n    };\n    this.drawColorControls = throttle((type = \"all\") => {\n      if ((type === \"all\" || type === \"color-field\") && this.colorFieldRenderingContext) {\n        this.drawColorField();\n      }\n      if ((type === \"all\" || type === \"hue-slider\") && this.hueSliderRenderingContext) {\n        this.drawHueSlider();\n      }\n      if (this.alphaChannel && (type === \"all\" || type === \"opacity-slider\") && this.opacitySliderRenderingContext) {\n        this.drawOpacitySlider();\n      }\n    }, throttleFor60FpsInMs);\n    this.globalPointerMoveHandler = (event) => {\n      const { activeCanvasInfo, el } = this;\n      if (!el.isConnected || !activeCanvasInfo) {\n        return;\n      }\n      const { context, bounds } = activeCanvasInfo;\n      let samplingX;\n      let samplingY;\n      const { clientX, clientY } = event;\n      if (context.canvas.matches(\":hover\")) {\n        samplingX = clientX - bounds.x;\n        samplingY = clientY - bounds.y;\n      } else {\n        if (clientX < bounds.x + bounds.width && clientX > bounds.x) {\n          samplingX = clientX - bounds.x;\n        } else if (clientX < bounds.x) {\n          samplingX = 0;\n        } else {\n          samplingX = bounds.width;\n        }\n        if (clientY < bounds.y + bounds.height && clientY > bounds.y) {\n          samplingY = clientY - bounds.y;\n        } else if (clientY < bounds.y) {\n          samplingY = 0;\n        } else {\n          samplingY = bounds.height;\n        }\n      }\n      if (context === this.colorFieldRenderingContext) {\n        this.captureColorFieldColor(samplingX, samplingY, false);\n      } else if (context === this.hueSliderRenderingContext) {\n        this.captureHueSliderColor(samplingX);\n      } else if (context === this.opacitySliderRenderingContext) {\n        this.captureOpacitySliderValue(samplingX);\n      }\n    };\n    this.globalPointerUpHandler = (event) => {\n      if (!isPrimaryPointerButton(event)) {\n        return;\n      }\n      const previouslyDragging = this.activeCanvasInfo;\n      this.activeCanvasInfo = null;\n      this.drawColorControls();\n      if (previouslyDragging) {\n        this.calciteColorPickerChange.emit();\n      }\n    };\n    this.resizeCanvas = throttle((entries) => {\n      if (!this.hasUpdated) {\n        return;\n      }\n      const [first] = entries;\n      const availableWidth = Math.floor(first.contentBoxSize[0].inlineSize);\n      if (this.dynamicDimensions.colorField.width === availableWidth) {\n        return;\n      }\n      this.updateDynamicDimensions(availableWidth);\n      this.updateCanvasSize();\n      this.drawColorControls();\n    }, throttleFor60FpsInMs);\n    this.updateDynamicDimensions = (width) => {\n      const sliderDims = {\n        width: getSliderWidth(width, this.staticDimensions, this.alphaChannel),\n        height: this.staticDimensions.slider.height\n      };\n      this.dynamicDimensions = {\n        colorField: getColorFieldDimensions(width),\n        slider: sliderDims\n      };\n    };\n    this.channelMode = \"rgb\";\n    this.channels = this.toChannels(DEFAULT_COLOR);\n    this.staticDimensions = STATIC_DIMENSIONS.m;\n    this.savedColors = [];\n    this.allowEmpty = false;\n    this.alphaChannel = false;\n    this.channelsDisabled = false;\n    this.clearable = false;\n    this.disabled = false;\n    this.format = \"auto\";\n    this.hexDisabled = false;\n    this.savedDisabled = false;\n    this.scale = \"m\";\n    this.calciteColorPickerChange = createEvent({ cancelable: false });\n    this.calciteColorPickerInput = createEvent({ cancelable: false });\n    this.listen(\"keydown\", this.handleChannelKeyUpOrDown, { capture: true });\n    this.listen(\"keyup\", this.handleChannelKeyUpOrDown, { capture: true });\n  }\n  static {\n    this.properties = { channelMode: [16, {}, { state: true }], channels: [16, {}, { state: true }], colorFieldScopeLeft: [16, {}, { state: true }], colorFieldScopeTop: [16, {}, { state: true }], staticDimensions: [16, {}, { state: true }], hueScopeLeft: [16, {}, { state: true }], opacityScopeLeft: [16, {}, { state: true }], savedColors: [16, {}, { state: true }], scopeOrientation: [16, {}, { state: true }], allowEmpty: [7, {}, { reflect: true, type: Boolean }], alphaChannel: [5, {}, { type: Boolean }], channelsDisabled: [5, {}, { type: Boolean }], clearable: [7, {}, { reflect: true, type: Boolean }], color: [0, {}, { attribute: false }], disabled: [7, {}, { reflect: true, type: Boolean }], format: [3, {}, { reflect: true }], hexDisabled: [5, {}, { type: Boolean }], messageOverrides: [0, {}, { attribute: false }], numberingSystem: [3, {}, { reflect: true }], savedDisabled: [7, {}, { reflect: true, type: Boolean }], scale: [3, {}, { reflect: true }], storageId: [3, {}, { reflect: true }], value: 1 };\n  }\n  static {\n    this.styles = styles;\n  }\n  get color() {\n    return this._color;\n  }\n  set color(color) {\n    const oldColor = this._color;\n    this._color = color;\n    this.handleColorChange(color, oldColor);\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    const oldValue = this._value;\n    this._value = value;\n    this.handleValueChange(value, oldValue);\n    this._valueWasSet = true;\n  }\n  async setFocus() {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.observeResize();\n  }\n  async load() {\n    if (!this._valueWasSet) {\n      this._value ??= normalizeHex(hexify(DEFAULT_COLOR, this.alphaChannel));\n    }\n    this.handleAllowEmptyOrClearableChange();\n    const { isClearable, color, format, value } = this;\n    const willSetNoColor = isClearable && !value;\n    const parsedMode = parseMode(value);\n    const valueIsCompatible = willSetNoColor || format === \"auto\" && parsedMode || format === parsedMode;\n    const initialColor = willSetNoColor ? null : valueIsCompatible ? Color(value) : color;\n    if (!valueIsCompatible) {\n      this.showIncompatibleColorWarning(value, format);\n    }\n    this.setMode(format, false);\n    this.internalColorSet(initialColor, false, \"initial\");\n    this.updateStaticDimensions(this.scale);\n    this.updateDynamicDimensions(STATIC_DIMENSIONS[this.scale].minWidth);\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n    if (this.storageId && localStorage.getItem(storageKey)) {\n      this.savedColors = JSON.parse(localStorage.getItem(storageKey));\n    }\n  }\n  willUpdate(changes) {\n    if (changes.has(\"allowEmpty\") && (this.hasUpdated || this.allowEmpty !== false) || changes.has(\"clearable\") && (this.hasUpdated || this.clearable !== false)) {\n      this.handleAllowEmptyOrClearableChange();\n    }\n    if (changes.has(\"alphaChannel\") && (this.hasUpdated || this.alphaChannel !== false)) {\n      this.handleAlphaChannelChange(this.alphaChannel);\n    }\n    if (this.hasUpdated && (changes.has(\"alphaChannel\") && this.alphaChannel !== false || changes.has(\"staticDimensions\") && this.staticDimensions !== STATIC_DIMENSIONS.m)) {\n      this.handleAlphaChannelDimensionsChange();\n    }\n    if (changes.has(\"alphaChannel\") && (this.hasUpdated || this.alphaChannel !== false) || changes.has(\"format\") && (this.hasUpdated || this.format !== \"auto\")) {\n      this.handleFormatOrAlphaChannelChange();\n    }\n    if (changes.has(\"scale\") && (this.hasUpdated || this.scale !== \"m\")) {\n      this.handleScaleChange(this.scale);\n    }\n  }\n  updated() {\n    updateHostInteraction(this);\n  }\n  loaded() {\n    this.handleAlphaChannelDimensionsChange();\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    window.removeEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.removeEventListener(\"pointerup\", this.globalPointerUpHandler);\n    this.resizeObserver?.disconnect();\n  }\n  get baseColorFieldColor() {\n    return this.color || this.previousColor || DEFAULT_COLOR;\n  }\n  get effectiveSliderWidth() {\n    return this.dynamicDimensions.slider.width;\n  }\n  observeResize() {\n    this.resizeObserver?.observe(this.el);\n  }\n  handleAllowEmptyOrClearableChange() {\n    this.isClearable = this.clearable || this.allowEmpty;\n  }\n  handleAlphaChannelChange(alphaChannel) {\n    const { format } = this;\n    if (alphaChannel && format !== \"auto\" && !alphaCompatible(format)) {\n      console.warn(`ignoring alphaChannel as the current format (${format}) does not support alpha`);\n      this.alphaChannel = false;\n    }\n  }\n  handleAlphaChannelDimensionsChange() {\n    this.drawColorControls();\n  }\n  handleColorChange(color, oldColor) {\n    this.drawColorControls();\n    this.updateChannelsFromColor(color);\n    this.previousColor = oldColor;\n  }\n  handleFormatOrAlphaChannelChange() {\n    this.setMode(this.format);\n    this.internalColorSet(this.color, false, \"internal\");\n  }\n  handleScaleChange(scale = \"m\") {\n    this.updateStaticDimensions(scale);\n    this.updateCanvasSize();\n    this.drawColorControls();\n  }\n  handleValueChange(value, oldValue) {\n    const { isClearable, format } = this;\n    const checkMode = !isClearable || value;\n    let modeChanged = false;\n    if (checkMode) {\n      const nextMode = parseMode(value);\n      if (!nextMode || format !== \"auto\" && nextMode !== format) {\n        this.showIncompatibleColorWarning(value, format);\n        this._value = oldValue;\n        return;\n      }\n      modeChanged = this.mode !== nextMode;\n      this.setMode(nextMode, this.internalColorUpdateContext === null);\n    }\n    const dragging = this.activeCanvasInfo;\n    if (this.internalColorUpdateContext === \"initial\") {\n      return;\n    }\n    if (this.internalColorUpdateContext === \"user-interaction\") {\n      this.calciteColorPickerInput.emit();\n      if (!dragging) {\n        this.calciteColorPickerChange.emit();\n      }\n      return;\n    }\n    const color = isClearable && !value ? null : Color(value != null && typeof value === \"object\" && alphaCompatible(this.mode) ? normalizeColor(value) : value);\n    const colorChanged = !colorEqual(color, this.color);\n    if (modeChanged || colorChanged) {\n      this.internalColorSet(color, this.alphaChannel && !(this.mode.endsWith(\"a\") || this.mode.endsWith(\"a-css\")) || this.internalColorUpdateContext === \"internal\", \"internal\");\n    }\n  }\n  handleTabActivate(event) {\n    this.channelMode = event.currentTarget.getAttribute(\"data-color-mode\");\n    this.updateChannelsFromColor(this.color);\n  }\n  handleColorFieldScopeKeyDown(event) {\n    const { key } = event;\n    const arrowKeyToXYOffset = {\n      ArrowUp: { x: 0, y: -10 },\n      ArrowRight: { x: 10, y: 0 },\n      ArrowDown: { x: 0, y: 10 },\n      ArrowLeft: { x: -10, y: 0 }\n    };\n    if (arrowKeyToXYOffset[key]) {\n      event.preventDefault();\n      this.scopeOrientation = key === \"ArrowDown\" || key === \"ArrowUp\" ? \"vertical\" : \"horizontal\";\n      this.captureColorFieldColor(this.colorFieldScopeLeft + arrowKeyToXYOffset[key].x || 0, this.colorFieldScopeTop + arrowKeyToXYOffset[key].y || 0, false);\n    }\n  }\n  handleHueScopeKeyDown(event) {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 1,\n      ArrowRight: 1,\n      ArrowDown: -1,\n      ArrowLeft: -1\n    };\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const hue = this.baseColorFieldColor.hue();\n      const color = this.baseColorFieldColor.hue(hue + delta);\n      this.internalColorSet(color, false);\n    }\n  }\n  handleHexInputChange(event) {\n    event.stopPropagation();\n    const { isClearable, color } = this;\n    const input = event.target;\n    const hex = input.value;\n    if (isClearable && !hex) {\n      this.internalColorSet(null);\n      return;\n    }\n    const normalizedHex = color && normalizeHex(hexify(color, alphaCompatible(this.mode)));\n    if (hex !== normalizedHex) {\n      this.internalColorSet(Color(hex));\n    }\n  }\n  handleSavedColorSelect(event) {\n    const swatch = event.currentTarget;\n    this.internalColorSet(Color(swatch.color));\n  }\n  handleChannelInput(event) {\n    const input = event.currentTarget;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const isAlphaChannel = channelIndex === 3;\n    const limit = isAlphaChannel ? OPACITY_LIMITS.max : this.channelMode === \"rgb\" ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]] : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n    let inputValue;\n    if (!input.value) {\n      inputValue = \"\";\n      this.isActiveChannelInputEmpty = true;\n      this.upOrDownArrowKeyTracker = null;\n    } else {\n      const value = Number(input.value);\n      const adjustedValue = value + this.shiftKeyChannelAdjustment;\n      const clamped = clamp(adjustedValue, 0, limit);\n      inputValue = clamped.toString();\n    }\n    input.value = inputValue;\n    if (inputValue !== \"\" && this.shiftKeyChannelAdjustment !== 0) {\n      this.handleChannelChange(event);\n    } else if (inputValue !== \"\") {\n      this.handleChannelChange(event);\n    }\n  }\n  handleChannelBlur(event) {\n    const input = event.currentTarget;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const channels = [...this.channels];\n    const restoreValueDueToEmptyInput = !input.value && !this.isClearable;\n    if (restoreValueDueToEmptyInput) {\n      input.value = channels[channelIndex]?.toString();\n    }\n  }\n  handleChannelFocus(event) {\n    const input = event.currentTarget;\n    input.selectText();\n  }\n  handleChannelKeyUpOrDown(event) {\n    this.shiftKeyChannelAdjustment = 0;\n    const { key } = event;\n    if (key !== \"ArrowUp\" && key !== \"ArrowDown\" || !event.composedPath().some((node) => node.classList?.contains(CSS.channel))) {\n      return;\n    }\n    const { shiftKey } = event;\n    event.preventDefault();\n    if (!this.color) {\n      this.internalColorSet(this.previousColor);\n      event.stopPropagation();\n      return;\n    }\n    const complementaryBump = 9;\n    this.shiftKeyChannelAdjustment = key === \"ArrowUp\" && shiftKey ? complementaryBump : key === \"ArrowDown\" && shiftKey ? -9 : 0;\n    if (key === \"ArrowUp\") {\n      this.upOrDownArrowKeyTracker = \"up\";\n    }\n    if (key === \"ArrowDown\") {\n      this.upOrDownArrowKeyTracker = \"down\";\n    }\n  }\n  getChannelInputLimit(channelIndex) {\n    return this.channelMode === \"rgb\" ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]] : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n  }\n  handleChannelChange(event) {\n    const input = event.currentTarget;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const channels = [...this.channels];\n    const shouldClearChannels = this.isClearable && !input.value;\n    if (shouldClearChannels) {\n      this.channels = [null, null, null, null];\n      this.internalColorSet(null);\n      return;\n    }\n    const isAlphaChannel = channelIndex === 3;\n    if (this.isActiveChannelInputEmpty && this.upOrDownArrowKeyTracker) {\n      input.value = this.upOrDownArrowKeyTracker === \"up\" ? (channels[channelIndex] + 1 <= this.getChannelInputLimit(channelIndex) ? channels[channelIndex] + 1 : this.getChannelInputLimit(channelIndex)).toString() : (channels[channelIndex] - 1 >= 0 ? channels[channelIndex] - 1 : 0).toString();\n      this.isActiveChannelInputEmpty = false;\n      this.upOrDownArrowKeyTracker = null;\n    }\n    const value = input.value ? Number(input.value) : channels[channelIndex];\n    channels[channelIndex] = isAlphaChannel ? opacityToAlpha(value) : value;\n    this.updateColorFromChannels(channels);\n  }\n  handleSavedColorKeyDown(event) {\n    if (isActivationKey(event.key)) {\n      event.preventDefault();\n      this.handleSavedColorSelect(event);\n    }\n  }\n  handleColorFieldPointerDown(event) {\n    this.handleCanvasControlPointerDown(event, this.colorFieldRenderingContext, this.captureColorFieldColor, this.colorFieldScopeNode);\n  }\n  focusScope(focusEl) {\n    requestAnimationFrame(() => {\n      focusEl.focus();\n    });\n  }\n  handleHueSliderPointerDown(event) {\n    this.handleCanvasControlPointerDown(event, this.hueSliderRenderingContext, this.captureHueSliderColor, this.hueScopeNode);\n  }\n  handleOpacitySliderPointerDown(event) {\n    this.handleCanvasControlPointerDown(event, this.opacitySliderRenderingContext, this.captureOpacitySliderValue, this.opacityScopeNode);\n  }\n  handleCanvasControlPointerDown(event, renderingContext, captureValue, scopeNode) {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, {\n      once: true\n    });\n    this.activeCanvasInfo = {\n      context: renderingContext,\n      bounds: renderingContext.canvas.getBoundingClientRect()\n    };\n    captureValue.call(this, event.offsetX, event.offsetY);\n    this.focusScope(scopeNode);\n  }\n  storeColorFieldScope(node) {\n    this.colorFieldScopeNode = node;\n  }\n  storeHueScope(node) {\n    this.hueScopeNode = node;\n  }\n  handleKeyDown(event) {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n  showIncompatibleColorWarning(value, format) {\n    console.warn(`ignoring color value (${value}) as it is not compatible with the current format (${format})`);\n  }\n  setMode(format, warn = true) {\n    const mode = format === \"auto\" ? this.mode : format;\n    this.mode = this.ensureCompatibleMode(mode, warn);\n  }\n  ensureCompatibleMode(mode, warn) {\n    const { alphaChannel } = this;\n    const isAlphaCompatible = alphaCompatible(mode);\n    if (alphaChannel && !isAlphaCompatible) {\n      const alphaMode = toAlphaMode(mode);\n      if (warn) {\n        console.warn(`setting format to (${alphaMode}) as the provided one (${mode}) does not support alpha`);\n      }\n      return alphaMode;\n    }\n    if (!alphaChannel && isAlphaCompatible) {\n      const nonAlphaMode = toNonAlphaMode(mode);\n      if (warn) {\n        console.warn(`setting format to (${nonAlphaMode}) as the provided one (${mode}) does not support alpha`);\n      }\n      return nonAlphaMode;\n    }\n    return mode;\n  }\n  captureHueSliderColor(x) {\n    const hue = HUE_LIMIT_CONSTRAINED / this.effectiveSliderWidth * x;\n    this.internalColorSet(this.baseColorFieldColor.hue(hue), false);\n  }\n  captureOpacitySliderValue(x) {\n    const alpha = opacityToAlpha(OPACITY_LIMITS.max / this.effectiveSliderWidth * x);\n    this.internalColorSet(this.baseColorFieldColor.alpha(alpha), false);\n  }\n  internalColorSet(color, skipEqual = true, context = \"user-interaction\") {\n    if (skipEqual && colorEqual(color, this.color)) {\n      return;\n    }\n    this.internalColorUpdateContext = context;\n    this.color = color;\n    this.value = this.toValue(color);\n    this.internalColorUpdateContext = null;\n  }\n  toValue(color, format = this.mode) {\n    if (!color) {\n      return null;\n    }\n    const hexMode = \"hex\";\n    if (format.includes(hexMode)) {\n      const hasAlpha = format === CSSColorMode.HEXA;\n      return normalizeHex(hexify(color.round(), hasAlpha), hasAlpha);\n    }\n    if (format.includes(\"-css\")) {\n      const value = color[format.replace(\"-css\", \"\").replace(\"a\", \"\")]().round().string();\n      const needToInjectAlpha = (format.endsWith(\"a\") || format.endsWith(\"a-css\")) && color.alpha() === 1;\n      if (needToInjectAlpha) {\n        const model = value.slice(0, 3);\n        const values = value.slice(4, -1);\n        return `${model}a(${values}, ${color.alpha()})`;\n      }\n      return value;\n    }\n    const colorObject = (\n      /* Color() does not support hsva, hsla nor rgba, so we use the non-alpha mode */\n      color[toNonAlphaMode(format)]().round().object()\n    );\n    if (format.endsWith(\"a\")) {\n      return normalizeAlpha(colorObject);\n    }\n    return colorObject;\n  }\n  getSliderCapSpacing() {\n    const { staticDimensions: { slider: { height }, thumb: { radius } } } = this;\n    return radius * 2 - height;\n  }\n  updateStaticDimensions(scale = \"m\") {\n    this.staticDimensions = STATIC_DIMENSIONS[scale];\n  }\n  deleteColor() {\n    const colorToDelete = hexify(this.color, this.alphaChannel);\n    const inStorage = this.savedColors.indexOf(colorToDelete) > -1;\n    if (!inStorage) {\n      return;\n    }\n    const savedColors = this.savedColors.filter((color) => color !== colorToDelete);\n    this.savedColors = savedColors;\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  }\n  saveColor() {\n    const colorToSave = hexify(this.color, this.alphaChannel);\n    const alreadySaved = this.savedColors.indexOf(colorToSave) > -1;\n    if (alreadySaved) {\n      return;\n    }\n    const savedColors = [...this.savedColors, colorToSave];\n    this.savedColors = savedColors;\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  }\n  drawColorField() {\n    const context = this.colorFieldRenderingContext;\n    const { width, height } = this.dynamicDimensions.colorField;\n    context.fillStyle = this.baseColorFieldColor.hsv().saturationv(100).value(100).alpha(1).string();\n    context.fillRect(0, 0, width, height);\n    const whiteGradient = context.createLinearGradient(0, 0, width, 0);\n    whiteGradient.addColorStop(0, \"rgba(255,255,255,1)\");\n    whiteGradient.addColorStop(1, \"rgba(255,255,255,0)\");\n    context.fillStyle = whiteGradient;\n    context.fillRect(0, 0, width, height);\n    const blackGradient = context.createLinearGradient(0, 0, 0, height);\n    blackGradient.addColorStop(0, \"rgba(0,0,0,0)\");\n    blackGradient.addColorStop(1, \"rgba(0,0,0,1)\");\n    context.fillStyle = blackGradient;\n    context.fillRect(0, 0, width, height);\n    this.drawActiveColorFieldColor();\n  }\n  setCanvasContextSize(canvas, { height, width }) {\n    if (!canvas) {\n      return;\n    }\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.height = `${height}px`;\n    canvas.style.width = `${width}px`;\n    const context = canvas.getContext(\"2d\");\n    context.scale(devicePixelRatio, devicePixelRatio);\n  }\n  initColorField(canvas) {\n    if (!canvas) {\n      return;\n    }\n    this.colorFieldRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"color-field\");\n    this.drawColorControls();\n  }\n  initHueSlider(canvas) {\n    if (!canvas) {\n      return;\n    }\n    this.hueSliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"hue-slider\");\n    this.drawHueSlider();\n  }\n  initOpacitySlider(canvas) {\n    if (!canvas) {\n      return;\n    }\n    this.opacitySliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"opacity-slider\");\n    this.drawOpacitySlider();\n  }\n  updateCanvasSize(context = \"all\") {\n    const { dynamicDimensions, staticDimensions } = this;\n    if (context === \"all\" || context === \"color-field\") {\n      this.setCanvasContextSize(this.colorFieldRenderingContext?.canvas, dynamicDimensions.colorField);\n    }\n    const adjustedSliderDimensions = {\n      width: this.effectiveSliderWidth,\n      height: staticDimensions.slider.height + (staticDimensions.thumb.radius - dynamicDimensions.slider.height / 2) * 2\n    };\n    if (context === \"all\" || context === \"hue-slider\") {\n      this.setCanvasContextSize(this.hueSliderRenderingContext?.canvas, adjustedSliderDimensions);\n    }\n    if (context === \"all\" || context === \"opacity-slider\") {\n      this.setCanvasContextSize(this.opacitySliderRenderingContext?.canvas, adjustedSliderDimensions);\n    }\n  }\n  drawActiveColorFieldColor() {\n    const { color } = this;\n    if (!color) {\n      return;\n    }\n    const hsvColor = color.hsv();\n    const { staticDimensions: { thumb: { radius } } } = this;\n    const { width, height } = this.dynamicDimensions.colorField;\n    const x = hsvColor.saturationv() / (HSV_LIMITS.s / width);\n    const y = height - hsvColor.value() / (HSV_LIMITS.v / height);\n    requestAnimationFrame(() => {\n      this.colorFieldScopeLeft = x;\n      this.colorFieldScopeTop = y;\n    });\n    this.drawThumb(this.colorFieldRenderingContext, radius, x, y, hsvColor, false);\n  }\n  drawThumb(context, radius, x, y, color, applyAlpha) {\n    const startAngle = 0;\n    const endAngle = 2 * Math.PI;\n    const outlineWidth = 1;\n    context.beginPath();\n    context.arc(x, y, radius, startAngle, endAngle);\n    context.fillStyle = \"#fff\";\n    context.fill();\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = outlineWidth;\n    context.stroke();\n    if (applyAlpha && color.alpha() < 1) {\n      const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n      context.beginPath();\n      context.arc(x, y, radius - 3, startAngle, endAngle);\n      context.fillStyle = pattern;\n      context.fill();\n    }\n    context.globalCompositeOperation = \"source-atop\";\n    context.beginPath();\n    context.arc(x, y, radius - 3, startAngle, endAngle);\n    const alpha = applyAlpha ? color.alpha() : 1;\n    context.fillStyle = color.rgb().alpha(alpha).string();\n    context.fill();\n    context.globalCompositeOperation = \"source-over\";\n  }\n  drawActiveHueSliderColor() {\n    const { color } = this;\n    if (!color) {\n      return;\n    }\n    const hsvColor = color.hsv().saturationv(100).value(100);\n    const { staticDimensions: { thumb: { radius } } } = this;\n    const width = this.effectiveSliderWidth;\n    const x = hsvColor.hue() / (HUE_LIMIT_CONSTRAINED / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n    requestAnimationFrame(() => {\n      this.hueScopeLeft = sliderBoundX;\n    });\n    this.drawThumb(this.hueSliderRenderingContext, radius, sliderBoundX, y, hsvColor, false);\n  }\n  drawHueSlider() {\n    const context = this.hueSliderRenderingContext;\n    const { staticDimensions: { slider: { height }, thumb: { radius: thumbRadius } } } = this;\n    const x = 0;\n    const y = thumbRadius - height / 2;\n    const width = this.effectiveSliderWidth;\n    const gradient = context.createLinearGradient(0, 0, width, 0);\n    const hueSliderColorStopKeywords = [\n      \"red\",\n      \"yellow\",\n      \"lime\",\n      \"cyan\",\n      \"blue\",\n      \"magenta\",\n      \"#ff0004\"\n    ];\n    const offset = 1 / (hueSliderColorStopKeywords.length - 1);\n    let currentOffset = 0;\n    hueSliderColorStopKeywords.forEach((keyword) => {\n      gradient.addColorStop(currentOffset, Color(keyword).string());\n      currentOffset += offset;\n    });\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n    this.drawSliderPath(context, height, width, x, y);\n    context.fillStyle = gradient;\n    context.fill();\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n    this.drawActiveHueSliderColor();\n  }\n  drawOpacitySlider() {\n    const context = this.opacitySliderRenderingContext;\n    const { baseColorFieldColor: previousColor, staticDimensions: { slider: { height }, thumb: { radius: thumbRadius } } } = this;\n    const x = 0;\n    const y = thumbRadius - height / 2;\n    const width = this.effectiveSliderWidth;\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n    const gradient = context.createLinearGradient(0, y, width, 0);\n    const startColor = previousColor.rgb().alpha(0);\n    const midColor = previousColor.rgb().alpha(0.5);\n    const endColor = previousColor.rgb().alpha(1);\n    gradient.addColorStop(0, startColor.string());\n    gradient.addColorStop(0.5, midColor.string());\n    gradient.addColorStop(1, endColor.string());\n    this.drawSliderPath(context, height, width, x, y);\n    const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n    context.fillStyle = pattern;\n    context.fill();\n    context.fillStyle = gradient;\n    context.fill();\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n    this.drawActiveOpacitySliderColor();\n  }\n  drawSliderPath(context, height, width, x, y) {\n    const radius = height / 2 + 1;\n    context.beginPath();\n    context.moveTo(x + radius, y);\n    context.lineTo(x + width - radius, y);\n    context.quadraticCurveTo(x + width, y, x + width, y + radius);\n    context.lineTo(x + width, y + height - radius);\n    context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    context.lineTo(x + radius, y + height);\n    context.quadraticCurveTo(x, y + height, x, y + height - radius);\n    context.lineTo(x, y + radius);\n    context.quadraticCurveTo(x, y, x + radius, y);\n    context.closePath();\n  }\n  getCheckeredBackgroundPattern() {\n    if (this.checkerPattern) {\n      return this.checkerPattern;\n    }\n    const pattern = document.createElement(\"canvas\");\n    pattern.width = 10;\n    pattern.height = 10;\n    const patternContext = pattern.getContext(\"2d\");\n    patternContext.fillStyle = \"#ccc\";\n    patternContext.fillRect(0, 0, 10, 10);\n    patternContext.fillStyle = \"#fff\";\n    patternContext.fillRect(0, 0, 5, 5);\n    patternContext.fillRect(5, 5, 5, 5);\n    this.checkerPattern = pattern;\n    return pattern;\n  }\n  drawActiveOpacitySliderColor() {\n    const { color } = this;\n    if (!color) {\n      return;\n    }\n    const hsvColor = color;\n    const { staticDimensions: { thumb: { radius } } } = this;\n    const width = this.effectiveSliderWidth;\n    const x = alphaToOpacity(hsvColor.alpha()) / (OPACITY_LIMITS.max / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n    requestAnimationFrame(() => {\n      this.opacityScopeLeft = sliderBoundX;\n    });\n    this.drawThumb(this.opacitySliderRenderingContext, radius, sliderBoundX, y, hsvColor, true);\n  }\n  getSliderBoundX(x, width, radius) {\n    const closeToEdge = closeToRangeEdge(x, width, radius);\n    return closeToEdge === 0 ? x : closeToEdge === -1 ? remap(x, 0, width, radius, radius * 2) : remap(x, 0, width, width - radius * 2, width - radius);\n  }\n  storeOpacityScope(node) {\n    this.opacityScopeNode = node;\n  }\n  handleOpacityScopeKeyDown(event) {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 0.01,\n      ArrowRight: 0.01,\n      ArrowDown: -0.01,\n      ArrowLeft: -0.01\n    };\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const alpha = this.baseColorFieldColor.alpha();\n      const color = this.baseColorFieldColor.alpha(alpha + delta);\n      this.internalColorSet(color, false);\n    }\n  }\n  updateColorFromChannels(channels) {\n    this.internalColorSet(Color(channels, this.channelMode));\n  }\n  updateChannelsFromColor(color) {\n    this.channels = color ? this.toChannels(color) : [null, null, null, null];\n  }\n  toChannels(color) {\n    const { channelMode } = this;\n    const channels = color[channelMode]().array().map((value, index) => {\n      const isAlpha = index === 3;\n      return isAlpha ? value : Math.floor(value);\n    });\n    if (channels.length === 3) {\n      channels.push(1);\n    }\n    return channels;\n  }\n  getAdjustedScopePosition(left, top) {\n    return [left - SCOPE_SIZE / 2, top - SCOPE_SIZE / 2];\n  }\n  render() {\n    const { channelsDisabled, color, colorFieldScopeLeft, colorFieldScopeTop, staticDimensions: { thumb: { radius: thumbRadius } }, hexDisabled, hueScopeLeft, messages, alphaChannel, opacityScopeLeft, savedColors, savedDisabled, scale, scopeOrientation } = this;\n    const sliderWidth = this.effectiveSliderWidth;\n    const selectedColorInHex = color ? hexify(color, alphaChannel) : null;\n    const hueTop = thumbRadius;\n    const hueLeft = hueScopeLeft ?? sliderWidth * DEFAULT_COLOR.hue() / HSV_LIMITS.h;\n    const opacityTop = thumbRadius;\n    const opacityLeft = opacityScopeLeft ?? sliderWidth * alphaToOpacity(DEFAULT_COLOR.alpha()) / OPACITY_LIMITS.max;\n    const noColor = color === void 0;\n    const vertical = scopeOrientation === \"vertical\";\n    const [adjustedColorFieldScopeLeft, adjustedColorFieldScopeTop] = this.getAdjustedScopePosition(colorFieldScopeLeft, colorFieldScopeTop);\n    const [adjustedHueScopeLeft, adjustedHueScopeTop] = this.getAdjustedScopePosition(hueLeft, hueTop);\n    const [adjustedOpacityScopeLeft, adjustedOpacityScopeTop] = this.getAdjustedScopePosition(opacityLeft, opacityTop);\n    return InteractiveContainer({ disabled: this.disabled, children: html`<div class=${safeClassMap(CSS.container)}><div class=${safeClassMap(CSS.controlAndScope)}><canvas class=${safeClassMap(CSS.colorField)} @pointerdown=${this.handleColorFieldPointerDown} ${ref(this.initColorField)}></canvas><div .ariaLabel=${vertical ? messages.value : messages.saturation} .ariaValueMax=${vertical ? HSV_LIMITS.v : HSV_LIMITS.s} aria-valuemin=0 .ariaValueNow=${(vertical ? color?.saturationv() : color?.value()) || \"0\"} class=${safeClassMap({ [CSS.scope]: true, [CSS.colorFieldScope]: true })} @keydown=${this.handleColorFieldScopeKeyDown} role=slider style=${safeStyleMap({\n      top: `${adjustedColorFieldScopeTop || 0}px`,\n      left: `${adjustedColorFieldScopeLeft || 0}px`\n    })} tabindex=0 ${ref(this.storeColorFieldScope)}></div></div><div class=${safeClassMap(CSS.previewAndSliders)}><calcite-color-picker-swatch class=${safeClassMap(CSS.preview)} .color=${selectedColorInHex} .scale=${this.alphaChannel ? \"l\" : this.scale}></calcite-color-picker-swatch><div class=${safeClassMap(CSS.sliders)}><div class=${safeClassMap(CSS.controlAndScope)}><canvas class=${safeClassMap({ [CSS.slider]: true, [CSS.hueSlider]: true })} @pointerdown=${this.handleHueSliderPointerDown} ${ref(this.initHueSlider)}></canvas><div .ariaLabel=${messages.hue} .ariaValueMax=${HSV_LIMITS.h} aria-valuemin=0 .ariaValueNow=${color?.round().hue() || DEFAULT_COLOR.round().hue()} class=${safeClassMap({ [CSS.scope]: true, [CSS.hueScope]: true })} @keydown=${this.handleHueScopeKeyDown} role=slider style=${safeStyleMap({\n      top: `${adjustedHueScopeTop}px`,\n      left: `${adjustedHueScopeLeft}px`\n    })} tabindex=0 ${ref(this.storeHueScope)}></div></div>${alphaChannel ? html`<div class=${safeClassMap(CSS.controlAndScope)}><canvas class=${safeClassMap({ [CSS.slider]: true, [CSS.opacitySlider]: true })} @pointerdown=${this.handleOpacitySliderPointerDown} ${ref(this.initOpacitySlider)}></canvas><div .ariaLabel=${messages.opacity} .ariaValueMax=${OPACITY_LIMITS.max} .ariaValueMin=${OPACITY_LIMITS.min} .ariaValueNow=${(color || DEFAULT_COLOR).round().alpha()} class=${safeClassMap({ [CSS.scope]: true, [CSS.opacityScope]: true })} @keydown=${this.handleOpacityScopeKeyDown} role=slider style=${safeStyleMap({\n      top: `${adjustedOpacityScopeTop}px`,\n      left: `${adjustedOpacityScopeLeft}px`\n    })} tabindex=0 ${ref(this.storeOpacityScope)}></div></div>` : null}</div></div>${hexDisabled && channelsDisabled ? null : html`<div class=${safeClassMap({\n      [CSS.controlSection]: true,\n      [CSS.section]: true\n    })}><div class=${safeClassMap(CSS.hexAndChannelsGroup)}>${hexDisabled ? null : html`<div class=${safeClassMap(CSS.hexOptions)}><calcite-color-picker-hex-input .allowEmpty=${this.isClearable} .alphaChannel=${alphaChannel} class=${safeClassMap(CSS.control)} .messages=${messages} .numberingSystem=${this.numberingSystem} @calciteColorPickerHexInputChange=${this.handleHexInputChange} .scale=${scale} .value=${selectedColorInHex}></calcite-color-picker-hex-input></div>`}${channelsDisabled ? null : html`<calcite-tabs class=${safeClassMap({\n      [CSS.colorModeContainer]: true,\n      [CSS.splitSection]: true\n    })} .scale=${scale === \"l\" ? \"m\" : \"s\"}><calcite-tab-nav slot=title-group>${this.renderChannelsTabTitle(\"rgb\")}${this.renderChannelsTabTitle(\"hsv\")}</calcite-tab-nav>${this.renderChannelsTab(\"rgb\")}${this.renderChannelsTab(\"hsv\")}</calcite-tabs>`}</div></div>`}${savedDisabled ? null : html`<div class=${safeClassMap({ [CSS.savedColorsSection]: true, [CSS.section]: true })}><div class=${safeClassMap(CSS.header)}><label>${messages.saved}</label><div class=${safeClassMap(CSS.savedColorsButtons)}><calcite-button appearance=transparent class=${safeClassMap(CSS.deleteColor)} .disabled=${noColor} icon-start=minus kind=neutral .label=${messages.deleteColor} @click=${this.deleteColor} .scale=${scale} type=button></calcite-button><calcite-button appearance=transparent class=${safeClassMap(CSS.saveColor)} .disabled=${noColor} icon-start=plus kind=neutral .label=${messages.saveColor} @click=${this.saveColor} .scale=${scale} type=button></calcite-button></div></div>${savedColors.length > 0 ? html`<div class=${safeClassMap(CSS.savedColors)}>${repeat(savedColors, (color2) => color2, (color2) => html`<calcite-color-picker-swatch class=${safeClassMap(CSS.savedColor)} .color=${color2} @click=${this.handleSavedColorSelect} @keydown=${this.handleSavedColorKeyDown} .scale=${scale} tabindex=0></calcite-color-picker-swatch>`)}</div>` : null}</div>`}</div>` });\n  }\n  renderChannelsTabTitle(channelMode) {\n    const { channelMode: activeChannelMode, messages } = this;\n    const selected = channelMode === activeChannelMode;\n    const label = channelMode === \"rgb\" ? messages.rgb : messages.hsv;\n    return keyed(channelMode, html`<calcite-tab-title class=${safeClassMap(CSS.colorMode)} data-color-mode=${channelMode ?? nothing} @calciteTabsActivate=${this.handleTabActivate} .selected=${selected}>${label}</calcite-tab-title>`);\n  }\n  renderChannelsTab(channelMode) {\n    const { isClearable, channelMode: activeChannelMode, channels, messages, alphaChannel } = this;\n    const selected = channelMode === activeChannelMode;\n    const isRgb = channelMode === \"rgb\";\n    const channelAriaLabels = isRgb ? [messages.red, messages.green, messages.blue] : [messages.hue, messages.saturation, messages.value];\n    const direction = getElementDir(this.el);\n    const channelsToRender = alphaChannel ? channels : channels.slice(0, 3);\n    return keyed(channelMode, html`<calcite-tab class=${safeClassMap(CSS.control)} .selected=${selected}><div class=${safeClassMap(CSS.channels)} dir=ltr>${channelsToRender.map((channelValue, index) => {\n      const isAlphaChannel = index === 3;\n      if (isAlphaChannel) {\n        channelValue = isClearable && !channelValue ? channelValue : alphaToOpacity(channelValue);\n      }\n      return this.renderChannel(channelValue, index, channelAriaLabels[index], direction, isAlphaChannel ? \"%\" : \"\");\n    })}</div></calcite-tab>`);\n  }\n  renderChannel(value, index, ariaLabel, direction, suffix) {\n    return keyed(index, html`<calcite-input-number class=${safeClassMap(CSS.channel)} data-channel-index=${index ?? nothing} dir=${direction ?? nothing} .label=${ariaLabel} lang=${this.messages._lang ?? nothing} number-button-type=none .numberingSystem=${this.numberingSystem} @keydown=${this.handleKeyDown} @calciteInputNumberChange=${this.handleChannelChange} @calciteInputNumberInput=${this.handleChannelInput} @calciteInternalInputNumberBlur=${this.handleChannelBlur} @calciteInternalInputNumberFocus=${this.handleChannelFocus} .scale=${this.scale === \"l\" ? \"m\" : \"s\"} style=${safeStyleMap({\n      marginLeft: index > 0 && !(this.scale === \"s\" && this.alphaChannel && index === 3) ? \"-1px\" : \"\"\n    })} .suffixText=${suffix} .value=${value?.toString()}></calcite-input-number>`);\n  }\n}\ncustomElement(\"calcite-color-picker\", ColorPicker);\nexport {\n  ColorPicker\n};\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n"],"names":["u","generateMap","e","s","t","r","Map","l","set","c","constructor","super","type","CHILD","Error","dt","o","i","values","keys","render","this","update","_ref","_this$ut","d","p","a","Array","isArray","ut","h","v","m","y","x","j","length","k","w","has","get","n","f","CSS","styles","css","_templateObject","_taggedTemplateLiteral","DEFAULT_COLOR","Color","ColorPickerHexInput","LitElement","arguments","internalColor","alphaChannel","allowEmpty","hexLabel","scale","value","normalizeHex","hexify","calciteColorPickerHexInputChange","createEvent","cancelable","setFocus","componentFocusable","focusElement","hexInputNode","connectedCallback","previousNonNullValue","normalized","isValidHex","internalSetValue","willUpdate","changes","hasUpdated","onHexInputBlur","node","inputValue","hex","concat","willClearValue","isLonghand","isLonghandHex","isShorthandHex","onHexInputChange","formatHexForInternalInput","rgbToHex","object","onOpacityInputBlur","opacityInputNode","formatOpacityForInternalInput","onOpacityInputInput","onOpacityInputChange","alphaHex","hexa","slice","_this$internalColor","alpha","opacityToAlpha","Number","onInputFocus","event","selectText","onHexInputInput","hexInputValue","oldValue","onInputKeyDown","altKey","ctrlKey","metaKey","shiftKey","key","composedPath","includes","preventDefault","isNudgeKey","direction","bump","nudgeRGBChannels","withModifiers","singleChar","validHexChar","hexChar","test","onHexInputPaste","clipboardData","getData","emit","undefined","currentColor","nextColor","normalizedLonghand","changed","storeHexInputRef","storeOpacityInputRef","replace","color","alphaToOpacity","amount","context","nudgedChannels","channels","array","rgbChannels","map","channel","nudgedAlpha","messages","opacityInputValue","inputScale","html","_templateObject2","safeClassMap","ref","keyed","_templateObject3","opacity","OPACITY_LIMITS","max","min","numberingSystem","_ColorPickerHexInput","properties","state","Boolean","attribute","reflect","customElement","ColorPicker","_this","_color","internalColorUpdateContext","isActiveChannelInputEmpty","mode","CSSColorMode","HEX","resizeObserver","createObserver","entries","resizeCanvas","shiftKeyChannelAdjustment","upOrDownArrowKeyTracker","_valueWasSet","useT9n","blocking","captureColorFieldColor","skipEqual","width","height","dynamicDimensions","colorField","saturation","Math","round","HSV_LIMITS","internalColorSet","baseColorFieldColor","hsv","saturationv","drawColorControls","throttle","colorFieldRenderingContext","drawColorField","hueSliderRenderingContext","drawHueSlider","opacitySliderRenderingContext","drawOpacitySlider","globalPointerMoveHandler","activeCanvasInfo","el","isConnected","bounds","samplingX","samplingY","clientX","clientY","canvas","matches","captureHueSliderColor","captureOpacitySliderValue","globalPointerUpHandler","isPrimaryPointerButton","previouslyDragging","calciteColorPickerChange","first","availableWidth","floor","contentBoxSize","inlineSize","updateDynamicDimensions","updateCanvasSize","sliderDims","getSliderWidth","staticDimensions","slider","getColorFieldDimensions","channelMode","toChannels","STATIC_DIMENSIONS","savedColors","channelsDisabled","clearable","disabled","format","hexDisabled","savedDisabled","calciteColorPickerInput","listen","handleChannelKeyUpOrDown","capture","oldColor","handleColorChange","_value","handleValueChange","focusFirstTabbable","observeResize","load","_this$_value","handleAllowEmptyOrClearableChange","isClearable","willSetNoColor","parsedMode","parseMode","valueIsCompatible","initialColor","showIncompatibleColorWarning","setMode","updateStaticDimensions","minWidth","storageKey","DEFAULT_STORAGE_KEY_PREFIX","storageId","localStorage","getItem","JSON","parse","handleAlphaChannelChange","handleAlphaChannelDimensionsChange","handleFormatOrAlphaChannelChange","handleScaleChange","updated","updateHostInteraction","loaded","disconnectedCallback","_this$resizeObserver","window","removeEventListener","disconnect","previousColor","effectiveSliderWidth","_this$resizeObserver2","observe","alphaCompatible","console","warn","updateChannelsFromColor","modeChanged","nextMode","dragging","normalizeColor","colorChanged","colorEqual","endsWith","handleTabActivate","currentTarget","getAttribute","handleColorFieldScopeKeyDown","arrowKeyToXYOffset","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","scopeOrientation","colorFieldScopeLeft","colorFieldScopeTop","handleHueScopeKeyDown","modifier","arrowKeyToXOffset","delta","hue","handleHexInputChange","stopPropagation","target","handleSavedColorSelect","swatch","handleChannelInput","input","channelIndex","limit","RGB_LIMITS","Object","adjustedValue","clamp","toString","handleChannelChange","handleChannelBlur","_channels$channelInde","handleChannelFocus","some","_node$classList","classList","contains","getChannelInputLimit","isAlphaChannel","updateColorFromChannels","handleSavedColorKeyDown","isActivationKey","handleColorFieldPointerDown","handleCanvasControlPointerDown","colorFieldScopeNode","focusScope","focusEl","requestAnimationFrame","focus","handleHueSliderPointerDown","hueScopeNode","handleOpacitySliderPointerDown","opacityScopeNode","renderingContext","captureValue","scopeNode","addEventListener","once","getBoundingClientRect","call","offsetX","offsetY","storeColorFieldScope","storeHueScope","handleKeyDown","ensureCompatibleMode","isAlphaCompatible","alphaMode","toAlphaMode","nonAlphaMode","toNonAlphaMode","HUE_LIMIT_CONSTRAINED","toValue","hasAlpha","HEXA","string","model","colorObject","normalizeAlpha","getSliderCapSpacing","thumb","radius","deleteColor","colorToDelete","indexOf","filter","setItem","stringify","saveColor","colorToSave","fillStyle","fillRect","whiteGradient","createLinearGradient","addColorStop","blackGradient","drawActiveColorFieldColor","setCanvasContextSize","devicePixelRatio","style","getContext","initColorField","initHueSlider","initOpacitySlider","_this$colorFieldRende","adjustedSliderDimensions","_this$hueSliderRender","_this$opacitySliderRe","hsvColor","drawThumb","applyAlpha","endAngle","PI","beginPath","arc","fill","strokeStyle","lineWidth","stroke","pattern","createPattern","getCheckeredBackgroundPattern","globalCompositeOperation","rgb","drawActiveHueSliderColor","sliderBoundX","getSliderBoundX","hueScopeLeft","thumbRadius","gradient","hueSliderColorStopKeywords","offset","currentOffset","forEach","keyword","clearRect","drawSliderPath","startColor","midColor","endColor","drawActiveOpacitySliderColor","moveTo","lineTo","quadraticCurveTo","closePath","checkerPattern","document","createElement","patternContext","opacityScopeLeft","closeToEdge","closeToRangeEdge","remap","storeOpacityScope","handleOpacityScopeKeyDown","index","push","getAdjustedScopePosition","left","top","SCOPE_SIZE","sliderWidth","selectedColorInHex","hueTop","hueLeft","opacityTop","opacityLeft","noColor","vertical","adjustedColorFieldScopeLeft","adjustedColorFieldScopeTop","adjustedHueScopeLeft","adjustedHueScopeTop","adjustedOpacityScopeLeft","adjustedOpacityScopeTop","InteractiveContainer","children","container","controlAndScope","scope","colorFieldScope","safeStyleMap","previewAndSliders","preview","sliders","hueSlider","hueScope","opacitySlider","opacityScope","_templateObject4","controlSection","section","hexAndChannelsGroup","_templateObject5","hexOptions","control","_templateObject6","colorModeContainer","splitSection","renderChannelsTabTitle","renderChannelsTab","_templateObject7","savedColorsSection","header","saved","savedColorsButtons","_templateObject8","repeat","color2","_templateObject9","savedColor","activeChannelMode","selected","label","_templateObject0","colorMode","nothing","channelAriaLabels","red","green","blue","getElementDir","channelsToRender","_templateObject1","channelValue","renderChannel","ariaLabel","suffix","_this$messages$_lang","_templateObject10","_lang","marginLeft","_ColorPicker","messageOverrides","func","wait","options","leading","trailing","TypeError","isObject","debounce"],"sourceRoot":""}