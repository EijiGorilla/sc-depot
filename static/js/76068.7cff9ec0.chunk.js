"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[76068],{76068:(e,t,a)=>{a.r(t),a.d(t,{default:()=>u});var s,r=a(89379),i=a(35143),n=a(3825),o=a(50076),l=a(46053),d=(a(81806),a(76460),a(47249),a(85842)),c=a(25515),m=a(65624),g=a(21617),p=a(5682);let h=s=class extends((0,m.dM)((0,p.j)((0,g.J)(c.default)))){constructor(){super(...arguments),this.type="base-dynamic"}getImageUrl(){throw new o.default("basedynamiclayer:getImageUrl-not-implemented","getImageUrl() is not implemented")}addResolvingPromise(e){super.addResolvingPromise(e)}async fetchImage(e,t,a,s){const i=this.getImageUrl(e,t,a),o={responseType:"image",signal:null===s||void 0===s?void 0:s.signal,query:(0,r.A)({},this.refreshParameters)};if("string"==typeof i){const{data:e}=await(0,n.default)(i,o);return e}const l=await i,{data:d}=await(0,n.default)(l,o);return d}async fetchImageBitmap(e,t,a){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(this.fetchImage!==s.prototype.fetchImage){const s=await this.fetchImage(e,t,a,i);try{return await createImageBitmap(s)}catch(u){throw new o.default("request:server","Unable to load image",{error:u,extent:e,width:t,height:a})}}const l=this.getImageUrl(e,t,a),d={responseType:"blob",signal:null===i||void 0===i?void 0:i.signal,query:(0,r.A)({},this.refreshParameters)};if("string"==typeof l){const{data:e}=await(0,n.default)(l,d);return createImageBitmap(e)}const c=await l,{data:m}=await(0,n.default)(c,d);return createImageBitmap(m)}};(0,i._)([(0,l.MZ)({readOnly:!0,value:"base-dynamic"})],h.prototype,"type",void 0),(0,i._)([(0,l.MZ)({type:["show","hide"]})],h.prototype,"listMode",void 0),h=s=(0,i._)([(0,d.$)("esri.layers.BaseDynamicLayer")],h);const u=h}}]);
//# sourceMappingURL=76068.7cff9ec0.chunk.js.map