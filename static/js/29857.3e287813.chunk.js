"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[29857],{16525:(e,n,t)=>{t.d(n,{A:()=>o});var a=t(5262),i=t(27084);function l(e){let n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=[];if(n){for(const a of e)if(a.geometry){const e=a.geometry;t.push.apply(t,e.points)}}else t=e.map((e=>e.geometry));const i=[],l=[];let o=1/0,s=-1/0,r=0,c=0,u=0,f=0;for(const p of t){if(!p)continue;n?(i[0]=p[0],i[1]=p[1]):(i[0]=p.x,i[1]=p.y);let e=1/0,g=-1/0;for(const r of t){if(r===p)continue;if(!r)continue;n?(l[0]=r[0],l[1]=r[1]):(l[0]=r.x,l[1]=r.y);const t=(0,a.R3)(i,l);t>0&&(t<e&&(e=t),t<o&&(o=t),t>g&&(g=t),t>s&&(s=t))}e!==1/0&&(++u,r+=e),g!==-1/0&&(++f,c+=g)}return{minDistance:o!==1/0?o:null,maxDistance:s!==-1/0?s:null,avgMinDistance:u?r/u:null,avgMaxDistance:f?c/f:null}}function o(e){const{features:n}=e;let t=null;switch(e.geometryType){case"point":t=l(n);break;case"multipoint":t=l(n,!0);break;case"polyline":t=function(e){let n=0,t=0,i=1/0,l=-1/0;for(const o of e){const e=o.geometry;if(e){let o=0;for(const n of e.paths){const e=(0,a.Yl)(n);e>0&&(o+=e)}o>0&&(++n,t+=o,o<i&&(i=o),o>l&&(l=o))}}return{minLength:i!==1/0?i:null,maxLength:l!==-1/0?l:null,avgLength:n?t/n:null}}(n);break;case"polygon":t=function(e){let n=0,t=0,a=1/0,l=-1/0;for(const o of e){const e=o.geometry;if(e){const o=(0,i.v)(e);if(o){const e=Math.abs(o.xmax-o.xmin),i=Math.abs(o.ymax-o.ymin),s=Math.sqrt(e*i);s>0&&(++n,t+=s,s<a&&(a=s),s>l&&(l=s))}}}return{minSize:a!==1/0?a:null,maxSize:l!==-1/0?l:null,avgSize:n?t/n:null}}(n)}return Promise.resolve(t)}},29857:(e,n,t)=>{t.r(n),t.d(n,{default:()=>x});var a=t(89379),i=t(53986),l=t(50076),o=t(68002),s=t(16525),r=t(90494),c=t(11563);const u=["layer"],f=500,p=1e8,g=1280,m=12,v=30,d=15;async function y(e){const{view:n,sampleSize:t}=e;if(!e||!e.layer)throw new l.default("scale-range:missing-parameters","'layer' parameter is required");if(e.snapToLOD&&!n)throw new l.default("scale-range:missing-parameters","'view' parameter is required when 'snapToLOD' is true");e.forBinning&&(0,r.p)(e,"scale-range");const{layer:o}=e,s=(0,i.A)(e,u),p=e.forBinning?c.Mi:c.J4,g=(0,c.Jg)(o,p,e.forBinning);if(!g)throw new l.default("scale-range:invalid-parameters","'layer' must be one of these types: "+(0,c.Ho)(p).join(", "));const m=(0,a.A)({layerAdapter:g},s);m.sampleSize=t||f,await(null===n||void 0===n?void 0:n.when());const v=null!=m.signal?{signal:m.signal}:null;return await g.load(v),m}function w(e,n,t){var a,i;const l=function(e,n){const t=m,a=g/4,i=v,l=g/4,o=d,s=g/2;let r=0,c=0,u=0,f=0;switch(e){case"point":case"multipoint":{var p,y;const e=n;r=null!==(p=e.avgMinDistance)&&void 0!==p?p:0,c=t,u=null!==(y=e.minDistance)&&void 0!==y?y:0,f=a;break}case"polyline":{var w,h;const e=n;r=null!==(w=e.avgLength)&&void 0!==w?w:0,c=i,u=null!==(h=e.minLength)&&void 0!==h?h:0,f=l;break}case"polygon":{var S,x;const e=n;r=null!==(S=e.avgSize)&&void 0!==S?S:0,c=o,u=null!==(x=e.minSize)&&void 0!==x?x:0,f=s;break}}return{resolutionForMinScale:r>0?r/c:null,resolutionForMaxScale:u>0?u/f:null}}(e.geometryType,n),s=(null===t||void 0===t?void 0:t.spatialReference)||e.layer.spatialReference;return{minScale:(0,o.gB)(null!==(a=l.resolutionForMinScale)&&void 0!==a?a:0,s),maxScale:(0,o.gB)(null!==(i=l.resolutionForMaxScale)&&void 0!==i?i:0,s)}}function h(e,n){let t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(e.constraints&&"effectiveLODs"in e.constraints){const a=e.constraints.effectiveLODs,i=t?a:a.slice().reverse();let l=null;for(const e of i)if(!(t?e.scale>n:e.scale<n)){l=e;break}return l}}function S(e,n,t,a){const{view:i,snapToLOD:o,layerAdapter:s}=e;if(o&&i){const e=h(i,n),a=h(i,t,!1);n=e?e.scale:n,t=a?a.scale:t}if(n<t)throw new l.default("scale-range:invalid","calculated minScale is less than maxScale.");return t>n/2&&(t=Math.floor(t/2)),n>p&&(n=0),"polygon"!==s.geometryType&&(t=0),{minScale:Math.ceil(n),maxScale:Math.floor(t),spatialStatistics:a}}async function x(e){const n=await y(e),{view:t,sampleSize:a,layerAdapter:i,signal:o,filter:r}=n,c=await i.getSampleFeatures({view:t,sampleSize:a,returnGeometry:!0,filter:r,signal:o},"json");if(null===c||void 0===c||!c.length)throw new l.default("scale-range:insufficient-info","No features are available to calculate statistics");const u=await(0,s.A)({features:c,geometryType:i.geometryType}),{minScale:f,maxScale:p}=w(i,u,t);return S(n,f,p,u)}},90494:(e,n,t)=>{t.d(n,{p:()=>l,z:()=>i});var a=t(50076);const i="aggregateCount";function l(e,n){if(!e.view)throw new a.default("".concat(n,":missing-parameters"),"'view' parameter is required for binning");if(e.sqlExpression)throw new a.default("".concat(n,":invalid-parameters"),"'sqlExpression' parameter is not supported for binning");if("3d"===e.view.type)throw new a.default("".concat(n,":invalid-parameters"),"3d view is not supported for binning")}}}]);
//# sourceMappingURL=29857.3e287813.chunk.js.map