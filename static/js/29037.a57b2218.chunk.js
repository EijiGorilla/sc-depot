"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[29037,38411,41344,64693,73651,98815],{29037:(e,t,r)=>{r.r(t),r.d(t,{solve:()=>m});var i=r(89379),s=r(3825),o=r(17879),a=r(73953),n=r(98815),l=r(54994),u=r(86236),d=r(77725),c=r(38411);function p(e){return e instanceof d.default}async function m(e,t,r){const d=[],m=[],v={},y={},f=(0,l.Dl)(e),{path:h}=f;p(t.facilities)&&(0,n.collectGeometries)(t.facilities.features,m,"facilities.features",v),p(t.pointBarriers)&&(0,n.collectGeometries)(t.pointBarriers.features,m,"pointBarriers.features",v),p(t.polylineBarriers)&&(0,n.collectGeometries)(t.polylineBarriers.features,m,"polylineBarriers.features",v),p(t.polygonBarriers)&&(0,n.collectGeometries)(t.polygonBarriers.features,m,"polygonBarriers.features",v);const g=await(0,a.normalizeCentralMeridian)(m);for(const i in v){const e=v[i];d.push(i),y[i]=g.slice(e[0],e[1])}if((0,n.isInputGeometryZAware)(y,d)){let e=null;try{e=await(0,n.fetchServiceDescription)(h,t.apiKey,r)}catch(S){}e&&!e.hasZ&&(0,n.dropZValuesOffInputGeometry)(y,d)}for(const i in y)y[i].forEach(((e,r)=>{(0,o.Jt)(t,i)[r].geometry=e}));const A=(0,i.A)((0,i.A)({},r),{},{query:(0,i.A)((0,i.A)((0,i.A)({},f.query),(0,u._s)(t)),{},{f:"json"})}),{data:N}=await(0,s.default)("".concat(h,"/solveServiceArea"),A);return c.default.fromJSON(N)}},38411:(e,t,r)=>{r.r(t),r.d(t,{default:()=>d});var i=r(35143),s=r(42553),o=r(46053),a=(r(81806),r(76460),r(47249),r(85842)),n=r(77725),l=r(73651);let u=class extends s.A{constructor(e){super(e),this.facilities=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.serviceAreaPolylines=null,this.serviceAreaPolygons=null}};(0,i._)([(0,o.MZ)({type:n.default})],u.prototype,"facilities",void 0),(0,i._)([(0,o.MZ)({type:[l.default]})],u.prototype,"messages",void 0),(0,i._)([(0,o.MZ)({type:n.default,json:{read:{source:"barriers"}}})],u.prototype,"pointBarriers",void 0),(0,i._)([(0,o.MZ)({type:n.default})],u.prototype,"polylineBarriers",void 0),(0,i._)([(0,o.MZ)({type:n.default})],u.prototype,"polygonBarriers",void 0),(0,i._)([(0,o.MZ)({type:n.default,json:{read:{source:"saPolylines"}}})],u.prototype,"serviceAreaPolylines",void 0),(0,i._)([(0,o.MZ)({type:n.default,json:{read:{source:"saPolygons"}}})],u.prototype,"serviceAreaPolygons",void 0),u=(0,i._)([(0,a.$)("esri.rest.support.ServiceAreaSolveResult")],u);const d=u},41344:(e,t,r)=>{r.r(t),r.d(t,{default:()=>m});var i=r(35143),s=r(69098),o=r(42553),a=r(46053),n=(r(81806),r(76460),r(47249),r(6409)),l=r(28379),u=r(85842),d=r(17707),c=r(73103);let p=class extends(s.A.ClonableMixin(o.A)){constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readId(e,t){var r,i;return null!==(r=null!==(i=t.id)&&void 0!==i?i:t.itemId)&&void 0!==r?r:null}readRestrictionAttributes(e,t){const{restrictionAttributeNames:r}=t;return null==r?null:r.map((e=>c.OC.fromJSON(e)))}writeRestrictionAttributes(e,t,r){null!=e&&(t[r]=e.map((e=>c.OC.toJSON(e))))}};(0,i._)([(0,a.MZ)({type:[Object],json:{write:!0}})],p.prototype,"attributeParameterValues",void 0),(0,i._)([(0,a.MZ)({type:String,json:{write:!0}})],p.prototype,"description",void 0),(0,i._)([(0,n.e)(c.dd,{ignoreUnknown:!1})],p.prototype,"distanceAttributeName",void 0),(0,i._)([(0,a.MZ)({type:String,json:{write:!0}})],p.prototype,"id",void 0),(0,i._)([(0,l.w)("id",["id","itemId"])],p.prototype,"readId",null),(0,i._)([(0,n.e)(c.et,{ignoreUnknown:!1})],p.prototype,"impedanceAttributeName",void 0),(0,i._)([(0,a.MZ)({type:String,json:{write:!0}})],p.prototype,"name",void 0),(0,i._)([(0,a.MZ)({type:[String],json:{write:!0}})],p.prototype,"restrictionAttributeNames",void 0),(0,i._)([(0,l.w)("restrictionAttributeNames")],p.prototype,"readRestrictionAttributes",null),(0,i._)([(0,d.K)("restrictionAttributeNames")],p.prototype,"writeRestrictionAttributes",null),(0,i._)([(0,a.MZ)({type:Number,json:{write:{allowNull:!0}}})],p.prototype,"simplificationTolerance",void 0),(0,i._)([(0,n.e)(c.hY)],p.prototype,"simplificationToleranceUnits",void 0),(0,i._)([(0,n.e)(c.Mm,{ignoreUnknown:!1})],p.prototype,"timeAttributeName",void 0),(0,i._)([(0,n.e)(c.ow)],p.prototype,"type",void 0),(0,i._)([(0,a.MZ)({type:Boolean,json:{write:!0}})],p.prototype,"useHierarchy",void 0),(0,i._)([(0,n.e)(c.hE)],p.prototype,"uturnAtJunctions",void 0),p=(0,i._)([(0,u.$)("esri.rest.support.TravelMode")],p);const m=p},64693:(e,t,r)=>{r.r(t),r.d(t,{default:()=>d});var i=r(35143),s=r(45802),o=r(42553),a=r(46053),n=(r(81806),r(76460),r(47249),r(85842));const l=new s.J({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let u=class extends o.A{constructor(e){super(e),this.description=null,this.type=null}};(0,i._)([(0,a.MZ)({type:String,json:{write:!0}})],u.prototype,"description",void 0),(0,i._)([(0,a.MZ)({type:String,json:{read:l.read,write:l.write}})],u.prototype,"type",void 0),u=(0,i._)([(0,n.$)("esri.rest.support.GPMessage")],u);const d=u},73103:(e,t,r)=>{r.d(t,{$n:()=>k,$r:()=>N,EM:()=>A,Ec:()=>R,JJ:()=>g,Mm:()=>U,OC:()=>D,Sr:()=>p,UO:()=>l,Vj:()=>P,WU:()=>Z,Y8:()=>n,Z7:()=>u,_6:()=>b,_H:()=>y,aJ:()=>c,ag:()=>f,cQ:()=>m,dd:()=>O,dn:()=>d,et:()=>_,fe:()=>M,gD:()=>w,hE:()=>v,hY:()=>a,iM:()=>T,mt:()=>S,ow:()=>h,vS:()=>J});var i=r(89379),s=r(45802);const o={esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"},a=(0,s.O)()(o),n=(0,s.O)()((0,i.A)((0,i.A)({},o),{},{esriIntFeet:"international-feet",esriIntInches:"international-inches",esriIntMiles:"international-miles",esriIntNauticalMiles:"international-nautical-miles",esriIntYards:"international-yards"})),l=(0,s.O)()({esriAcres:"international-acres",esriAcresUS:"us-acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-international-feet",esriSquareFeetUS:"square-us-feet",esriSquareInches:"square-international-inches",esriSquareInchesUS:"square-us-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-international-miles",esriSquareMilesUS:"square-us-miles",esriSquareMillimeters:"square-millimeters",esriSquareYards:"square-international-yards",esriSquareYardsUS:"square-us-yards",esriUnknownAreaUnits:"unknown"}),u=(0,s.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),d=(0,s.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"}),c=(0,s.O)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),p=(0,s.O)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),m=(0,s.O)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),v=(0,s.O)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"}),y=(0,s.O)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),f=(0,s.O)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),h=(0,s.O)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}),g=(0,s.O)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),A=(0,s.O)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),N=(0,s.O)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),S=(0,s.O)()({1:"right",2:"left"},{useNumericKeys:!0}),T=(0,s.O)()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),M=(0,s.O)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),b=(0,s.O)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation",1007:"lane"},{useNumericKeys:!0}),w=(0,s.O)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),k=(0,s.O)()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),O=(0,s.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),U=(0,s.O)()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),_=(0,s.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),D=(0,s.O)()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),J=(0,s.O)()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),P=(0,s.O)()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),Z=(0,s.O)()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),R=(0,s.O)()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"})},73651:(e,t,r)=>{r.r(t),r.d(t,{default:()=>d});var i=r(35143),s=r(45802),o=r(46053),a=(r(81806),r(76460),r(47249),r(85842)),n=r(64693);const l=new s.J({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let u=class extends n.default{constructor(e){super(e),this.type=null}};(0,i._)([(0,o.MZ)({type:String,json:{read:l.read,write:l.write}})],u.prototype,"type",void 0),u=(0,i._)([(0,a.$)("esri.rest.support.NAMessage")],u);const d=u},86236:(e,t,r)=>{r.d(t,{Zn:()=>l,_s:()=>c,aZ:()=>a,lh:()=>s,nA:()=>n,o9:()=>d,p3:()=>o,r9:()=>u});var i=r(73103);function s(e,t){if(null==e)return null;const r={},s=new RegExp("^".concat(t),"i");for(const o of Object.keys(e))if(s.test(o)){const s=o.slice(t.length);r[i.et.fromJSON(s)]=e[o]}return r}function o(e,t,r){if(null!=e){t.attributes||(t.attributes={});for(const s in e){const o=i.et.toJSON(s);t.attributes["".concat(r).concat(o)]=e[s]}}}function a(e){const t={};for(const r of Object.keys(e)){const s=r;t[i.et.fromJSON(s)]=e[r]}return t}function n(e){const t={};for(const r of Object.keys(e)){const s=r;t[i.et.toJSON(s)]=e[r]}return t}function l(e,t){return null==e||null==t?null:Math.round((e-t)/6e4)}function u(e){var t,r,i;const s=e.toJSON(),o=s;return o.accumulateAttributeNames&&(o.accumulateAttributeNames=null===(t=s.accumulateAttributeNames)||void 0===t?void 0:t.join()),o.attributeParameterValues&&(o.attributeParameterValues=JSON.stringify(s.attributeParameterValues)),o.barriers&&(o.barriers=JSON.stringify(s.barriers)),o.outSR&&(o.outSR=null===(r=s.outSR)||void 0===r?void 0:r.wkid),o.overrides&&(o.overrides=JSON.stringify(s.overrides)),o.polygonBarriers&&(o.polygonBarriers=JSON.stringify(s.polygonBarriers)),o.polylineBarriers&&(o.polylineBarriers=JSON.stringify(s.polylineBarriers)),o.restrictionAttributeNames&&(o.restrictionAttributeNames=null===(i=s.restrictionAttributeNames)||void 0===i?void 0:i.join()),o.stops&&(o.stops=JSON.stringify(s.stops)),o.travelMode&&(o.travelMode=JSON.stringify(s.travelMode)),o}function d(e){var t,r,i;const s=e.toJSON(),o=s;return o.accumulateAttributeNames&&(o.accumulateAttributeNames=null===(t=s.accumulateAttributeNames)||void 0===t?void 0:t.join()),o.attributeParameterValues&&(o.attributeParameterValues=JSON.stringify(s.attributeParameterValues)),o.barriers&&(o.barriers=JSON.stringify(s.barriers)),o.facilities&&(o.facilities=JSON.stringify(s.facilities)),o.incidents&&(o.incidents=JSON.stringify(s.incidents)),o.outSR&&(o.outSR=null===(r=s.outSR)||void 0===r?void 0:r.wkid),o.overrides&&(o.overrides=JSON.stringify(s.overrides)),o.polygonBarriers&&(o.polygonBarriers=JSON.stringify(s.polygonBarriers)),o.polylineBarriers&&(o.polylineBarriers=JSON.stringify(s.polylineBarriers)),o.restrictionAttributeNames&&(o.restrictionAttributeNames=null===(i=s.restrictionAttributeNames)||void 0===i?void 0:i.join()),o.travelMode&&(o.travelMode=JSON.stringify(s.travelMode)),o}function c(e){var t,r,i,s,o;const a=e.toJSON(),n=a;return n.accumulateAttributeNames&&(n.accumulateAttributeNames=null===(t=a.accumulateAttributeNames)||void 0===t?void 0:t.join()),n.attributeParameterValues&&(n.attributeParameterValues=JSON.stringify(a.attributeParameterValues)),n.barriers&&(n.barriers=JSON.stringify(a.barriers)),n.defaultBreaks&&(n.defaultBreaks=null===(r=a.defaultBreaks)||void 0===r?void 0:r.join()),n.excludeSourcesFromPolygons&&(n.excludeSourcesFromPolygons=null===(i=a.excludeSourcesFromPolygons)||void 0===i?void 0:i.join()),n.facilities&&(n.facilities=JSON.stringify(a.facilities)),n.outSR&&(n.outSR=null===(s=a.outSR)||void 0===s?void 0:s.wkid),n.overrides&&(n.overrides=JSON.stringify(a.overrides)),n.polygonBarriers&&(n.polygonBarriers=JSON.stringify(a.polygonBarriers)),n.polylineBarriers&&(n.polylineBarriers=JSON.stringify(a.polylineBarriers)),n.restrictionAttributeNames&&(n.restrictionAttributeNames=null===(o=a.restrictionAttributeNames)||void 0===o?void 0:o.join()),n.travelMode&&(n.travelMode=JSON.stringify(a.travelMode)),n}},98815:(e,t,r)=>{r.r(t),r.d(t,{collectGeometries:()=>w,dropZValuesOffInputGeometry:()=>k,fetchServiceDescription:()=>U,isInputGeometryZAware:()=>O});var i=r(3825),s=r(50076),o=r(76460),a=r(48611),n=r(90534),l=r(54994),u=r(35143),d=r(42553),c=r(46053),p=(r(81806),r(47249),r(6409)),m=r(28379),v=r(85842),y=r(17707),f=r(73103);let h=class extends d.A{constructor(e){super(e),this.dataType=null,this.name=null,this.parameterNames=null,this.restrictionUsageParameterName=null,this.timeNeutralAttributeName=null,this.trafficSupport=null,this.units=null,this.usageType=null}};(0,u._)([(0,c.MZ)({type:String})],h.prototype,"dataType",void 0),(0,u._)([(0,p.e)(f.et,{ignoreUnknown:!1})],h.prototype,"name",void 0),(0,u._)([(0,c.MZ)({type:[String]})],h.prototype,"parameterNames",void 0),(0,u._)([(0,c.MZ)({type:String})],h.prototype,"restrictionUsageParameterName",void 0),(0,u._)([(0,p.e)(f.Mm,{ignoreUnknown:!1})],h.prototype,"timeNeutralAttributeName",void 0),(0,u._)([(0,c.MZ)({type:String})],h.prototype,"trafficSupport",void 0),(0,u._)([(0,p.e)(f.dn)],h.prototype,"units",void 0),(0,u._)([(0,p.e)(f.WU)],h.prototype,"usageType",void 0),h=(0,u._)([(0,v.$)("esri.rest.support.NetworkAttribute")],h);const g=h;let A=class extends d.A{constructor(e){super(e),this.buildTime=null,this.name=null,this.networkAttributes=null,this.networkSources=null,this.state=null}};(0,u._)([(0,c.MZ)({type:Number})],A.prototype,"buildTime",void 0),(0,u._)([(0,c.MZ)({type:String})],A.prototype,"name",void 0),(0,u._)([(0,c.MZ)({type:[g]})],A.prototype,"networkAttributes",void 0),(0,u._)([(0,c.MZ)()],A.prototype,"networkSources",void 0),(0,u._)([(0,c.MZ)({type:String})],A.prototype,"state",void 0),A=(0,u._)([(0,v.$)("esri.rest.support.NetworkDataset")],A);const N=A;var S=r(41344);let T=class extends d.A{constructor(e){super(e),this.accumulateAttributeNames=null,this.attributeParameterValues=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}readAccumulateAttributes(e){return null==e?null:e.map((e=>f.et.fromJSON(e)))}writeAccumulateAttributes(e,t,r){(null===e||void 0===e?void 0:e.length)&&(t[r]=e.map((e=>f.et.toJSON(e))))}get capabilities(){var e;return{supportsNow:(null!==(e=this.currentVersion)&&void 0!==e?e:10)>=10.81}}readDefaultTravelMode(e,t){var r,i,s;const o=null!==(r=null===(i=t.supportedTravelModes)||void 0===i?void 0:i.find((e=>{let{id:r}=e;return r===t.defaultTravelMode})))&&void 0!==r?r:null===(s=t.supportedTravelModes)||void 0===s?void 0:s.find((e=>{let{itemId:r}=e;return r===t.defaultTravelMode}));return o?S.default.fromJSON(o):null}};(0,u._)([(0,c.MZ)()],T.prototype,"accumulateAttributeNames",void 0),(0,u._)([(0,m.w)("accumulateAttributeNames")],T.prototype,"readAccumulateAttributes",null),(0,u._)([(0,y.K)("accumulateAttributeNames")],T.prototype,"writeAccumulateAttributes",null),(0,u._)([(0,c.MZ)()],T.prototype,"attributeParameterValues",void 0),(0,u._)([(0,c.MZ)()],T.prototype,"capabilities",null),(0,u._)([(0,c.MZ)()],T.prototype,"currentVersion",void 0),(0,u._)([(0,c.MZ)()],T.prototype,"defaultTravelMode",void 0),(0,u._)([(0,m.w)("defaultTravelMode",["defaultTravelMode","supportedTravelModes"])],T.prototype,"readDefaultTravelMode",null),(0,u._)([(0,c.MZ)()],T.prototype,"directionsLanguage",void 0),(0,u._)([(0,p.e)(f.Z7)],T.prototype,"directionsLengthUnits",void 0),(0,u._)([(0,c.MZ)()],T.prototype,"directionsSupportedLanguages",void 0),(0,u._)([(0,p.e)(f.Mm,{ignoreUnknown:!1})],T.prototype,"directionsTimeAttribute",void 0),(0,u._)([(0,c.MZ)()],T.prototype,"hasZ",void 0),(0,u._)([(0,p.e)(f.et,{ignoreUnknown:!1})],T.prototype,"impedance",void 0),(0,u._)([(0,c.MZ)({type:N})],T.prototype,"networkDataset",void 0),(0,u._)([(0,c.MZ)({type:[S.default]})],T.prototype,"supportedTravelModes",void 0),T=(0,u._)([(0,v.$)("esri.rest.support.NetworkServiceDescription")],T);const M=T,b=()=>o.A.getLogger("esri.rest.networkService");function w(e,t,r,i){i[r]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}function k(e,t){for(let r=0;r<t.length;r++){const i=e[t[r]];if(i&&i.length)for(const e of i)e.z=void 0}b().warnOnce("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}function O(e,t){for(let r=0;r<t.length;r++){const i=e[t[r]];if(i&&i.length)for(const e of i)if(null!=e&&e.hasZ)return!0}return!1}async function U(e,t,r){if(!e)throw new s.default("network-service:missing-url","Url to Network service is missing");const o=(0,l.jV)({f:"json",token:t},r),{data:u}=await(0,i.default)(e,o),d=u.currentVersion>=10.4?async function(e,t,r){try{const s=(0,l.jV)({f:"json",token:t},r),o=(0,n.removeTrailingSlash)(e)+"/retrieveTravelModes",{data:{supportedTravelModes:a,defaultTravelMode:u}}=await(0,i.default)(o,s);return{supportedTravelModes:a,defaultTravelMode:u}}catch(N){throw new s.default("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:N})}}(e,t,r):async function(e,t){var r;const s=(0,l.jV)({f:"json"},t),{data:o}=await(0,i.default)(e.replace(/\/rest\/.*$/i,"/info"),s);if(null===o||void 0===o||!o.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:u}=o,d=(0,n.removeTrailingSlash)(u)+"/sharing/rest/portals/self",{data:c}=await(0,i.default)(d,s),p=(0,a.wc)("helperServices.routingUtilities.url",c);if(!p)return{supportedTravelModes:[],defaultTravelMode:null};const m=(0,l.Dl)(u),v=/\/solve$/i.test(m.path)?"Route":/\/solveclosestfacility$/i.test(m.path)?"ClosestFacility":"ServiceAreas",y=(0,l.jV)({f:"json",serviceName:v},t),f=(0,n.removeTrailingSlash)(p)+"/GetTravelModes/execute",h=await(0,i.default)(f,y),g=[];let A=null;if(null!==h&&void 0!==h&&null!==(r=h.data)&&void 0!==r&&null!==(r=r.results)&&void 0!==r&&r.length){const e=h.data.results;for(const t of e)if("supportedTravelModes"===t.paramName){var N;if(null!==(N=t.value)&&void 0!==N&&N.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);g.push(t)}}else"defaultTravelMode"===t.paramName&&(A=t.value)}return{supportedTravelModes:g,defaultTravelMode:A}}(e,r),{defaultTravelMode:c,supportedTravelModes:p}=await d;return u.defaultTravelMode=c,u.supportedTravelModes=p,M.fromJSON(u)}}}]);
//# sourceMappingURL=29037.a57b2218.chunk.js.map