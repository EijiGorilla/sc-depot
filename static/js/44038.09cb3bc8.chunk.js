"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[44038],{44038:(t,e,n)=>{n.r(e),n.d(e,{default:()=>k});var o=n(89379),i=n(35143),r=n(42553),s=n(53084),p=n(46053),a=(n(81806),n(76460),n(6409)),u=n(28379),c=n(85842),y=n(17707),l=n(45802),d=n(40565),m=(n(47249),n(58646));let f=class extends r.A{constructor(){super(...arguments),this.pixelType="unknown"}};(0,i._)([(0,p.MZ)({type:String,json:{write:{isRequired:!0}}})],f.prototype,"name",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:!0}})],f.prototype,"description",void 0),(0,i._)([(0,p.MZ)({type:d.jz,json:{type:d.jz,write:!0,name:"_object_id"}})],f.prototype,"id",void 0),(0,i._)([(0,p.MZ)({type:String,json:{type:m.e8.jsonValues,read:m.e8.read,write:{writer:m.e8.write,isRequired:!0}}})],f.prototype,"pixelType",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:{isRequired:!0}}})],f.prototype,"type",void 0),f=(0,i._)([(0,c.$)("esri.layers.support.RasterFunctionInfo")],f);const w=f;let _=class extends r.A{constructor(){super(...arguments),this.isDataset=!1,this.isPublic=!1,this.type="RasterFunctionVariable"}};(0,i._)([(0,p.MZ)({type:String,json:{write:!0}})],_.prototype,"name",void 0),(0,i._)([(0,p.MZ)({type:Number,json:{type:d.jz,write:!0,name:"_object_id"}})],_.prototype,"id",void 0),(0,i._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],_.prototype,"isDataset",void 0),(0,i._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],_.prototype,"isPublic",void 0),(0,i._)([(0,p.MZ)({json:{write:!0}})],_.prototype,"value",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:!0}})],_.prototype,"type",void 0),_=(0,i._)([(0,c.$)("esri.layers.support.RasterFunctionVariable")],_);const v={key:"type",base:null,typeMap:{RasterFunctionVariable:_}};let j=class extends r.A{};(0,i._)([(0,p.MZ)({types:v,json:{types:v,name:"MatchVariable"}})],j.prototype,"matchVariable",void 0),(0,i._)([(0,p.MZ)({types:v,json:{types:v,name:"UnionDimension"}})],j.prototype,"unionDimension",void 0),(0,i._)([(0,p.MZ)({type:Number,json:{type:d.jz,write:!0,name:"_object_id"}})],j.prototype,"id",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:!0}})],j.prototype,"type",void 0),j=(0,i._)([(0,c.$)("esri.layers.support.RasterFunctionProperties")],j);const h=j,g=new l.J({0:"mosaic",1:"item",2:"item-group"},{useNumericKeys:!0});let F=class extends r.A{constructor(){super(...arguments),this.description="",this.functionType="mosaic",this.type="RasterFunctionTemplate"}};(0,i._)([(0,p.MZ)({type:[String],json:{write:!0}})],F.prototype,"aliases",void 0),(0,i._)([(0,p.MZ)({type:Object,json:{write:{isRequired:!0}}})],F.prototype,"arguments",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:{isRequired:!0}}})],F.prototype,"description",void 0),(0,i._)([(0,p.MZ)({type:w,json:{write:{isRequired:!0},name:"function"}})],F.prototype,"functionInfo",void 0),(0,i._)([(0,p.MZ)({type:g.apiValues,json:{type:[0,1,2],read:g.read,write:{writer:g.write,isRequired:!0}}})],F.prototype,"functionType",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:!0}})],F.prototype,"group",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:!0}})],F.prototype,"help",void 0),(0,i._)([(0,p.MZ)({type:Number,json:{type:d.jz,write:!0,name:"_object_id"}})],F.prototype,"id",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:{isRequired:!0}}})],F.prototype,"name",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:!0,name:"definition"}})],F.prototype,"queryDefinition",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:!0}})],F.prototype,"tag",void 0),(0,i._)([(0,p.MZ)({type:h,json:{write:!0}})],F.prototype,"properties",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:!0}})],F.prototype,"thumbnail",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:!0}})],F.prototype,"thumbnailEx",void 0),(0,i._)([(0,p.MZ)({json:{type:["RasterFunctionTemplate"],write:!0}})],F.prototype,"type",void 0),F=(0,i._)([(0,c.$)("esri.layers.support.RasterFunctionTemplate")],F);const M=F;var S;const Z=new Set(["raster","raster2","dem","fillraster"]),b=new Set(["rasters"]),N=t=>null!==t&&void 0!==t&&t.rasterFunction?U.fromJSON(t):t,A=t=>t&&t instanceof U?t.toJSON():t,R=t=>(null===t||void 0===t?void 0:t.functionName)&&!t.declaredClass,C=t=>R(t)?new U(t):t,D=t=>t?M.fromJSON((0,o.A)({type:"RasterFunctionTemplate"},t)):void 0,O={types:{key:"type",base:null,typeMap:{RasterFunctionTemplate:M}},json:{write:!0,name:"rasterFunctionDefinition",read:D}};let U=S=class extends r.A{constructor(t){super(t),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.functionDefinition=null}set functionArguments(t){if(t){const e=Object.keys(t);if(e.some((e=>Z.has(e.toLowerCase())&&R(t[e])))||e.some((e=>b.has(e.toLowerCase())&&Array.isArray(t[e])&&t[e].some((t=>R(t)))))){t=(0,s.clone)(t);for(const n of e)Z.has(n.toLowerCase())?t[n]=C(t[n]):b.has(n.toLowerCase())&&Array.isArray(t[n])&&(t[n]=t[n].map((t=>C(t))))}}this._set("functionArguments",t)}readFunctionArguments(t){return(t=>{if(null==t)return null;t=(0,s.clone)(t);const e={};for(const n of Object.keys(t))Z.has(n.toLowerCase())?e[n]=N(t[n]):b.has(n.toLowerCase())&&Array.isArray(t[n])?e[n]=t[n].map(N):e[n]=t[n];return e})(t)}writeFunctionArguments(t,e,n){const o={};for(const i of Object.keys(t))Z.has(i.toLowerCase())?o[i]=A(t[i]):b.has(i.toLowerCase())&&Array.isArray(t[i])?o[i]=t[i].map(A):o[i]=A(t[i]);e[n]=o}readFunctionName(t,e){var n;const o=e.rasterFunctionInfos;return e.name||(null!==o&&void 0!==o&&o.length&&"None"!==o[0].name?o[0].name:e.rasterFunction||(null===(n=e.rasterFunctionDefinition)||void 0===n?void 0:n.name))}get rasterFunctionDefinition(){var t;return null===(t=this.functionDefinition)||void 0===t?void 0:t.toJSON()}set rasterFunctionDefinition(t){this.functionDefinition=D(t)}get hasClipFunction(){return this.rasterFunctionDefinition?JSON.stringify(this.rasterFunctionDefinition).includes('"type":"ClipFunction"'):JSON.stringify(this).includes('"rasterFunction":"Clip"')}clone(){return new S({functionName:this.functionName,functionArguments:(0,s.clone)(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:(0,s.clone)(this.rasterFunctionDefinition)})}};(0,i._)([(0,p.MZ)({json:{type:Object,name:"rasterFunctionArguments"}})],U.prototype,"functionArguments",null),(0,i._)([(0,u.w)("functionArguments")],U.prototype,"readFunctionArguments",null),(0,i._)([(0,y.K)("functionArguments")],U.prototype,"writeFunctionArguments",null),(0,i._)([(0,p.MZ)({json:{type:String,write:{target:"rasterFunction"}}})],U.prototype,"functionName",void 0),(0,i._)([(0,u.w)("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],U.prototype,"readFunctionName",null),(0,i._)([(0,a.e)({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1,default:"unknown"})],U.prototype,"outputPixelType",void 0),(0,i._)([(0,p.MZ)({type:String,json:{read:!0,write:!0}})],U.prototype,"variableName",void 0),(0,i._)([(0,p.MZ)()],U.prototype,"rasterFunctionDefinition",null),(0,i._)([(0,p.MZ)(O)],U.prototype,"functionDefinition",void 0),(0,i._)([(0,p.MZ)()],U.prototype,"hasClipFunction",null),U=S=(0,i._)([(0,c.$)("esri.layers.support.RasterFunction")],U);const k=U},58646:(t,e,n)=>{n.d(e,{SZ:()=>i,e8:()=>s,hm:()=>r});var o=n(45802);const i=(0,o.O)()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),r=(0,o.O)()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),s=(0,o.O)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"})}}]);
//# sourceMappingURL=44038.09cb3bc8.chunk.js.map