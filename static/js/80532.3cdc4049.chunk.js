"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[53855,75166,80532,85685],{770:(e,n,t)=>{t.d(n,{bG:()=>l,Ty:()=>r,YJ:()=>c,Fq:()=>u,vt:()=>s});var a=t(53084),i=t(42633);class o{constructor(e){const{name:n,label:t,description:a,schemes:o}=e;this.name=n,this.label=t,this.description=a,this.schemes=o;const l=e.basemapGroups||i.Np;let s=[];Object.keys(l).forEach((e=>{s=s.concat(l[e])})),this.supportedBasemaps=s,this.basemapGroups=l}isBasemapSupported(e){const n=(0,i.T1)(e,this.supportedBasemaps);return!(!n||!this.supportedBasemaps.includes(n))}getRawSchemes(e){const{basemapId:n,basemapTheme:t}=function(e,n,t){let a=null,o=null;if(n&&(a=(0,i.T1)(n,e,!1),a)){const e=(0,i.BV)(a);null!=e&&(o=e)}return!a&&t&&(a="dark"===t?"dark-gray":"gray",o=t),a||o||(a="gray",o="light"),{basemapId:a,basemapTheme:o}}(this.supportedBasemaps,e.basemap,e.basemapTheme);let o=t;if(n){const e=(0,i.BV)(n,this.basemapGroups);null!=e&&(o=e)}let l=e.geometryType;"multipoint"===l?l="point":"mesh"===l&&(l="polygon");const s=this.schemes[l]||this.schemes.default;return{schemesInfo:(0,a.clone)(s[o]),basemapId:n,basemapTheme:t}}}function l(e){const n=e.themeDictionary,t=new Map;for(const a in n){const e=n[a];t.set(a,new o(e))}return t}function s(e,n){const t=[];return e.forEach((e=>{e.isBasemapSupported(n)&&t.push({name:e.name,label:e.label,description:e.description,basemaps:[...e.supportedBasemaps]})})),t}function r(e,n){if(!e)return;if(!n)return;let t=null;const a=[n.primaryScheme,...n.secondarySchemes];for(const o of a){var i;if((null===(i=o.name)||void 0===i?void 0:i.toLowerCase())===e.toLowerCase()){t=o;break}}return t}function c(e,n,t){if(!e&&!n)return[];if(!t)return[];const a=!(null!==e&&void 0!==e&&e.length),i=!(null!==n&&void 0!==n&&n.length),o=[t.primaryScheme,...t.secondarySchemes],l=[];for(const s of o){const t=!!a||e.some((e=>s.tags.includes(e))),o=!i&&n.some((e=>s.tags.includes(e)));t&&!o&&l.push(s)}return l}function u(e){const n=e.theme;if(n)return n.getRawSchemes({basemap:e.basemap,geometryType:e.geometryType,basemapTheme:e.basemapTheme})}},29857:(e,n,t)=>{t.r(n),t.d(n,{default:()=>S});var a=t(89379),i=t(53986),o=t(50076),l=t(68002),s=t(16525),r=t(90494),c=t(11563);const u=["layer"],p=500,m=1e8,d=1280,f=12,h=30,y=15;async function w(e){const{view:n,sampleSize:t}=e;if(!e||!e.layer)throw new o.default("scale-range:missing-parameters","'layer' parameter is required");if(e.snapToLOD&&!n)throw new o.default("scale-range:missing-parameters","'view' parameter is required when 'snapToLOD' is true");e.forBinning&&(0,r.p)(e,"scale-range");const{layer:l}=e,s=(0,i.A)(e,u),m=e.forBinning?c.Mi:c.J4,d=(0,c.Jg)(l,m,e.forBinning);if(!d)throw new o.default("scale-range:invalid-parameters","'layer' must be one of these types: "+(0,c.Ho)(m).join(", "));const f=(0,a.A)({layerAdapter:d},s);f.sampleSize=t||p,await(null===n||void 0===n?void 0:n.when());const h=null!=f.signal?{signal:f.signal}:null;return await d.load(h),f}function v(e,n,t){var a,i;const o=function(e,n){const t=f,a=d/4,i=h,o=d/4,l=y,s=d/2;let r=0,c=0,u=0,p=0;switch(e){case"point":case"multipoint":{var m,w;const e=n;r=null!==(m=e.avgMinDistance)&&void 0!==m?m:0,c=t,u=null!==(w=e.minDistance)&&void 0!==w?w:0,p=a;break}case"polyline":{var v,g;const e=n;r=null!==(v=e.avgLength)&&void 0!==v?v:0,c=i,u=null!==(g=e.minLength)&&void 0!==g?g:0,p=o;break}case"polygon":{var b,S;const e=n;r=null!==(b=e.avgSize)&&void 0!==b?b:0,c=l,u=null!==(S=e.minSize)&&void 0!==S?S:0,p=s;break}}return{resolutionForMinScale:r>0?r/c:null,resolutionForMaxScale:u>0?u/p:null}}(e.geometryType,n),s=(null===t||void 0===t?void 0:t.spatialReference)||e.layer.spatialReference;return{minScale:(0,l.gB)(null!==(a=o.resolutionForMinScale)&&void 0!==a?a:0,s),maxScale:(0,l.gB)(null!==(i=o.resolutionForMaxScale)&&void 0!==i?i:0,s)}}function g(e,n){let t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(e.constraints&&"effectiveLODs"in e.constraints){const a=e.constraints.effectiveLODs,i=t?a:a.slice().reverse();let o=null;for(const e of i)if(!(t?e.scale>n:e.scale<n)){o=e;break}return o}}function b(e,n,t,a){const{view:i,snapToLOD:l,layerAdapter:s}=e;if(l&&i){const e=g(i,n),a=g(i,t,!1);n=e?e.scale:n,t=a?a.scale:t}if(n<t)throw new o.default("scale-range:invalid","calculated minScale is less than maxScale.");return t>n/2&&(t=Math.floor(t/2)),n>m&&(n=0),"polygon"!==s.geometryType&&(t=0),{minScale:Math.ceil(n),maxScale:Math.floor(t),spatialStatistics:a}}async function S(e){const n=await w(e),{view:t,sampleSize:a,layerAdapter:i,signal:l,filter:r}=n,c=await i.getSampleFeatures({view:t,sampleSize:a,returnGeometry:!0,filter:r,signal:l},"json");if(null===c||void 0===c||!c.length)throw new o.default("scale-range:insufficient-info","No features are available to calculate statistics");const u=await(0,s.A)({features:c,geometryType:i.geometryType}),{minScale:p,maxScale:m}=v(i,u,t);return b(n,p,m,u)}},31650:(e,n,t)=>{t.r(n),t.d(n,{default:()=>M});var a=t(89379),i=t(53986),o=(t(81806),t(50076)),l=t(76931),s=t(68002),r=t(43996),c=t(63040),u=t(29857),p=t(90494),m=t(11563);const d=["layer"],f=1e8,h=1128.497176,y=591657527.591555,w=[10,8,4,2],v=[100,100,60,30],g=[2,1,.75,.5],b=[32,18,12,6],S=[{level:0,resolution:156543.03392800014,scale:591657527.591555},{level:1,resolution:78271.51696399994,scale:295828763.795777},{level:2,resolution:39135.75848200009,scale:147914381.897889},{level:3,resolution:19567.87924099992,scale:73957190.948944},{level:4,resolution:9783.93962049996,scale:36978595.474472},{level:5,resolution:4891.96981024998,scale:18489297.737236},{level:6,resolution:2445.98490512499,scale:9244648.868618},{level:7,resolution:1222.992452562495,scale:4622324.434309},{level:8,resolution:611.4962262813797,scale:2311162.217155},{level:9,resolution:305.74811314055756,scale:1155581.108577},{level:10,resolution:152.87405657041106,scale:577790.554289},{level:11,resolution:76.43702828507324,scale:288895.277144},{level:12,resolution:38.21851414253662,scale:144447.638572},{level:13,resolution:19.10925707126831,scale:72223.819286},{level:14,resolution:9.554628535634155,scale:36111.909643},{level:15,resolution:4.77731426794937,scale:18055.954822},{level:16,resolution:2.388657133974685,scale:9027.977411},{level:17,resolution:1.1943285668550503,scale:4513.988705},{level:18,resolution:.5971642835598172,scale:2256.994353},{level:19,resolution:.29858214164761665,scale:1128.497176}];function x(e,n){const{view:t}=e;if(!t)throw new o.default("scale-range:invalid-parameters","'view' is required");const a=n.minScale||f,i=t.constraints&&"effectiveLODs"in t.constraints&&t.constraints.effectiveLODs||S,l=[];for(let o=0;o<i.length;o++){if(i[o].scale>a)continue;const e=Number(o),n=[e-3,e,e+3,e+6];for(const t of n)t>-1&&t<i.length&&l.push(i[t].scale);break}return l.sort(((e,n)=>e-n))}function z(e,n){const{view:t,layerAdapter:a}=e;if(!t)throw new o.default("scale-range:invalid-parameters","'view' is required");const i=a.fullExtent,l=a.minScale||h,r=a.maxScale||y,c=n.minScale||0,u=n.maxScale||0;let p=null!=i?(0,s.X_)(t,i):0;return p=p<l&&p>r?p:0,{scales:[l,r,c,u,p].map(Math.round).sort(((e,n)=>e-n)).filter(((e,n,t)=>!!e&&t.indexOf(e)===n)).filter(((e,n,t)=>!n||Math.abs(e-t[n-1])>5)),fullExtentScale:p}}function T(e,n){const{spatialStatistics:t,minScale:a,maxScale:i}=n;if(!("avgSize"in t)||!t.avgSize)throw new o.default("size-range:insufficient-info","average polygon size is invalid");const s=t.avgSize,{view:u}=e;if(!u)throw new o.default("scale-range:invalid-parameters","'view' is required");const{resolution:p,scale:m}=u,d=p/m,{scales:f,fullExtentScale:h}=z(e,{minScale:a,maxScale:i}),y=[],w=[];return f.forEach(((e,n)=>{const{min:t,max:a}=function(e,n){const t=Math.ceil(e/n);let a=Math.ceil(t/4);a<4?a=4:a>16&&(a=16);const i=5*a;return{min:a,max:i<50?50:i}}(s,d*e),i=f.indexOf(h),o=i>-1&&n>i?2:1;y.push(new c.default({value:e,size:(0,l.PN)(t/o)})),w.push(new c.default({value:e,size:(0,l.PN)(a/o)}))})),{minSize:new r.default({valueExpression:"$view.scale",stops:y}),maxSize:new r.default({valueExpression:"$view.scale",stops:w})}}async function M(e){const n=await async function(e){const{view:n}=e;if(!(e&&n&&e.layer))throw new o.default("size-range:missing-parameters","'view' and 'layer' parameters are required");e.forBinning&&(0,p.p)(e,"size-range");const{layer:t}=e,l=(0,i.A)(e,d),s=e.forBinning?m.Mi:m.J4,r=(0,m.Jg)(t,s,e.forBinning);if(!r)throw new o.default("size-range:invalid-parameters","'layer' must be one of these types: "+(0,m.Ho)(s).join(", "));const c=(0,a.A)((0,a.A)({layerAdapter:r},l),{},{view:n});await n.when();const u=null!=c.signal?{signal:c.signal}:null;await r.load(u);const f=r.geometryType;if("point"!==f&&"multipoint"!==f&&"polyline"!==f&&"polygon"!==f)throw new o.default("size-range:not-supported","sizeRange is not supported for geometryType: ".concat(f));return c}(e),{view:t,layerAdapter:s,signal:f,filter:h}=n,y=await(0,u.default)({layer:s,view:t,signal:f,filter:h});switch(s.geometryType){case"point":case"multipoint":return function(e,n){const{minScale:t,maxScale:a}=n,i=x(e,{minScale:t,maxScale:a});if(!i.length)throw new o.default("scale-range:insufficient-info","not enough scale values");return{minSize:new r.default({valueExpression:"$view.scale",stops:i.map(((e,n)=>new c.default({value:e,size:(0,l.PN)(w[n])})))}),maxSize:new r.default({valueExpression:"$view.scale",stops:i.map(((e,n)=>new c.default({value:e,size:(0,l.PN)(v[n])})))})}}(n,y);case"polyline":return function(e,n){const{minScale:t,maxScale:a}=n,i=x(e,{minScale:t,maxScale:a});if(!i.length)throw new o.default("scale-range:insufficient-info","not enough scale values");return{minSize:new r.default({valueExpression:"$view.scale",stops:i.map(((e,n)=>new c.default({value:e,size:(0,l.PN)(g[n])})))}),maxSize:new r.default({valueExpression:"$view.scale",stops:i.map(((e,n)=>new c.default({value:e,size:(0,l.PN)(b[n])})))})}}(n,y);case"polygon":return T(n,y);case"mesh":case"multipatch":return null}return null}},53855:(e,n,t)=>{t.r(n),t.d(n,{cloneScheme:()=>p,getSchemes:()=>u,getThemes:()=>c});var a=t(89379),i=t(69539),o=t(18690),l=t(770),s=t(80791);const r=(0,l.bG)({themeDictionary:{default:{name:"default",label:"Default",description:"Default theme for basic visualization of features.",schemes:{point:{light:{primary:{color:[77,77,77,1],outline:{color:[255,255,255,.25],width:"1px"},size:"8px"},secondary:[{color:[226,119,40,1],outline:{color:[255,255,255,.25],width:"1px"},size:"8px"},{color:[255,255,255,1],outline:{color:[51,51,51,.25],width:"1px"},size:"8px"}]},dark:{primary:{color:[255,255,255,1],outline:{color:[92,92,92,.25],width:"1px"},size:"8px"},secondary:[{color:[226,119,40,1],outline:{color:[255,255,255,.25],width:"1px"},size:"8px"},{color:[26,26,26,1],outline:{color:[178,178,178,.25],width:"1px"},size:"8px"}]}},polyline:{light:{primary:{color:[77,77,77,1],width:"2px"},secondary:[{color:[226,119,40,1],width:"2px"},{color:[255,255,255,1],width:"2px"}]},dark:{primary:{color:[255,255,255,1],width:"2px"},secondary:[{color:[226,119,40,1],width:"2px"},{color:[26,26,26,1],width:"2px"}]}},polygon:{light:{primary:{size:"12px",color:[227,139,79,1],outline:{color:[255,255,255,.25],width:"1px"},opacity:.8},secondary:[{size:"12px",color:[128,128,128,1],outline:{color:[255,255,255,.25],width:"1px"},opacity:.8},{size:"12px",color:[255,255,255,1],outline:{color:[128,128,128,.25],width:"1px"},opacity:.8}]},dark:{primary:{size:"12px",color:[227,139,79,1],outline:{color:[92,92,92,.25],width:"1px"},opacity:.8},secondary:[{size:"12px",color:[178,178,178,1],outline:{color:[92,92,92,.25],width:"1px"},opacity:.8},{size:"12px",color:[26,26,26,1],outline:{color:[128,128,128,.25],width:"1px"},opacity:.8}]}}}}}});function c(e){return(0,l.vt)(r,e)}function u(e){const n=(0,l.Fq)({basemap:e.basemap,geometryType:e.geometryType,basemapTheme:e.basemapTheme,theme:r.get("default")});if(!n)return;const{schemesInfo:t,basemapId:a,basemapTheme:i}=n;return{primaryScheme:m(e,t.primary),secondarySchemes:t.secondary.map((n=>m(e,n))).filter(o.Ru),basemapId:a,basemapTheme:i}}function p(e){if(!e)return;const n=(0,a.A)({},e);return n.color&&(n.color=new i.default(n.color)),"outline"in n&&n.outline&&(n.outline={color:n.outline.color&&new i.default(n.outline.color),width:n.outline.width}),n}function m(e,n){const t="mesh"!==e.geometryType&&e.worldScale?e.view:null;switch(e.geometryType){case"point":case"multipoint":{const e=n;return function(e,n){return{color:new i.default(e.color),outline:{color:new i.default(e.outline.color),width:e.outline.width},size:n?(0,s._J)(e.size,n):e.size,opacity:1}}({color:e.color,outline:(0,a.A)({},e.outline),size:e.size},t)}case"polyline":{const e=n;return function(e,n){return{color:new i.default(e.color),width:n?(0,s._J)(e.width,n):e.width,opacity:1}}({color:e.color,width:e.width},t)}case"polygon":{const e=n;return function(e,n){return{color:new i.default(e.color),outline:{color:new i.default(e.outline.color),width:e.outline.width},size:n?(0,s._J)(e.size,n):e.size,opacity:e.opacity}}({size:e.size,color:e.color,outline:(0,a.A)({},e.outline),opacity:e.opacity},t)}case"mesh":{const e=n;return function(e){return{color:new i.default(e.color),opacity:e.opacity}}({color:e.color,opacity:e.opacity})}}}},80532:(e,n,t)=>{t.r(n),t.d(n,{createRenderer:()=>m});var a=t(89379),i=t(50076),o=t(5766),l=t(33766),s=t(31650),r=t(51006),c=t(90494),u=t(11563),p=t(53855);async function m(e){const n=await async function(e){if(null===e||void 0===e||!e.layer)throw new i.default("location-renderer:missing-parameters","'layer' parameter is required");e.forBinning&&(0,c.p)(e,"location-renderer");const n=(0,a.A)((0,a.A)({},e),{},{layer:e.layer});n.symbolType=n.symbolType||"2d";const t=e.forBinning?u.Mi:u.J4,o=(0,u.Jg)(n.layer,t,e.forBinning);if(!o)throw new i.default("location-renderer:invalid-parameters","'layer' must be one of these types: "+(0,u.Ho)(t).join(", "));n.layer=o;const l=null!=n.signal?{signal:n.signal}:null;await o.load(l);const s=o.geometryType;if(n.outlineOptimizationEnabled="polygon"===s&&n.outlineOptimizationEnabled,n.sizeOptimizationEnabled=("point"===s||"multipoint"===s||"polyline"===s)&&n.sizeOptimizationEnabled,"mesh"===s)n.symbolType="3d-volumetric",n.colorMixMode=n.colorMixMode||"replace",n.edgesType=n.edgesType||"none";else{if("3d-volumetric-uniform"===n.symbolType&&"point"!==s)throw new i.default("location-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(n.symbolType.includes("3d-volumetric")&&(!n.view||"3d"!==n.view.type))throw new i.default("location-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}return n}(e),t=n.layer.geometryType,m=await async function(e,n){var t;let a=e.locationScheme,i=null,o=null;const l=await(0,r.Ib)(e.basemap,e.view);if(i=null!=l.basemapId?l.basemapId:null,o=null!=l.basemapTheme?l.basemapTheme:null,a)return{scheme:(0,p.cloneScheme)(a),basemapId:i,basemapTheme:o};const s=(0,p.getSchemes)({basemapTheme:o,geometryType:n,worldScale:!(null===(t=e.symbolType)||void 0===t||!t.includes("3d-volumetric")),view:e.view});return s&&(a=s.primaryScheme,i=s.basemapId,o=s.basemapTheme),{scheme:a,basemapId:i,basemapTheme:o}}(n,t),d=m.scheme;if(!d)throw new i.default("location-renderer:insufficient-info","Unable to find location scheme");const{view:f,layer:h,signal:y,filter:w}=n,[v,g]=await Promise.all([n.outlineOptimizationEnabled?(0,l.A)({view:f,layer:h,signal:y,filter:w}).catch(r.ou):null,n.sizeOptimizationEnabled?(0,s.default)({view:f,layer:h,signal:y,filter:w}).catch(r.ou):null]),b=null===v||void 0===v?void 0:v.opacity,S=new o.default({symbol:(0,r.v5)(t,{type:n.symbolType,color:d.color,size:(0,r.N6)(d,t),outline:(0,r.qc)(d,t,b),meshInfo:{colorMixMode:n.colorMixMode,edgesType:n.edgesType}})});return null!==v&&void 0!==v&&v.visualVariables.length&&(S.visualVariables=v.visualVariables.map((e=>e.clone()))),null!==g&&void 0!==g&&g.minSize&&(S.visualVariables?S.visualVariables.push(g.minSize):S.visualVariables=[g.minSize]),{renderer:S,locationScheme:(0,p.cloneScheme)(d),basemapId:m.basemapId,basemapTheme:m.basemapTheme}}},80791:(e,n,t)=>{t.d(n,{_J:()=>c,_t:()=>r});var a=t(76931),i=t(42633);const o=i.Np.light,l=i.Np.dark;function s(e,n){return e.r===n.r&&e.g===n.g&&e.b===n.b}function r(e,n){let t=0;if(e.length===n.length){let a=e.every(((e,t)=>s(e,n[t])));a?t=1:(a=e.slice().reverse().every(((e,t)=>s(e,n[t]))),a&&(t=-1))}return t}function c(e,n){return Math.ceil(function(e){const n=e.width,t=e.height;let i=e.pixelSizeAt(e.toMap((0,a.tc)(.5*n,.5*t),{exclude:[]}));if(i<=0&&(i=e.pixelSizeAt(e.toMap((0,a.tc)(.5*n,.95*t),{exclude:[]})),i<=0&&"camera"in e)){const n=e.camera.position.clone();n.z=0,i=2*e.pixelSizeAt(n)}return i}(n)*(0,a.Lz)((0,a.cr)(e)))}}}]);
//# sourceMappingURL=80532.3cdc4049.chunk.js.map