"use strict";(self.webpackChunksc_depot=self.webpackChunksc_depot||[]).push([[10719,62675],{10719:(e,t,r)=>{r.r(t),r.d(t,{default:()=>d});var o=r(35143),s=r(39356),n=r(42553),l=r(46053),i=(r(81806),r(76460),r(47249),r(85842)),u=r(62675),a=r(77725);let p=class extends n.A{constructor(e){super(e),this.directionLines=null,this.directionPoints=null,this.directions=null,this.route=null,this.routeName=null,this.stops=null,this.traversedEdges=null,this.traversedJunctions=null,this.traversedTurns=null}};(0,o._)([(0,l.MZ)({type:a.default,json:{write:!0}})],p.prototype,"directionLines",void 0),(0,o._)([(0,l.MZ)({type:a.default,json:{write:!0}})],p.prototype,"directionPoints",void 0),(0,o._)([(0,l.MZ)({type:u.default,json:{write:!0}})],p.prototype,"directions",void 0),(0,o._)([(0,l.MZ)({type:s.default,json:{write:!0}})],p.prototype,"route",void 0),(0,o._)([(0,l.MZ)({type:String,json:{write:!0}})],p.prototype,"routeName",void 0),(0,o._)([(0,l.MZ)({type:[s.default],json:{write:!0}})],p.prototype,"stops",void 0),(0,o._)([(0,l.MZ)({type:a.default,json:{write:!0}})],p.prototype,"traversedEdges",void 0),(0,o._)([(0,l.MZ)({type:a.default,json:{write:!0}})],p.prototype,"traversedJunctions",void 0),(0,o._)([(0,l.MZ)({type:a.default,json:{write:!0}})],p.prototype,"traversedTurns",void 0),p=(0,o._)([(0,i.$)("esri.rest.support.RouteResult")],p);const d=p},62675:(e,t,r)=>{r.r(t),r.d(t,{default:()=>c});var o=r(35143),s=r(18690),n=r(46053),l=(r(81806),r(76460),r(28379)),i=r(85842),u=r(76797),a=r(23701),p=r(13312),d=r(79219),y=r(77725);let f=class extends y.default{constructor(e){super(e),this.extent=null,this.features=[],this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,t){var r;if(!e)return[];const o=null!==(r=t.summary.envelope.spatialReference)&&void 0!==r?r:t.spatialReference,s=o&&p.default.fromJSON(o);return e.map((e=>{const t=d.default.fromJSON(e);if(null!=t.geometry&&(t.geometry.spatialReference=s),null!=t.events)for(const r of t.events)null!=r.geometry&&(r.geometry.spatialReference=s);return t}))}get mergedGeometry(){return this.features?function(e,t){if(0===e.length)return new a.default({spatialReference:t});const r=[];for(const l of e)for(const e of l.paths)r.push(...e);const o=[];r.forEach(((e,t)=>{0!==t&&e[0]===r[t-1][0]&&e[1]===r[t-1][1]||o.push(e)}));const{hasM:s,hasZ:n}=e[0];return new a.default({hasM:s,hasZ:n,paths:[o],spatialReference:t})}(this.features.map((e=>{let{geometry:t}=e;return t})),this.extent.spatialReference):null}get strings(){return this.features.flatMap((e=>{let{strings:t}=e;return t})).filter(s.Ru)}};(0,o._)([(0,n.MZ)({type:u.default,json:{read:{source:"summary.envelope"}}})],f.prototype,"extent",void 0),(0,o._)([(0,n.MZ)({nonNullable:!0})],f.prototype,"features",void 0),(0,o._)([(0,l.w)("features")],f.prototype,"readFeatures",null),(0,o._)([(0,n.MZ)()],f.prototype,"geometryType",void 0),(0,o._)([(0,n.MZ)({readOnly:!0})],f.prototype,"mergedGeometry",null),(0,o._)([(0,n.MZ)()],f.prototype,"routeId",void 0),(0,o._)([(0,n.MZ)()],f.prototype,"routeName",void 0),(0,o._)([(0,n.MZ)({value:null,readOnly:!0})],f.prototype,"strings",null),(0,o._)([(0,n.MZ)({json:{read:{source:"summary.totalDriveTime"}}})],f.prototype,"totalDriveTime",void 0),(0,o._)([(0,n.MZ)({json:{read:{source:"summary.totalLength"}}})],f.prototype,"totalLength",void 0),(0,o._)([(0,n.MZ)({json:{read:{source:"summary.totalTime"}}})],f.prototype,"totalTime",void 0),f=(0,o._)([(0,i.$)("esri.rest.support.DirectionsFeatureSet")],f);const c=f}}]);
//# sourceMappingURL=10719.1f11a1c2.chunk.js.map